/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import TimeDate.HolidaysList;
import Clavis.Function;
import Clavis.TypeOfMaterial;
import FileIOAux.ImageAux;
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Event;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowStateListener;
import java.io.IOException;
import java.text.ParseException;
import java.util.Calendar;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.border.Border;
import javax.swing.border.EmptyBorder;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.plaf.basic.BasicSplitPaneDivider;
import javax.swing.plaf.basic.BasicSplitPaneUI;

/**
 *
 * @author Ant√≥nio Santos
 */
public class KeyQuest extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;

    /**
     * Creates new form KeyQuest
     */
    public KeyQuest() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogDefHolidays = new javax.swing.JDialog();
        jPanelDefHolidays = new javax.swing.JPanel();
        jLabelListaFeriadosDefeito = new javax.swing.JLabel();
        jPanelListaFeriadosDefeito = new javax.swing.JPanel();
        jScrollPaneFeriadosDefeito = new javax.swing.JScrollPane();
        jListFeriadosDefeito = new javax.swing.JList<>();
        jPanelListaFeriadosEscolhidos = new javax.swing.JPanel();
        jScrollPaneFeriadosEscolhidos = new javax.swing.JScrollPane();
        jListFeriadosEscolhidos = new javax.swing.JList<>();
        jLabelListaFeriadosEscolhidos = new javax.swing.JLabel();
        jRadioButtonCarnaval = new javax.swing.JRadioButton();
        jRadioButtonSextaFeira = new javax.swing.JRadioButton();
        jRadioButtonPascoa = new javax.swing.JRadioButton();
        jRadioButtonCorpoDeus = new javax.swing.JRadioButton();
        jButtonDefHolidaysDireita = new javax.swing.JButton();
        jButtonDefHolidaysApagar = new javax.swing.JButton();
        jButtonDefHolidaysVoltar = new javax.swing.JButton();
        jButtonDefHolidaysMais = new javax.swing.JButton();
        jDialogDefBreaks = new javax.swing.JDialog();
        jPanelDefBreaks = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListFerias = new javax.swing.JList<>();
        jButtonDefBreaksVoltar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButtonDefBreakApagar = new javax.swing.JButton();
        jLabelDefBreaksInicio = new javax.swing.JLabel();
        jLabelDefBreaksTermino = new javax.swing.JLabel();
        jComboBoxDefBreaksDiaInicio = new javax.swing.JComboBox<>();
        jLabelDefBreaksDiaInicio = new javax.swing.JLabel();
        jLabelDefBreaksMesInicio = new javax.swing.JLabel();
        jComboBoxDefBreaksMesInicio = new javax.swing.JComboBox<>();
        jLabelDefBreaksAnoInicio = new javax.swing.JLabel();
        jComboBoxDefBreaksAnoInicio = new javax.swing.JComboBox<>();
        jLabelDefBreaksDiaFim = new javax.swing.JLabel();
        jComboBoxDefBreaksDiaFim = new javax.swing.JComboBox<>();
        jLabelDefBreaksMesFim = new javax.swing.JLabel();
        jComboBoxDefBreaksMesFim = new javax.swing.JComboBox<>();
        jLabelDefBreaksAnoFim = new javax.swing.JLabel();
        jComboBoxDefBreaksAnoFim = new javax.swing.JComboBox<>();
        jButtonDefBreaksAdicionar = new javax.swing.JButton();
        jTextFieldDefBreaksNome = new javax.swing.JTextField();
        jLabelDefBreaksNome = new javax.swing.JLabel();
        jDialogDefOpcoes = new javax.swing.JDialog();
        jPanelDefOpcoes = new javax.swing.JPanel();
        jPanelDefOpcoes2 = new javax.swing.JPanel();
        jLabelTituloDefOpcoes = new javax.swing.JLabel();
        jLabelMudaTemaQuadros = new javax.swing.JLabel();
        jComboBoxMudaTema = new javax.swing.JComboBox<>();
        jLabelMudaLinguagem = new javax.swing.JLabel();
        jComboBoxMudaLinguagem = new javax.swing.JComboBox<>();
        jButtonLinguaMudaConfirma = new javax.swing.JButton();
        jLabelLinguaMuda = new javax.swing.JLabel();
        jSliderTamanhoDivisor = new javax.swing.JSlider();
        jLabelMudaTamanhoDivisor = new javax.swing.JLabel();
        jLabelMudaCorDivisor = new javax.swing.JLabel();
        jPanelMudaCorSlider = new javax.swing.JPanel();
        jSliderRed = new javax.swing.JSlider();
        jLabelRed = new javax.swing.JLabel();
        jSliderGreen = new javax.swing.JSlider();
        jSliderBlue = new javax.swing.JSlider();
        jLabelGreen = new javax.swing.JLabel();
        jLabelBlue = new javax.swing.JLabel();
        jDialogListaBotoes = new javax.swing.JDialog();
        jPanelListaBotoes = new javax.swing.JPanel();
        jScrollPaneMaterialBotoes = new javax.swing.JScrollPane();
        jTabbedPaneMaterialBotoes = new javax.swing.JTabbedPane();
        jLabel2 = new javax.swing.JLabel();
        jPanelInicial = new javax.swing.JPanel();
        jSplitPaneInicial = new javax.swing.JSplitPane();
        jPanelBaixo = new javax.swing.JPanel();
        jScrollPaneDevolucoes = new javax.swing.JScrollPane();
        jLabelTituloDevolucoes = new javax.swing.JLabel();
        jLabelDetalhesDevolucoes = new javax.swing.JLabel();
        jPanelInformaBaixoBaixo = new javax.swing.JPanel();
        jScrollPaneInformaBaixo = new javax.swing.JScrollPane();
        jPanelInformaBaixoCima = new javax.swing.JPanel();
        jButtonConfirmaDevolucao = new javax.swing.JButton();
        jButtonAlteraDevolucao = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jPanelCima = new javax.swing.JPanel();
        jScrollPaneRequisicoes = new javax.swing.JScrollPane();
        jLabelTitulorequisicoes = new javax.swing.JLabel();
        jPanelInformaCimaBaixo = new javax.swing.JPanel();
        jScrollPaneInformaCima = new javax.swing.JScrollPane();
        jPanelInformaCimaCima = new javax.swing.JPanel();
        jButtonAtuacaoConfirma = new javax.swing.JButton();
        jButtonAtuacaoAltera = new javax.swing.JButton();
        jTextFieldProcuraCima = new javax.swing.JTextField();
        jButtonProcuraCima = new javax.swing.JButton();
        jPanelTituloOcupacoes = new javax.swing.JPanel();
        jLabelTituloOcupacoes = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        jToggleButtonBarRequisicoes = new javax.swing.JToggleButton();
        jToggleButtonBarEntregas = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jComboBoxVista = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jComboBoxListaBotoes = new javax.swing.JComboBox<>();
        jButtonListaBotoes = new javax.swing.JButton();

        jDialogDefHolidays.setTitle("Editar Feriados");
        jDialogDefHolidays.setMinimumSize(new java.awt.Dimension(700, 500));
        jDialogDefHolidays.setResizable(false);

        jPanelDefHolidays.setBackground(new java.awt.Color(254, 254, 254));
        jPanelDefHolidays.setBorder(null);
        jPanelDefHolidays.setPreferredSize(new java.awt.Dimension(660, 528));
        jPanelDefHolidays.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelDefHolidaysMouseClicked(evt);
            }
        });

        jLabelListaFeriadosDefeito.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        jLabelListaFeriadosDefeito.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelListaFeriadosDefeito.setText("Lista de feriados fixos por defeito: ");
        jLabelListaFeriadosDefeito.setText(lingua.translate("Lista_feriados_por_defeito"));

        jPanelListaFeriadosDefeito.setBackground(new java.awt.Color(1, 1, 1));

        jListFeriadosDefeito.setBackground(new java.awt.Color(216, 220, 227));
        jListFeriadosDefeito.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListFeriadosDefeitoMouseClicked(evt);
            }
        });
        jListFeriadosDefeito.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jListFeriadosDefeitoPropertyChange(evt);
            }
        });
        jListFeriadosDefeito.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jListFeriadosDefeitoKeyPressed(evt);
            }
        });
        jListFeriadosDefeito.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListFeriadosDefeitoValueChanged(evt);
            }
        });
        jListFeriadosDefeito.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jScrollPaneFeriadosDefeito.setViewportView(jListFeriadosDefeito);

        javax.swing.GroupLayout jPanelListaFeriadosDefeitoLayout = new javax.swing.GroupLayout(jPanelListaFeriadosDefeito);
        jPanelListaFeriadosDefeito.setLayout(jPanelListaFeriadosDefeitoLayout);
        jPanelListaFeriadosDefeitoLayout.setHorizontalGroup(
            jPanelListaFeriadosDefeitoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneFeriadosDefeito, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
        );
        jPanelListaFeriadosDefeitoLayout.setVerticalGroup(
            jPanelListaFeriadosDefeitoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneFeriadosDefeito, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanelListaFeriadosEscolhidos.setBackground(new java.awt.Color(1, 1, 1));

        jListFeriadosEscolhidos.setBackground(new java.awt.Color(254, 254, 234));
        jListFeriadosEscolhidos.setToolTipText("");
        jListFeriadosEscolhidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListFeriadosEscolhidosMouseClicked(evt);
            }
        });
        jListFeriadosEscolhidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jListFeriadosEscolhidosKeyPressed(evt);
            }
        });
        jListFeriadosEscolhidos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListFeriadosEscolhidosValueChanged(evt);
            }
        });
        jListFeriadosEscolhidos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jScrollPaneFeriadosEscolhidos.setViewportView(jListFeriadosEscolhidos);

        javax.swing.GroupLayout jPanelListaFeriadosEscolhidosLayout = new javax.swing.GroupLayout(jPanelListaFeriadosEscolhidos);
        jPanelListaFeriadosEscolhidos.setLayout(jPanelListaFeriadosEscolhidosLayout);
        jPanelListaFeriadosEscolhidosLayout.setHorizontalGroup(
            jPanelListaFeriadosEscolhidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneFeriadosEscolhidos, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
        );
        jPanelListaFeriadosEscolhidosLayout.setVerticalGroup(
            jPanelListaFeriadosEscolhidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneFeriadosEscolhidos)
        );

        jLabelListaFeriadosEscolhidos.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        jLabelListaFeriadosEscolhidos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelListaFeriadosEscolhidos.setText("Lista de feriados fixos por defeito: ");
        jLabelListaFeriadosDefeito.setText(lingua.translate("Lista_feriados_por_defeito"));

        jRadioButtonCarnaval.setText("Carnaval");
        jRadioButtonCarnaval.setFocusPainted(false);
        jRadioButtonCarnaval.setText(lingua.translate("Carnaval"));
        jRadioButtonCarnaval.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButtonCarnavalStateChanged(evt);
            }
        });
        jRadioButtonCarnaval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCarnavalActionPerformed(evt);
            }
        });

        jRadioButtonSextaFeira.setText("Sexta-feira santa");
        jRadioButtonSextaFeira.setFocusPainted(false);
        jRadioButtonSextaFeira.setText(lingua.translate("Sexta-feira_santa"));
        jRadioButtonSextaFeira.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSextaFeiraActionPerformed(evt);
            }
        });

        jRadioButtonPascoa.setText("P√°scoa");
        jRadioButtonPascoa.setFocusPainted(false);
        jRadioButtonPascoa.setText(lingua.translate("P√°scoa"));
        jRadioButtonPascoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPascoaActionPerformed(evt);
            }
        });

        jRadioButtonCorpoDeus.setText("Corpo de Deus");
        jRadioButtonCorpoDeus.setFocusPainted(false);
        jRadioButtonCorpoDeus.setText(lingua.translate("corpo_deus"));
        jRadioButtonCorpoDeus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCorpoDeusActionPerformed(evt);
            }
        });

        jButtonDefHolidaysDireita.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonDefHolidaysDireita.setFocusPainted(false);
        jButtonDefHolidaysDireita.setBackground(new Color(254,254,254));
        jButtonDefHolidaysDireita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefHolidaysDireitaActionPerformed(evt);
            }
        });

        jButtonDefHolidaysApagar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonDefHolidaysApagar.setFocusPainted(false);
        jButtonDefHolidaysApagar.setBackground(new Color(254,254,254));
        jButtonDefHolidaysApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefHolidaysApagarActionPerformed(evt);
            }
        });

        jButtonDefHolidaysVoltar.setBackground(new java.awt.Color(1, 1, 1));
        jButtonDefHolidaysVoltar.setForeground(new java.awt.Color(254, 254, 254));
        //jButtonDefHolidaysVoltar.setText(lingua.translate("Voltar"));
        jButtonDefHolidaysVoltar.setToolTipText("");
        jButtonDefHolidaysVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonDefHolidaysVoltar.setFocusPainted(false);
        //jButtonDefHolidaysVoltar.setMnemonic(lingua.translate("Voltar").charAt(0));
        jButtonDefHolidaysVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefHolidaysVoltarActionPerformed(evt);
            }
        });

        jButtonDefHolidaysMais.setBackground(new java.awt.Color(204, 207, 207));
        jButtonDefHolidaysMais.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonDefHolidaysMais.setFocusPainted(false);
        jButtonDefHolidaysMais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefHolidaysMaisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDefHolidaysLayout = new javax.swing.GroupLayout(jPanelDefHolidays);
        jPanelDefHolidays.setLayout(jPanelDefHolidaysLayout);
        jPanelDefHolidaysLayout.setHorizontalGroup(
            jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDefHolidaysLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDefHolidaysLayout.createSequentialGroup()
                        .addGroup(jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDefHolidaysLayout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addGroup(jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButtonSextaFeira)
                                    .addComponent(jRadioButtonCarnaval)
                                    .addComponent(jRadioButtonPascoa)
                                    .addComponent(jRadioButtonCorpoDeus)))
                            .addComponent(jPanelListaFeriadosDefeito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonDefHolidaysDireita, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonDefHolidaysApagar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonDefHolidaysMais, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonDefHolidaysVoltar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)))
                    .addGroup(jPanelDefHolidaysLayout.createSequentialGroup()
                        .addComponent(jLabelListaFeriadosDefeito, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelListaFeriadosEscolhidos, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelDefHolidaysLayout.createSequentialGroup()
                        .addComponent(jPanelListaFeriadosEscolhidos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(19, 19, 19)))
                .addContainerGap())
        );
        jPanelDefHolidaysLayout.setVerticalGroup(
            jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDefHolidaysLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelListaFeriadosDefeito, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelListaFeriadosEscolhidos, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelDefHolidaysLayout.createSequentialGroup()
                        .addGroup(jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelListaFeriadosDefeito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelDefHolidaysLayout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jButtonDefHolidaysDireita, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonDefHolidaysApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonDefHolidaysMais, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonDefHolidaysVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonCarnaval)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonSextaFeira)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonPascoa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonCorpoDeus))
                    .addComponent(jPanelListaFeriadosEscolhidos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        jLabelListaFeriadosEscolhidos.setText(lingua.translate("Lista_feriados_escolhidos"));
        try {
            java.awt.image.BufferedImage image = ImageIO.read(getClass().getResourceAsStream("Images/arrow_right.png"));
            javax.swing.ImageIcon icon = new javax.swing.ImageIcon(image);
            jButtonDefHolidaysDireita.setIcon(icon);
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        jButtonDefHolidaysDireita.setToolTipText(lingua.translate("Adicionar_feriado"));
        java.awt.image.BufferedImage image2 = null;
        try {
            image2 = ImageIO.read(getClass().getResourceAsStream("Images/delete.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (image2 != null) {
            javax.swing.ImageIcon icon2 = new javax.swing.ImageIcon(image2);
            jButtonDefHolidaysApagar.setIcon(icon2);
        }
        jButtonDefHolidaysApagar.setToolTipText(lingua.translate("Apagar"));
        java.awt.image.BufferedImage image5 = null;
        try {
            image5 = ImageIO.read(getClass().getResourceAsStream("Images/porta3.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (image5 != null) {
            javax.swing.ImageIcon icon5 = new javax.swing.ImageIcon(image5);
            jButtonDefHolidaysVoltar.setIcon(icon5);
        }
        jButtonDefHolidaysVoltar.setToolTipText(lingua.translate("Voltar"));
        java.awt.image.BufferedImage image3 = null;
        try {
            image3 = ImageIO.read(getClass().getResourceAsStream("Images/plus.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (image3 != null) {
            javax.swing.ImageIcon icon3 = new javax.swing.ImageIcon(image3);
            jButtonDefHolidaysMais.setIcon(icon3);
        }
        jButtonDefHolidaysMais.setBackground(Color.BLUE);
        jButtonDefHolidaysMais.setToolTipText(lingua.translate("Adicionar_feriado_personalizado"));

        javax.swing.GroupLayout jDialogDefHolidaysLayout = new javax.swing.GroupLayout(jDialogDefHolidays.getContentPane());
        jDialogDefHolidays.getContentPane().setLayout(jDialogDefHolidaysLayout);
        jDialogDefHolidaysLayout.setHorizontalGroup(
            jDialogDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelDefHolidays, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialogDefHolidaysLayout.setVerticalGroup(
            jDialogDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelDefHolidays, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.border.Border border11 = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 254, 254), 6),javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1));
        javax.swing.border.Border border22 = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1),border11);

        jPanelDefHolidays.setBorder(border22);

        jDialogDefHolidays.setTitle(lingua.translate("Editar")+" "+lingua.translate("Feriados"));

        jDialogDefBreaks.setTitle("Editar per√≠odos de interrup√ß√£o");
        jDialogDefBreaks.setMinimumSize(new java.awt.Dimension(700, 500));
        jDialogDefBreaks.setResizable(false);

        jPanelDefBreaks.setBackground(new java.awt.Color(254, 254, 254));
        jPanelDefBreaks.setBorder(null);
        jPanelDefBreaks.setPreferredSize(new java.awt.Dimension(680, 528));
        jPanelDefBreaks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelDefBreaksMouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(1, 1, 1));

        jListFerias.setBackground(new java.awt.Color(254, 254, 234));
        jListFerias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListFeriasMouseClicked(evt);
            }
        });
        jListFerias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jListFeriasKeyPressed(evt);
            }
        });
        jListFerias.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListFeriasValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jListFerias);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        jButtonDefBreaksVoltar.setBackground(new java.awt.Color(1, 1, 1));
        jButtonDefBreaksVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonDefBreaksVoltar.setFocusPainted(false);
        jButtonDefBreaksVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefBreaksVoltarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Cantarell", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Adicionar per√≠odos:");
        jLabel1.setText(lingua.translate("Adicionar_periodos"));

        jButtonDefBreakApagar.setFocusPainted(false);
        jButtonDefBreakApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefBreakApagarActionPerformed(evt);
            }
        });

        jLabelDefBreaksInicio.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        jLabelDefBreaksInicio.setText("In√≠cio:");

        jLabelDefBreaksTermino.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        jLabelDefBreaksTermino.setText("T√©rmino:");

        jComboBoxDefBreaksDiaInicio.setFocusable(false);

        jLabelDefBreaksDiaInicio.setText("Dia:");

        jLabelDefBreaksMesInicio.setText("M√™s:");

        jComboBoxDefBreaksMesInicio.setFocusable(false);

        jLabelDefBreaksAnoInicio.setText("Ano:");

        jComboBoxDefBreaksAnoInicio.setFocusable(false);

        jLabelDefBreaksDiaFim.setText("Dia:");

        jComboBoxDefBreaksDiaFim.setFocusable(false);

        jLabelDefBreaksMesFim.setText("M√™s:");

        jComboBoxDefBreaksMesFim.setFocusable(false);

        jLabelDefBreaksAnoFim.setText("Ano:");

        jComboBoxDefBreaksAnoFim.setFocusable(false);

        jButtonDefBreaksAdicionar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonDefBreaksAdicionar.setFocusPainted(false);
        jButtonDefBreaksAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefBreaksAdicionarActionPerformed(evt);
            }
        });

        jTextFieldDefBreaksNome.setBackground(new java.awt.Color(210, 214, 221));
        jTextFieldDefBreaksNome.setToolTipText("");
        jTextFieldDefBreaksNome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextFieldDefBreaksNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldDefBreaksNomeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDefBreaksNomeFocusLost(evt);
            }
        });
        jTextFieldDefBreaksNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldDefBreaksNomeKeyReleased(evt);
            }
        });

        jLabelDefBreaksNome.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        jLabelDefBreaksNome.setText("Nome:");

        javax.swing.GroupLayout jPanelDefBreaksLayout = new javax.swing.GroupLayout(jPanelDefBreaks);
        jPanelDefBreaks.setLayout(jPanelDefBreaksLayout);
        jPanelDefBreaksLayout.setHorizontalGroup(
            jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDefBreaksLayout.createSequentialGroup()
                .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDefBreaksLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDefBreaksLayout.createSequentialGroup()
                                .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelDefBreaksInicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDefBreaksLayout.createSequentialGroup()
                                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanelDefBreaksLayout.createSequentialGroup()
                                                .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabelDefBreaksMesInicio)
                                                    .addComponent(jLabelDefBreaksDiaInicio)
                                                    .addComponent(jLabelDefBreaksMesFim)
                                                    .addComponent(jLabelDefBreaksAnoFim))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jComboBoxDefBreaksMesFim, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jComboBoxDefBreaksAnoFim, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(jPanelDefBreaksLayout.createSequentialGroup()
                                                .addComponent(jLabelDefBreaksDiaFim)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jComboBoxDefBreaksDiaFim, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanelDefBreaksLayout.createSequentialGroup()
                                                .addComponent(jLabelDefBreaksNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextFieldDefBreaksNome, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(24, 24, 24)))
                                .addGap(22, 22, 22))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDefBreaksLayout.createSequentialGroup()
                                .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanelDefBreaksLayout.createSequentialGroup()
                                        .addComponent(jLabelDefBreaksAnoInicio)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jComboBoxDefBreaksAnoInicio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBoxDefBreaksMesInicio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBoxDefBreaksDiaInicio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabelDefBreaksTermino, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(45, 45, 45))))
                    .addGroup(jPanelDefBreaksLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jButtonDefBreaksVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDefBreaksAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDefBreakApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );
        jPanelDefBreaksLayout.setVerticalGroup(
            jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDefBreaksLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelDefBreaksLayout.createSequentialGroup()
                        .addComponent(jLabelDefBreaksInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDefBreaksDiaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxDefBreaksDiaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDefBreaksMesInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxDefBreaksMesInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDefBreaksAnoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxDefBreaksAnoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addComponent(jLabelDefBreaksTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDefBreaksDiaFim, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxDefBreaksDiaFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDefBreaksMesFim, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxDefBreaksMesFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDefBreaksAnoFim, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxDefBreaksAnoFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDefBreaksNome, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldDefBreaksNome, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonDefBreakApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDefBreaksVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDefBreaksAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        if (image5 != null) {
            javax.swing.ImageIcon icon5 = new javax.swing.ImageIcon(image5);
            jButtonDefBreaksVoltar.setIcon(icon5);
        }
        jButtonDefBreaksVoltar.setToolTipText(lingua.translate("Voltar"));
        jButtonDefBreakApagar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonDefBreakApagar.setBackground(new Color(254,254,254));
        if (image2 != null) {
            javax.swing.ImageIcon icon2 = new javax.swing.ImageIcon(image2);
            jButtonDefBreakApagar.setIcon(icon2);
        }
        jButtonDefBreakApagar.setToolTipText(lingua.translate("Eliminar"));
        jLabelDefBreaksInicio.setText(lingua.translate("In√≠cio")+":");
        jLabelDefBreaksTermino.setText(lingua.translate("T√©rmino")+":");
        jLabelDefBreaksDiaInicio.setText(lingua.translate("Dia")+":");
        jLabelDefBreaksMesInicio.setText(lingua.translate("M√™s")+":");
        jLabelDefBreaksAnoInicio.setText(lingua.translate("Ano")+":");
        jLabelDefBreaksDiaFim.setText(lingua.translate("Dia")+":");
        jLabelDefBreaksMesFim.setText(lingua.translate("M√™s")+":");
        jLabelDefBreaksAnoFim.setText(lingua.translate("Ano")+":");
        jButtonDefBreaksAdicionar.setBackground(new Color(254,254,254));
        if (image3 != null) {
            javax.swing.ImageIcon icon3 = new javax.swing.ImageIcon(image3);
            jButtonDefBreaksAdicionar.setIcon(icon3);
        }
        jButtonDefBreaksAdicionar.setToolTipText(lingua.translate("Adicionar"));
        jTextFieldDefBreaksNome.setToolTipText(lingua.translate("Introduzir_um_nome_para_o_periodo_indicado."));
        Border borderg = BorderFactory.createLineBorder(Color.black,1);
        Border borderf = BorderFactory.createEmptyBorder(0, 10, 0, 10);
        jTextFieldDefBreaksNome.setBorder( BorderFactory.createCompoundBorder(borderg, borderf));
        jTextFieldDefBreaksNome.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updatejTextFieldDefBreak();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updatejTextFieldDefBreak();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {

            }
        });
        jLabelDefBreaksNome.setText(lingua.translate("Nome")+":");

        javax.swing.GroupLayout jDialogDefBreaksLayout = new javax.swing.GroupLayout(jDialogDefBreaks.getContentPane());
        jDialogDefBreaks.getContentPane().setLayout(jDialogDefBreaksLayout);
        jDialogDefBreaksLayout.setHorizontalGroup(
            jDialogDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelDefBreaks, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
        );
        jDialogDefBreaksLayout.setVerticalGroup(
            jDialogDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelDefBreaks, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
        );

        javax.swing.border.Border border111 = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 254, 254), 6),javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1));
        javax.swing.border.Border border222 = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1),border111);

        jPanelDefBreaks.setBorder(border222);

        jDialogDefBreaks.setTitle(lingua.translate("Editar_per√≠odos_de_interrup√ß√£o"));

        jDialogDefOpcoes.setMinimumSize(new java.awt.Dimension(700, 500));
        jDialogDefOpcoes.setResizable(false);

        jPanelDefOpcoes.setBackground(new java.awt.Color(254, 254, 254));
        jPanelDefOpcoes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelDefOpcoes.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanelDefOpcoes.setPreferredSize(new java.awt.Dimension(700, 468));

        jPanelDefOpcoes2.setBackground(new java.awt.Color(254, 254, 254));
        jPanelDefOpcoes2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelTituloDefOpcoes.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        jLabelTituloDefOpcoes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTituloDefOpcoes.setText("Personificar");

        jLabelMudaTemaQuadros.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        jLabelMudaTemaQuadros.setText("Tema de quadros: ");

        jComboBoxMudaTema.setFocusable(false);
        jComboBoxMudaTema.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxMudaTemaItemStateChanged(evt);
            }
        });
        jComboBoxMudaTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMudaTemaActionPerformed(evt);
            }
        });

        jLabelMudaLinguagem.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        jLabelMudaLinguagem.setText("Lingua de apresenta√ß√£o:");

        jComboBoxMudaLinguagem.setFocusable(false);
        jComboBoxMudaLinguagem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxMudaLinguagemItemStateChanged(evt);
            }
        });
        jComboBoxMudaLinguagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMudaLinguagemActionPerformed(evt);
            }
        });

        jButtonLinguaMudaConfirma.setText("Confirmar");
        jButtonLinguaMudaConfirma.setEnabled(false);
        jButtonLinguaMudaConfirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLinguaMudaConfirmaActionPerformed(evt);
            }
        });

        jLabelLinguaMuda.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelLinguaMuda.setText("O reinicio √© necess√°rio para mudar idioma.");

        jSliderTamanhoDivisor.setMaximum(50);
        jSliderTamanhoDivisor.setMinimum(20);
        jSliderTamanhoDivisor.setMinorTickSpacing(5);
        jSliderTamanhoDivisor.setPaintLabels(true);
        jSliderTamanhoDivisor.setPaintTicks(true);
        jSliderTamanhoDivisor.setValue(25);
        jSliderTamanhoDivisor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderTamanhoDivisorStateChanged(evt);
            }
        });

        jLabelMudaTamanhoDivisor.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        jLabelMudaTamanhoDivisor.setText("Tamanho do divisor:");
        jLabelMudaTamanhoDivisor.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 15, 1));

        jLabelMudaCorDivisor.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        jLabelMudaCorDivisor.setText("Cor do divisor:");
        jLabelMudaCorDivisor.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 10, 1));

        jPanelMudaCorSlider.setBackground(new java.awt.Color(254, 254, 254));

        jSliderRed.setMaximum(254);
        jSliderRed.setMinorTickSpacing(50);
        jSliderRed.setPaintLabels(true);
        jSliderRed.setPaintTicks(true);
        jSliderRed.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderRedStateChanged(evt);
            }
        });

        jLabelRed.setFont(new java.awt.Font("Cantarell", 1, 12)); // NOI18N
        jLabelRed.setForeground(new java.awt.Color(255, 0, 0));
        jLabelRed.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelRed.setText("Vermelho");
        jLabelRed.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 20, 1));

        jSliderGreen.setMaximum(254);
        jSliderGreen.setMinorTickSpacing(50);
        jSliderGreen.setPaintLabels(true);
        jSliderGreen.setPaintTicks(true);
        jSliderGreen.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderGreenStateChanged(evt);
            }
        });

        jSliderBlue.setMaximum(254);
        jSliderBlue.setMinorTickSpacing(50);
        jSliderBlue.setPaintLabels(true);
        jSliderBlue.setPaintTicks(true);
        jSliderBlue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderBlueStateChanged(evt);
            }
        });

        jLabelGreen.setFont(new java.awt.Font("Cantarell", 1, 12)); // NOI18N
        jLabelGreen.setForeground(new java.awt.Color(0, 254, 0));
        jLabelGreen.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelGreen.setText("Verde");
        jLabelGreen.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 20, 1));

        jLabelBlue.setFont(new java.awt.Font("Cantarell", 1, 12)); // NOI18N
        jLabelBlue.setForeground(new java.awt.Color(0, 0, 254));
        jLabelBlue.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelBlue.setText("Azul");
        jLabelBlue.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 20, 1));

        javax.swing.GroupLayout jPanelMudaCorSliderLayout = new javax.swing.GroupLayout(jPanelMudaCorSlider);
        jPanelMudaCorSlider.setLayout(jPanelMudaCorSliderLayout);
        jPanelMudaCorSliderLayout.setHorizontalGroup(
            jPanelMudaCorSliderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMudaCorSliderLayout.createSequentialGroup()
                .addGroup(jPanelMudaCorSliderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSliderGreen, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSliderRed, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSliderBlue, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMudaCorSliderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelRed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelGreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelBlue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanelMudaCorSliderLayout.setVerticalGroup(
            jPanelMudaCorSliderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMudaCorSliderLayout.createSequentialGroup()
                .addGroup(jPanelMudaCorSliderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSliderRed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelRed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMudaCorSliderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelGreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSliderGreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMudaCorSliderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSliderBlue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelBlue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jLabelRed.setText(lingua.translate("Vermelho"));
        jLabelGreen.setText(lingua.translate("Verde"));
        jLabelBlue.setText(lingua.translate("Azul"));

        javax.swing.GroupLayout jPanelDefOpcoes2Layout = new javax.swing.GroupLayout(jPanelDefOpcoes2);
        jPanelDefOpcoes2.setLayout(jPanelDefOpcoes2Layout);
        jPanelDefOpcoes2Layout.setHorizontalGroup(
            jPanelDefOpcoes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDefOpcoes2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDefOpcoes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDefOpcoes2Layout.createSequentialGroup()
                        .addComponent(jLabelTituloDefOpcoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanelDefOpcoes2Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(jPanelDefOpcoes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDefOpcoes2Layout.createSequentialGroup()
                                .addGroup(jPanelDefOpcoes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelMudaLinguagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelMudaTemaQuadros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelDefOpcoes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBoxMudaLinguagem, 0, 277, Short.MAX_VALUE)
                                    .addComponent(jComboBoxMudaTema, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDefOpcoes2Layout.createSequentialGroup()
                                .addComponent(jLabelLinguaMuda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonLinguaMudaConfirma, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelDefOpcoes2Layout.createSequentialGroup()
                                .addGroup(jPanelDefOpcoes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabelMudaCorDivisor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelMudaTamanhoDivisor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelDefOpcoes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSliderTamanhoDivisor, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                                    .addComponent(jPanelMudaCorSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(21, 125, Short.MAX_VALUE))))
        );
        jPanelDefOpcoes2Layout.setVerticalGroup(
            jPanelDefOpcoes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDefOpcoes2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTituloDefOpcoes, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanelDefOpcoes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxMudaTema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMudaTemaQuadros, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelDefOpcoes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMudaLinguagem, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxMudaLinguagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelDefOpcoes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLinguaMuda, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLinguaMudaConfirma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDefOpcoes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSliderTamanhoDivisor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelMudaTamanhoDivisor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDefOpcoes2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelMudaCorDivisor, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelMudaCorSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jLabelTituloDefOpcoes.setText(lingua.translate("Personificar"));
        jLabelMudaTemaQuadros.setText(lingua.translate("Tema_de_quadros")+":");
        jComboBoxMudaTema.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { lingua.translate("Tema_claro"),lingua.translate("Tema_escuro") }));
        jLabelMudaLinguagem.setText(lingua.translate("Lingua_apresentacao")+": ");
        String [] list = new String[lingua.getlist(4).size()];
        java.util.Iterator it = lingua.getlist(4).iterator();
        int i = 0;
        while (it.hasNext()) {
            list[i] = lingua.translate(it.next().toString());
            i++;
        }
        jComboBoxMudaLinguagem.setModel(new javax.swing.DefaultComboBoxModel<>(list));
        jButtonLinguaMudaConfirma.setText(lingua.translate("Confirmar"));

        jButtonLinguaMudaConfirma.setMnemonic(jButtonLinguaMudaConfirma.getText().charAt(0));
        jLabelLinguaMuda.setVisible(false);

        jLabelLinguaMuda.setText(lingua.translate("O_reinicio_necess√°rio_para_mudar_idioma"));
        jLabelMudaTamanhoDivisor.setText(lingua.translate("tamanho_divisor")+": ");
        jLabelMudaCorDivisor.setText(lingua.translate("cor_divisor")+": ");

        javax.swing.GroupLayout jPanelDefOpcoesLayout = new javax.swing.GroupLayout(jPanelDefOpcoes);
        jPanelDefOpcoes.setLayout(jPanelDefOpcoesLayout);
        jPanelDefOpcoesLayout.setHorizontalGroup(
            jPanelDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDefOpcoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDefOpcoes2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelDefOpcoesLayout.setVerticalGroup(
            jPanelDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDefOpcoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDefOpcoes2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.border.Border borderListbt1 = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 254, 254), 6),javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1));
        javax.swing.border.Border borderListbt2 = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1),borderListbt1);

        jPanelDefBreaks.setBorder(borderListbt2);

        javax.swing.GroupLayout jDialogDefOpcoesLayout = new javax.swing.GroupLayout(jDialogDefOpcoes.getContentPane());
        jDialogDefOpcoes.getContentPane().setLayout(jDialogDefOpcoesLayout);
        jDialogDefOpcoesLayout.setHorizontalGroup(
            jDialogDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelDefOpcoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialogDefOpcoesLayout.setVerticalGroup(
            jDialogDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogDefOpcoesLayout.createSequentialGroup()
                .addComponent(jPanelDefOpcoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 32, Short.MAX_VALUE))
        );

        jDialogListaBotoes.setMinimumSize(new java.awt.Dimension(700, 500));
        jDialogListaBotoes.setResizable(false);

        jPanelListaBotoes.setBackground(new java.awt.Color(254, 254, 254));
        jPanelListaBotoes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelListaBotoes.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanelListaBotoes.setPreferredSize(new java.awt.Dimension(680, 528));

        jScrollPaneMaterialBotoes.setBackground(new java.awt.Color(254, 254, 254));
        jScrollPaneMaterialBotoes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jScrollPaneMaterialBotoes.setAutoscrolls(true);
        jScrollPaneMaterialBotoes.setMinimumSize(new java.awt.Dimension(250, 400));
        jScrollPaneMaterialBotoes.setPreferredSize(new java.awt.Dimension(106, 456));

        jTabbedPaneMaterialBotoes.setAutoscrolls(true);
        jTabbedPaneMaterialBotoes.setMaximumSize(new java.awt.Dimension(2000, 32767));
        jTabbedPaneMaterialBotoes.setMinimumSize(new java.awt.Dimension(250, 400));
        jTabbedPaneMaterialBotoes.setPreferredSize(new java.awt.Dimension(0, 450));
        jScrollPaneMaterialBotoes.setViewportView(jTabbedPaneMaterialBotoes);

        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout jPanelListaBotoesLayout = new javax.swing.GroupLayout(jPanelListaBotoes);
        jPanelListaBotoes.setLayout(jPanelListaBotoesLayout);
        jPanelListaBotoesLayout.setHorizontalGroup(
            jPanelListaBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelListaBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelListaBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneMaterialBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelListaBotoesLayout.setVerticalGroup(
            jPanelListaBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelListaBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(jScrollPaneMaterialBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jDialogListaBotoesLayout = new javax.swing.GroupLayout(jDialogListaBotoes.getContentPane());
        jDialogListaBotoes.getContentPane().setLayout(jDialogListaBotoesLayout);
        jDialogListaBotoesLayout.setHorizontalGroup(
            jDialogListaBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelListaBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialogListaBotoesLayout.setVerticalGroup(
            jDialogListaBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelListaBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gest√£o de Recursos");
        setMinimumSize(new java.awt.Dimension(845, 600));

        jPanelInicial.setBackground(new java.awt.Color(25, 25, 25));
        jPanelInicial.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(254, 254, 254)));
        jPanelInicial.setForeground(new java.awt.Color(224, 19, 19));
        jPanelInicial.setMinimumSize(new java.awt.Dimension(635, 505));
        jPanelInicial.setName(""); // NOI18N
        jPanelInicial.setPreferredSize(new java.awt.Dimension(1024, 600));

        jSplitPaneInicial.setBackground(new java.awt.Color(1, 1, 1));
        jSplitPaneInicial.setDividerLocation(400);
        jSplitPaneInicial.setDividerSize(20);
        jSplitPaneInicial.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPaneInicial.setResizeWeight(0.5);
        jSplitPaneInicial.setAutoscrolls(true);
        jSplitPaneInicial.setMaximumSize(new java.awt.Dimension(21473434, 21473434));
        jSplitPaneInicial.setMinimumSize(new java.awt.Dimension(0, 0));
        jSplitPaneInicial.setName(""); // NOI18N
        jSplitPaneInicial.setOneTouchExpandable(true);
        jSplitPaneInicial.setPreferredSize(new java.awt.Dimension(1000, 600));
        jSplitPaneInicial.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                jSplitPaneInicialComponentMoved(evt);
            }
        });

        jPanelBaixo.setBackground(new java.awt.Color(63, 63, 63));
        jPanelBaixo.setMinimumSize(new java.awt.Dimension(1, 1));
        jPanelBaixo.setPreferredSize(new java.awt.Dimension(300, 200));
        jPanelBaixo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelBaixoMouseClicked(evt);
            }
        });

        jScrollPaneDevolucoes.setMinimumSize(new java.awt.Dimension(600, 400));
        jScrollPaneDevolucoes.setPreferredSize(new java.awt.Dimension(700, 633));

        jLabelTituloDevolucoes.setBackground(new java.awt.Color(254, 254, 254));
        jLabelTituloDevolucoes.setForeground(new java.awt.Color(1, 1, 1));
        jLabelTituloDevolucoes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTituloDevolucoes.setLabelFor(jLabelTitulorequisicoes);
        jLabelTituloDevolucoes.setText("Lista de devolu√ß√µes");
        jLabelTituloDevolucoes.setAlignmentX(0.5F);
        jLabelTituloDevolucoes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelTituloDevolucoes.setOpaque(true);
        jLabelTituloDevolucoes.setForeground(Color.BLACK);
        jLabelTituloDevolucoes.setFont(new Font("Cantarell",Font.BOLD,18));

        jLabelDetalhesDevolucoes.setBackground(new java.awt.Color(254, 254, 254));
        jLabelDetalhesDevolucoes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDetalhesDevolucoes.setText("Informa√ß√µes");
        jLabelDetalhesDevolucoes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelDetalhesDevolucoes.setOpaque(true);
        jLabelDetalhesDevolucoes.setPreferredSize(new java.awt.Dimension(287, 14));

        jPanelInformaBaixoBaixo.setBackground(new java.awt.Color(254, 254, 254));
        jPanelInformaBaixoBaixo.setBorder(null);
        jPanelInformaBaixoBaixo.setMaximumSize(new java.awt.Dimension(267, 32767));
        jPanelInformaBaixoBaixo.setMinimumSize(new java.awt.Dimension(220, 400));
        jPanelInformaBaixoBaixo.setPreferredSize(new java.awt.Dimension(281, 500));

        jScrollPaneInformaBaixo.setBackground(new java.awt.Color(50, 50, 50));
        jScrollPaneInformaBaixo.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        jScrollPaneInformaBaixo.setMaximumSize(new java.awt.Dimension(267, 32767));
        jScrollPaneInformaBaixo.setMinimumSize(new java.awt.Dimension(150, 300));

        jPanelInformaBaixoCima.setBackground(new java.awt.Color(0, 0, 0));
        jPanelInformaBaixoCima.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 0, 5));
        jPanelInformaBaixoCima.setMaximumSize(new java.awt.Dimension(267, 32767));
        jPanelInformaBaixoCima.setMinimumSize(new java.awt.Dimension(100, 300));
        jPanelInformaBaixoCima.setPreferredSize(new java.awt.Dimension(180, 210));

        javax.swing.GroupLayout jPanelInformaBaixoCimaLayout = new javax.swing.GroupLayout(jPanelInformaBaixoCima);
        jPanelInformaBaixoCima.setLayout(jPanelInformaBaixoCimaLayout);
        jPanelInformaBaixoCimaLayout.setHorizontalGroup(
            jPanelInformaBaixoCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 258, Short.MAX_VALUE)
        );
        jPanelInformaBaixoCimaLayout.setVerticalGroup(
            jPanelInformaBaixoCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 307, Short.MAX_VALUE)
        );

        jScrollPaneInformaBaixo.setViewportView(jPanelInformaBaixoCima);

        jButtonConfirmaDevolucao.setBackground(new java.awt.Color(46, 201, 50));
        jButtonConfirmaDevolucao.setEnabled(false);
        jButtonConfirmaDevolucao.setFocusPainted(false);
        jButtonConfirmaDevolucao.setMaximumSize(new java.awt.Dimension(530, 55));
        jButtonConfirmaDevolucao.setMinimumSize(new java.awt.Dimension(53, 55));
        jButtonConfirmaDevolucao.setPreferredSize(new java.awt.Dimension(60, 55));
        jButtonConfirmaDevolucao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmaDevolucaoActionPerformed(evt);
            }
        });

        jButtonAlteraDevolucao.setBackground(new java.awt.Color(5, 138, 204));
        jButtonAlteraDevolucao.setEnabled(false);
        jButtonAlteraDevolucao.setFocusPainted(false);
        jButtonAlteraDevolucao.setMaximumSize(new java.awt.Dimension(530, 55));
        jButtonAlteraDevolucao.setMinimumSize(new java.awt.Dimension(20, 55));
        jButtonAlteraDevolucao.setPreferredSize(new java.awt.Dimension(60, 55));

        javax.swing.GroupLayout jPanelInformaBaixoBaixoLayout = new javax.swing.GroupLayout(jPanelInformaBaixoBaixo);
        jPanelInformaBaixoBaixo.setLayout(jPanelInformaBaixoBaixoLayout);
        jPanelInformaBaixoBaixoLayout.setHorizontalGroup(
            jPanelInformaBaixoBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInformaBaixoBaixoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonAlteraDevolucao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonConfirmaDevolucao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPaneInformaBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
        );
        jPanelInformaBaixoBaixoLayout.setVerticalGroup(
            jPanelInformaBaixoBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInformaBaixoBaixoLayout.createSequentialGroup()
                .addComponent(jScrollPaneInformaBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelInformaBaixoBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonConfirmaDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAlteraDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        java.awt.image.BufferedImage imagebtdevok;
        javax.swing.ImageIcon iconbtdevok = new javax.swing.ImageIcon();
        try {
            imagebtdevok = ImageIO.read(getClass().getResourceAsStream("Images/ok.png"));
            if (imagebtdevok != null) {
                iconbtdevok = new javax.swing.ImageIcon(imagebtdevok);
                jButtonConfirmaDevolucao.setIcon(iconbtdevok);
            }
        } catch (IOException ex) {
            jButtonConfirmaDevolucao.setText(lingua.translate("Confirmar"));
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        jButtonConfirmaDevolucao.setToolTipText(lingua.translate("Confirmar_devolucao"));
        java.awt.image.BufferedImage imagebtdevcancelar = null;
        javax.swing.ImageIcon iconbtdevcancelar = new javax.swing.ImageIcon();
        try {
            imagebtdevcancelar = ImageIO.read(getClass().getResourceAsStream("Images/substituir.png"));
            iconbtdevcancelar = new javax.swing.ImageIcon(imagebtdevcancelar);
            jButtonAlteraDevolucao.setIcon(iconbtdevcancelar);
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        jButtonAlteraDevolucao.setToolTipText(lingua.translate("Alterar_devolucao"));

        jButton3.setText("jButton3");

        jTextField2.setText("jTextField2");
        jTextField2.setPreferredSize(new java.awt.Dimension(191, 41));

        javax.swing.GroupLayout jPanelBaixoLayout = new javax.swing.GroupLayout(jPanelBaixo);
        jPanelBaixo.setLayout(jPanelBaixoLayout);
        jPanelBaixoLayout.setHorizontalGroup(
            jPanelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBaixoLayout.createSequentialGroup()
                .addGroup(jPanelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDetalhesDevolucoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelBaixoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelInformaBaixoBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                            .addGroup(jPanelBaixoLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(12, 12, 12)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBaixoLayout.createSequentialGroup()
                        .addComponent(jScrollPaneDevolucoes, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jLabelTituloDevolucoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanelBaixoLayout.setVerticalGroup(
            jPanelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBaixoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelDetalhesDevolucoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelTituloDevolucoes, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneDevolucoes, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                    .addGroup(jPanelBaixoLayout.createSequentialGroup()
                        .addGroup(jPanelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelInformaBaixoBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.border.Border borderf1 = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 254, 254), 8),javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1));
        javax.swing.border.Border borderf2 = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2),borderf1);

        jScrollPaneDevolucoes.setBorder(borderf2);
        jLabelTituloDevolucoes.setText(lingua.translate("lista_devolucoes"));
        jLabelDetalhesDevolucoes.setForeground(Color.BLACK);
        jLabelDetalhesDevolucoes.setFont(new Font("Cantarell",Font.BOLD,18));
        // Code adding the component to the parent container - not shown here
        jLabelDetalhesDevolucoes.setText(lingua.translate("Informacoes"));
        jPanelInformaBaixoBaixo.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(jPanelBaixo.getBackground(), 10), new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, false)));

        jSplitPaneInicial.setRightComponent(jPanelBaixo);

        jPanelCima.setBackground(new java.awt.Color(193, 193, 193));
        jPanelCima.setAutoscrolls(true);
        jPanelCima.setMinimumSize(new java.awt.Dimension(1, 1));
        jPanelCima.setName(""); // NOI18N
        jPanelCima.setPreferredSize(new java.awt.Dimension(300, 200));
        jPanelCima.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelCimaMouseClicked(evt);
            }
        });

        jScrollPaneRequisicoes.setBackground(new java.awt.Color(1, 1, 1));
        jScrollPaneRequisicoes.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 254, 254), 8), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2)));
        jScrollPaneRequisicoes.setInheritsPopupMenu(true);
        jScrollPaneRequisicoes.setMinimumSize(new java.awt.Dimension(700, 500));
        jScrollPaneRequisicoes.setPreferredSize(new java.awt.Dimension(700, 633));

        jLabelTitulorequisicoes.setBackground(new java.awt.Color(50, 50, 50));
        jLabelTitulorequisicoes.setForeground(new java.awt.Color(254, 254, 254));
        jLabelTitulorequisicoes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitulorequisicoes.setLabelFor(jLabelTitulorequisicoes);
        jLabelTitulorequisicoes.setText("Lista de requisi√ß√µes");
        jLabelTitulorequisicoes.setText(lingua.translate("Lista_de_requisi√ß√µes"));
        jLabelTitulorequisicoes.setAlignmentX(0.5F);
        jLabelTitulorequisicoes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 254, 254)));
        jLabelTitulorequisicoes.setOpaque(true);
        jLabelTitulorequisicoes.setForeground(Color.WHITE);
        jLabelTitulorequisicoes.setFont(new Font("Cantarell",Font.BOLD,18));

        jPanelInformaCimaBaixo.setBackground(new java.awt.Color(254, 254, 254));
        jPanelInformaCimaBaixo.setBorder(null);
        jPanelInformaCimaBaixo.setForeground(new java.awt.Color(254, 254, 254));
        jPanelInformaCimaBaixo.setMaximumSize(new java.awt.Dimension(267, 32767));
        jPanelInformaCimaBaixo.setMinimumSize(new java.awt.Dimension(220, 450));
        jPanelInformaCimaBaixo.setPreferredSize(new java.awt.Dimension(250, 500));

        jScrollPaneInformaCima.setBackground(new java.awt.Color(50, 50, 50));
        jScrollPaneInformaCima.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        jScrollPaneInformaCima.setMaximumSize(new java.awt.Dimension(267, 32767));
        jScrollPaneInformaCima.setMinimumSize(new java.awt.Dimension(150, 350));
        jScrollPaneInformaCima.setName(""); // NOI18N
        jScrollPaneInformaCima.setPreferredSize(new java.awt.Dimension(0, 0));

        jPanelInformaCimaCima.setBackground(new java.awt.Color(0, 0, 0));
        jPanelInformaCimaCima.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 0, 5));
        jPanelInformaCimaCima.setMaximumSize(new java.awt.Dimension(267, 32767));
        jPanelInformaCimaCima.setMinimumSize(new java.awt.Dimension(100, 350));
        jPanelInformaCimaCima.setPreferredSize(new java.awt.Dimension(180, 210));
        jPanelInformaCimaCima.setRequestFocusEnabled(false);

        javax.swing.GroupLayout jPanelInformaCimaCimaLayout = new javax.swing.GroupLayout(jPanelInformaCimaCima);
        jPanelInformaCimaCima.setLayout(jPanelInformaCimaCimaLayout);
        jPanelInformaCimaCimaLayout.setHorizontalGroup(
            jPanelInformaCimaCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 251, Short.MAX_VALUE)
        );
        jPanelInformaCimaCimaLayout.setVerticalGroup(
            jPanelInformaCimaCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 363, Short.MAX_VALUE)
        );

        jScrollPaneInformaCima.setViewportView(jPanelInformaCimaCima);
        jPanelInformaCimaCima.setToolTipText(lingua.translate("Quadro_detalhes"));

        jButtonAtuacaoConfirma.setBackground(new java.awt.Color(46, 201, 50));
        jButtonAtuacaoConfirma.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAtuacaoConfirma.setEnabled(false);
        jButtonAtuacaoConfirma.setFocusPainted(false);
        jButtonAtuacaoConfirma.setMaximumSize(new java.awt.Dimension(610, 55));
        jButtonAtuacaoConfirma.setMinimumSize(new java.awt.Dimension(53, 55));
        jButtonAtuacaoConfirma.setPreferredSize(new java.awt.Dimension(60, 55));
        jButtonAtuacaoConfirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtuacaoConfirmaActionPerformed(evt);
            }
        });

        jButtonAtuacaoAltera.setBackground(new java.awt.Color(5, 138, 204));
        jButtonAtuacaoAltera.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAtuacaoAltera.setEnabled(false);
        jButtonAtuacaoAltera.setFocusPainted(false);
        jButtonAtuacaoAltera.setMaximumSize(new java.awt.Dimension(610, 55));
        jButtonAtuacaoAltera.setMinimumSize(new java.awt.Dimension(53, 55));
        jButtonAtuacaoAltera.setPreferredSize(new java.awt.Dimension(60, 55));
        jButtonAtuacaoAltera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtuacaoAlteraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelInformaCimaBaixoLayout = new javax.swing.GroupLayout(jPanelInformaCimaBaixo);
        jPanelInformaCimaBaixo.setLayout(jPanelInformaCimaBaixoLayout);
        jPanelInformaCimaBaixoLayout.setHorizontalGroup(
            jPanelInformaCimaBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneInformaCima, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanelInformaCimaBaixoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonAtuacaoConfirma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAtuacaoAltera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelInformaCimaBaixoLayout.setVerticalGroup(
            jPanelInformaCimaBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInformaCimaBaixoLayout.createSequentialGroup()
                .addComponent(jScrollPaneInformaCima, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelInformaCimaBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonAtuacaoConfirma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAtuacaoAltera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9))
        );

        jScrollPaneInformaCima.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        java.awt.image.BufferedImage imagebtok = null;
        try {
            imagebtok = ImageIO.read(getClass().getResourceAsStream("Images/ok.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (imagebtok != null) {
            javax.swing.ImageIcon iconbtok = new javax.swing.ImageIcon(imagebtok);
            jButtonAtuacaoConfirma.setIcon(iconbtok);
        }
        jButtonAtuacaoConfirma.setToolTipText(lingua.translate("Confirmar_emprestimo"));
        java.awt.image.BufferedImage imagebtcancelar = null;
        try {
            imagebtcancelar = ImageIO.read(getClass().getResourceAsStream("Images/substituir.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (imagebtok != null) {
            javax.swing.ImageIcon iconbtcancelar = new javax.swing.ImageIcon(imagebtcancelar);
            jButtonAtuacaoAltera.setIcon(iconbtcancelar);
        }
        jButtonAtuacaoAltera.setToolTipText(lingua.translate("Alterar_requisicao"));

        jTextFieldProcuraCima.setForeground(new java.awt.Color(201, 201, 201));
        jTextFieldProcuraCima.setText("Pesquisa por utilizador ...");
        jTextFieldProcuraCima.setBorder(null);
        jTextFieldProcuraCima.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldProcuraCimaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldProcuraCimaFocusLost(evt);
            }
        });
        jTextFieldProcuraCima.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldProcuraCimaKeyPressed(evt);
            }
        });

        jButtonProcuraCima.setBackground(new java.awt.Color(1, 1, 1));
        jButtonProcuraCima.setBorder(null);
        jButtonProcuraCima.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonProcuraCima.setFocusPainted(false);
        jButtonProcuraCima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProcuraCimaActionPerformed(evt);
            }
        });

        jLabelTituloOcupacoes.setBackground(new java.awt.Color(50, 50, 50));
        jLabelTituloOcupacoes.setForeground(new java.awt.Color(254, 254, 254));
        jLabelTituloOcupacoes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTituloOcupacoes.setText("Detalhes");
        jLabelTituloOcupacoes.setAlignmentX(0.5F);
        jLabelTituloOcupacoes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 254, 254)));
        jLabelTituloOcupacoes.setOpaque(true);
        jLabelTituloOcupacoes.setForeground(Color.WHITE);
        jLabelTituloOcupacoes.setFont(new Font("Cantarell",Font.BOLD,18));

        javax.swing.GroupLayout jPanelTituloOcupacoesLayout = new javax.swing.GroupLayout(jPanelTituloOcupacoes);
        jPanelTituloOcupacoes.setLayout(jPanelTituloOcupacoesLayout);
        jPanelTituloOcupacoesLayout.setHorizontalGroup(
            jPanelTituloOcupacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 293, Short.MAX_VALUE)
            .addGroup(jPanelTituloOcupacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabelTituloOcupacoes, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))
        );
        jPanelTituloOcupacoesLayout.setVerticalGroup(
            jPanelTituloOcupacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 33, Short.MAX_VALUE)
            .addGroup(jPanelTituloOcupacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabelTituloOcupacoes, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelCimaLayout = new javax.swing.GroupLayout(jPanelCima);
        jPanelCima.setLayout(jPanelCimaLayout);
        jPanelCimaLayout.setHorizontalGroup(
            jPanelCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCimaLayout.createSequentialGroup()
                .addGroup(jPanelCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCimaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPaneRequisicoes, javax.swing.GroupLayout.DEFAULT_SIZE, 703, Short.MAX_VALUE))
                    .addComponent(jLabelTitulorequisicoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCimaLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jTextFieldProcuraCima)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonProcuraCima, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))
                    .addComponent(jPanelTituloOcupacoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelCimaLayout.createSequentialGroup()
                        .addComponent(jPanelInformaCimaBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanelCimaLayout.setVerticalGroup(
            jPanelCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCimaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelTitulorequisicoes, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jPanelTituloOcupacoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9)
                .addGroup(jPanelCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCimaLayout.createSequentialGroup()
                        .addGroup(jPanelCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldProcuraCima, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                            .addComponent(jButtonProcuraCima, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelInformaCimaBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE))
                    .addComponent(jScrollPaneRequisicoes, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE))
                .addContainerGap())
        );

        jScrollPaneRequisicoes.setMinimumSize(new java.awt.Dimension(600,jPanelCima.getHeight()));

        javax.swing.border.Border border1 = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 254, 254), 8),javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1));
        javax.swing.border.Border border2 = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2),border1);

        jScrollPaneRequisicoes.setBorder(border2);
        jPanelInformaCimaBaixo.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(jPanelCima.getBackground(), 10), new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, false)));
        jTextFieldProcuraCima.setText(lingua.translate("Pesquisa por utilizador ..."));
        jTextFieldProcuraCima.setFocusAccelerator('s');

        javax.swing.border.Border borderpesquisa1 = BorderFactory.createLineBorder(jPanelCima.getBackground(),5);
        javax.swing.border.Border borderpesquisa2 = BorderFactory.createCompoundBorder(borderpesquisa1, javax.swing.BorderFactory.createLineBorder(Color.BLACK,2));
        jTextFieldProcuraCima.setBorder(javax.swing.BorderFactory.createCompoundBorder(borderpesquisa2, javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 10)));
        java.awt.image.BufferedImage imagebtsearch = null;
        try {
            imagebtsearch = ImageIO.read(getClass().getResourceAsStream("Images/search.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (imagebtsearch != null) {
            javax.swing.ImageIcon iconbtsearch = new javax.swing.ImageIcon(imagebtsearch);
            jButtonProcuraCima.setIcon(iconbtsearch);
        }
        jButtonProcuraCima.setToolTipText(lingua.translate("Pesquisar"));
        jPanelTituloOcupacoes.setBackground(jPanelCima.getBackground());

        jSplitPaneInicial.setLeftComponent(jPanelCima);

        javax.swing.GroupLayout jPanelInicialLayout = new javax.swing.GroupLayout(jPanelInicial);
        jPanelInicial.setLayout(jPanelInicialLayout);
        jPanelInicialLayout.setHorizontalGroup(
            jPanelInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPaneInicial, javax.swing.GroupLayout.DEFAULT_SIZE, 1025, Short.MAX_VALUE)
        );
        jPanelInicialLayout.setVerticalGroup(
            jPanelInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPaneInicial, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
        );

        jSplitPaneInicial.setResizeWeight(1.0);

        jToolBar1.setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 20, 0, 20));
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setMinimumSize(new java.awt.Dimension(90, 32));

        jToggleButtonBarRequisicoes.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 0, 5));
        jToggleButtonBarRequisicoes.setBorderPainted(false);
        jToggleButtonBarRequisicoes.setFocusPainted(false);
        jToggleButtonBarRequisicoes.setFocusable(false);
        jToggleButtonBarRequisicoes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonBarRequisicoes.setMaximumSize(new java.awt.Dimension(40, 28));
        jToggleButtonBarRequisicoes.setMinimumSize(new java.awt.Dimension(40, 28));
        jToggleButtonBarRequisicoes.setPreferredSize(new java.awt.Dimension(40, 26));
        jToggleButtonBarRequisicoes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonBarRequisicoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonBarRequisicoesActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButtonBarRequisicoes);
        java.awt.image.BufferedImage imagebtreq = null;
        try {
            imagebtreq = ImageIO.read(getClass().getResourceAsStream("Images/baixo.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (imagebtreq != null) {
            javax.swing.ImageIcon iconbtreq = new javax.swing.ImageIcon(imagebtreq);
            jToggleButtonBarRequisicoes.setIcon(iconbtreq);
        }
        jToggleButtonBarRequisicoes.setToolTipText(lingua.translate("Aba_requisicoes"));

        jToggleButtonBarEntregas.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 5, 1, 5));
        jToggleButtonBarEntregas.setFocusable(false);
        jToggleButtonBarEntregas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonBarEntregas.setMaximumSize(new java.awt.Dimension(40, 28));
        jToggleButtonBarEntregas.setMinimumSize(new java.awt.Dimension(40, 28));
        jToggleButtonBarEntregas.setPreferredSize(new java.awt.Dimension(40, 26));
        jToggleButtonBarEntregas.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonBarEntregas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonBarEntregasActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButtonBarEntregas);
        java.awt.image.BufferedImage imagebtent = null;
        try {
            imagebtent = ImageIO.read(getClass().getResourceAsStream("Images/cima.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (imagebtent != null) {
            javax.swing.ImageIcon iconbtent = new javax.swing.ImageIcon(imagebtent);
            jToggleButtonBarEntregas.setIcon(iconbtent);
        }
        jToolBar1.add(jSeparator1);

        jComboBoxVista.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jComboBoxVista.setFocusable(false);
        jComboBoxVista.setMinimumSize(new java.awt.Dimension(138, 26));
        jComboBoxVista.setPreferredSize(new java.awt.Dimension(138, 26));
        jComboBoxVista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxVistaActionPerformed(evt);
            }
        });
        jComboBoxVista.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { lingua.translate("1_dia"), lingua.translate("2_dias"), lingua.translate("1_semana"), lingua.translate("2_semanas")}));
        ((javax.swing.JLabel)jComboBoxVista.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.CENTER);
        jToolBar1.add(jComboBoxVista);

        jButton1.setText("Atualizar");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setFocusPainted(false);
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setMaximumSize(new java.awt.Dimension(89, 26));
        jButton1.setMinimumSize(new java.awt.Dimension(79, 26));
        jButton1.setPreferredSize(new java.awt.Dimension(84, 26));
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);
        jButton1.setText(lingua.translate("Atualizar"));

        jButton1.setMnemonic(jButton1.getText().charAt(0));
        jToolBar1.add(jSeparator2);

        jComboBoxListaBotoes.setFocusable(false);
        jComboBoxListaBotoes.setMaximumSize(new java.awt.Dimension(32767, 26));
        jComboBoxListaBotoes.setMinimumSize(new java.awt.Dimension(148, 26));
        jComboBoxListaBotoes.setPreferredSize(new java.awt.Dimension(148, 26));
        jComboBoxListaBotoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxListaBotoesActionPerformed(evt);
            }
        });
        jToolBar1.add(jComboBoxListaBotoes);
        ((javax.swing.JLabel)jComboBoxListaBotoes.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.CENTER);

        jButtonListaBotoes.setText("Lista de recursos");
        jButtonListaBotoes.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 5));
        jButtonListaBotoes.setFocusPainted(false);
        jButtonListaBotoes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonListaBotoes.setMaximumSize(new java.awt.Dimension(234, 26));
        jButtonListaBotoes.setMinimumSize(new java.awt.Dimension(154, 26));
        jButtonListaBotoes.setPreferredSize(new java.awt.Dimension(160, 26));
        jButtonListaBotoes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonListaBotoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListaBotoesActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonListaBotoes);
        jButtonListaBotoes.setText(lingua.translate("Lista de recursos"));

        java.awt.geom.AffineTransform affinetransform = new java.awt.geom.AffineTransform();
        java.awt.font.FontRenderContext frc = new java.awt.font.FontRenderContext(affinetransform, true, true);
        java.awt.Font font = new java.awt.Font("Cantarell", java.awt.Font.PLAIN, 13);
        int tam = (int)font.getStringBounds(jButtonListaBotoes.getText(), frc).getBounds().getWidth();
        System.out.print("tamanho"+tam);
        jButtonListaBotoes.setPreferredSize(new java.awt.Dimension(tam+4,26));
        jButtonListaBotoes.setMnemonic(jButtonListaBotoes.getText().charAt(0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelInicial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelInicial, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jPanelCimaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelCimaMouseClicked
        if (evt.getClickCount() == 2) {
            if (auxiliar.isAlive()) {
                Threads.EfectsOnDivisor ev = (Threads.EfectsOnDivisor) auxiliar;
                ev.setCondition(false);
            }
            auxiliar = new Threads.EfectsOnDivisor(jSplitPaneInicial, jSplitPaneInicial.getWidth());
            auxiliar.start();
            jToggleButtonBarRequisicoes.setSelected(true);
            jToggleButtonBarEntregas.setSelected(false);
            bitpagina[0] = 1;
            bitpagina[1] = 0;
        }
    }//GEN-LAST:event_jPanelCimaMouseClicked

    private void jPanelBaixoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelBaixoMouseClicked
        if (evt.getClickCount() == 2) {
            if (auxiliar.isAlive()) {
                Threads.EfectsOnDivisor ev = (Threads.EfectsOnDivisor) auxiliar;
                ev.setCondition(false);
            }
            auxiliar = new Threads.EfectsOnDivisor(jSplitPaneInicial, 0);
            auxiliar.start();
            jToggleButtonBarRequisicoes.setSelected(false);
            jToggleButtonBarEntregas.setSelected(true);
            bitpagina[0] = 0;
            bitpagina[1] = 1;
        }
    }//GEN-LAST:event_jPanelBaixoMouseClicked

    private void jComboBoxVistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxVistaActionPerformed
        int val = jComboBoxVista.getSelectedIndex();
        Clavis.TypeOfMaterial mat = tiposmateriais.get(jComboBoxListaBotoes.getSelectedIndex());
        if (val != vista) {
            vista = val;
            this.requisicoes.setView(vista);
            this.calculateList(mat);
        }
    }//GEN-LAST:event_jComboBoxVistaActionPerformed

    private void jRadioButtonSextaFeiraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSextaFeiraActionPerformed
        if (jRadioButtonSextaFeira.isSelected()) {
            feriados.addGoodFriday();
            FileHolidays hol = new FileHolidays();
            hol.saveHolidays(feriados);
        } else {
            feriados.removeGoodFriday();
            FileHolidays hol = new FileHolidays();
            hol.saveHolidays(feriados);
        }
        this.drawChoosenHolidaysList();
        jButtonDefHolidaysApagar.setBackground(new Color(254, 254, 254));
    }//GEN-LAST:event_jRadioButtonSextaFeiraActionPerformed

    private void jButtonDefHolidaysVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefHolidaysVoltarActionPerformed
        jDialogDefHolidays.setVisible(false);
        jDialogDefHolidays.dispose();
    }//GEN-LAST:event_jButtonDefHolidaysVoltarActionPerformed

    private void jRadioButtonCarnavalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButtonCarnavalStateChanged

    }//GEN-LAST:event_jRadioButtonCarnavalStateChanged

    private void jRadioButtonCarnavalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonCarnavalActionPerformed
        if (jRadioButtonCarnaval.isSelected()) {
            feriados.addCarnival();
            FileHolidays hol = new FileHolidays();
            hol.saveHolidays(feriados);
        } else {
            feriados.removeCarnival();
            FileHolidays hol = new FileHolidays();
            hol.saveHolidays(feriados);
        }
        this.drawChoosenHolidaysList();
        jButtonDefHolidaysApagar.setBackground(new Color(254, 254, 254));
    }//GEN-LAST:event_jRadioButtonCarnavalActionPerformed

    private void jRadioButtonPascoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPascoaActionPerformed
        if (jRadioButtonPascoa.isSelected()) {
            feriados.addEaster();
            FileHolidays hol = new FileHolidays();
            hol.saveHolidays(feriados);
        } else {
            feriados.removeEaster();
            FileHolidays hol = new FileHolidays();
            hol.saveHolidays(feriados);
        }
        this.drawChoosenHolidaysList();
        jButtonDefHolidaysApagar.setBackground(new Color(254, 254, 254));
    }//GEN-LAST:event_jRadioButtonPascoaActionPerformed

    private void jRadioButtonCorpoDeusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonCorpoDeusActionPerformed
        if (jRadioButtonCorpoDeus.isSelected()) {
            feriados.addCorpusChristi();
            FileHolidays hol = new FileHolidays();
            hol.saveHolidays(feriados);
        } else {
            feriados.removeCorpusChristi();
            FileHolidays hol = new FileHolidays();
            hol.saveHolidays(feriados);
        }
        this.drawChoosenHolidaysList();
        jButtonDefHolidaysApagar.setBackground(new Color(254, 254, 254));
    }//GEN-LAST:event_jRadioButtonCorpoDeusActionPerformed

    private void jButtonDefHolidaysDireitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefHolidaysDireitaActionPerformed
        if (!jListFeriadosDefeito.isSelectionEmpty()) {
            DefaultListModel modelo = (DefaultListModel) jListFeriadosEscolhidos.getModel();
            String value = jListFeriadosDefeito.getSelectedValue();
            boolean aux = false;
            for (int i = 0; i < modelo.getSize(); i++) {
                if (modelo.getElementAt(i).toString().equals(value)) {
                    aux = true;
                }
            }
            if (!aux) {
                HolidaysList lista = new FileHolidays().getDefaultHolidaysList();
                TimeDate.Holiday hol = null;
                for (TimeDate.Holiday h : lista.getHolidays()) {
                    h.setLanguage(lingua);
                    if (h.toLongString().equals(value)) {
                        hol = h;
                    }
                }
                if (hol != null) {
                    feriados.addHoliday(hol);
                    FileHolidays holi = new FileHolidays();
                    holi.saveHolidays(feriados);
                    this.drawChoosenHolidaysList();
                }
                jListFeriadosDefeito.clearSelection();
                jButtonDefHolidaysDireita.setBackground(new Color(254, 254, 254));
            }
        }
    }//GEN-LAST:event_jButtonDefHolidaysDireitaActionPerformed

    private void jButtonDefHolidaysApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefHolidaysApagarActionPerformed
        if (!jListFeriadosEscolhidos.isSelectionEmpty()) {
            String value = jListFeriadosEscolhidos.getSelectedValue();
            int val = -1;
            TimeDate.Holiday h = null;
            for (TimeDate.Holiday hol : feriados.getHolidays()) {
                hol.setLanguage(lingua);
                if (hol.isDinamic()) {
                    if ((lingua.translate("Carnaval").equals(value)) && ((feriados.getCarnival().getDay() == hol.getDay()) && (feriados.getCarnival().getMonth() == hol.getMonth()))) {
                        val = 0;
                    } else if ((lingua.translate("corpo_deus").equals(value)) && ((feriados.getCorpusChristi().getDay() == hol.getDay()) && (feriados.getCorpusChristi().getMonth() == hol.getMonth()))) {
                        val = 1;
                    } else if ((lingua.translate("P√°scoa").equals(value)) && ((feriados.getEaster().getDay() == hol.getDay()) && (feriados.getEaster().getMonth() == hol.getMonth()))) {
                        val = 2;
                    } else if ((lingua.translate("Sexta-feira_santa").equals(value)) && ((feriados.getGoodFriday().getDay() == hol.getDay()) && (feriados.getGoodFriday().getMonth() == hol.getMonth()))) {
                        val = 3;
                    }
                } else if (hol.toLongString().equals(value)) {
                    h = hol;
                    val = 4;
                }
            }
            switch (val) {
                case 0:
                    jRadioButtonCarnaval.setSelected(false);
                    feriados.removeCarnival();
                    break;
                case 1:
                    jRadioButtonCorpoDeus.setSelected(false);
                    feriados.removeCorpusChristi();
                    break;
                case 2:
                    jRadioButtonPascoa.setSelected(false);
                    feriados.removeEaster();
                    break;
                case 3:
                    jRadioButtonSextaFeira.setSelected(false);
                    feriados.removeGoodFriday();
                    break;
                case 4:
                    feriados.removeHoliday(h);
                    break;
                default:
                    break;
            }
            if (val > -1) {
                FileHolidays holi = new FileHolidays();
                holi.saveHolidays(feriados);
                this.drawChoosenHolidaysList();
            }
            jListFeriadosDefeito.clearSelection();
            jButtonDefHolidaysApagar.setBackground(new Color(254, 254, 254));
        }
    }//GEN-LAST:event_jButtonDefHolidaysApagarActionPerformed

    private void jButtonDefHolidaysMaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefHolidaysMaisActionPerformed
        javax.swing.JComboBox<String> dia = new javax.swing.JComboBox<>();
        dia.setBorder(BorderFactory.createEmptyBorder(1, 3, 1, 3));
        javax.swing.JComboBox<String> mes = new javax.swing.JComboBox<>();
        mes.setBorder(BorderFactory.createEmptyBorder(1, 3, 1, 3));
        mes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{lingua.translate("Janeiro"), lingua.translate("Fevereiro"),
            lingua.translate("Mar√ßo"), lingua.translate("Abril"), lingua.translate("Maio"),
            lingua.translate("Junho"), lingua.translate("Julho"), lingua.translate("Agosto"), lingua.translate("Setembro"),
            lingua.translate("Outubro"), lingua.translate("Novembro"), lingua.translate("Dezembro")}));
        mes.setSelectedIndex(0);
        ((javax.swing.JLabel) mes.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.TRAILING);
        ((javax.swing.JLabel) dia.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.TRAILING);
        ((javax.swing.JLabel) dia.getRenderer()).setSize(200, 20);
        dia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));
        mes.addActionListener((ActionEvent e) -> {
            int vval = mes.getSelectedIndex();
            int select = dia.getSelectedIndex();
            if ((vval == 3) || (vval == 5) || (vval == 8) || (vval == 10)) {
                dia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30"}));
            } else if (vval == 1) {
                dia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29"}));
            } else {
                dia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));
            }
            if (dia.getModel().getSize() > select) {
                dia.setSelectedIndex(select);
            }
        });
        javax.swing.JLabel lmes = new javax.swing.JLabel(lingua.translate("M√™s") + ":");
        lmes.setBorder(BorderFactory.createEmptyBorder(5, 20, 4, 0));
        lmes.setHorizontalAlignment(SwingConstants.LEADING);
        javax.swing.JLabel ldia = new javax.swing.JLabel(lingua.translate("Dia") + ":");
        ldia.setBorder(BorderFactory.createEmptyBorder(5, 20, 4, 0));
        ldia.setHorizontalAlignment(SwingConstants.LEADING);
        javax.swing.ComboBoxModel modelo = (javax.swing.ComboBoxModel<String>) mes.getModel();
        javax.swing.JLabel branco = new javax.swing.JLabel("");
        branco.setBorder(BorderFactory.createEmptyBorder(5, 20, 10, 0));

        final javax.swing.JComponent[] inputs = new javax.swing.JComponent[]{
            lmes,
            mes,
            ldia,
            dia,
            branco
        };
        String[] op = new String[2];
        op[0] = lingua.translate("Confirmar");
        op[1] = lingua.translate("Cancelar");

        if (javax.swing.JOptionPane.showOptionDialog(this, inputs, lingua.translate("Escolher_feriado"), javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.PLAIN_MESSAGE, null, op, null) == 0) {
            int idia = Integer.valueOf(dia.getSelectedItem().toString().trim());
            int imes = mes.getSelectedIndex() + 1;
            feriados.addHoliday(idia, imes);
            FileHolidays holi = new FileHolidays();
            holi.saveHolidays(feriados);
            this.drawChoosenHolidaysList();
        }
    }//GEN-LAST:event_jButtonDefHolidaysMaisActionPerformed

    private void jListFeriadosDefeitoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListFeriadosDefeitoMouseClicked
        if (!jListFeriadosDefeito.isSelectionEmpty()) {
            String val = jListFeriadosDefeito.getSelectedValue();
            DefaultListModel modelo = (DefaultListModel) jListFeriadosEscolhidos.getModel();
            boolean existe = false;
            for (int i = 0; i < modelo.getSize(); i++) {
                if (modelo.getElementAt(i).toString().equals(val)) {
                    existe = true;
                }
            }
            if (!existe) {
                jButtonDefHolidaysDireita.setBackground(Color.GREEN);
            } else {
                jButtonDefHolidaysDireita.setBackground(new Color(254, 254, 254));
            }
        } else {
            jButtonDefHolidaysDireita.setBackground(new Color(254, 254, 254));
        }
    }//GEN-LAST:event_jListFeriadosDefeitoMouseClicked

    private void jListFeriadosDefeitoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jListFeriadosDefeitoPropertyChange

    }//GEN-LAST:event_jListFeriadosDefeitoPropertyChange

    private void jListFeriadosDefeitoValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListFeriadosDefeitoValueChanged
        if (!jListFeriadosDefeito.isSelectionEmpty()) {
            String val = jListFeriadosDefeito.getSelectedValue();
            DefaultListModel modelo = (DefaultListModel) jListFeriadosEscolhidos.getModel();
            boolean existe = false;
            for (int i = 0; i < modelo.getSize(); i++) {
                if (modelo.getElementAt(i).toString().equals(val)) {
                    existe = true;
                }
            }
            if (!existe) {
                jButtonDefHolidaysDireita.setBackground(Color.GREEN);
            } else {
                jButtonDefHolidaysDireita.setBackground(new Color(254, 254, 254));
            }
        } else {
            jButtonDefHolidaysDireita.setBackground(new Color(254, 254, 254));
        }
    }//GEN-LAST:event_jListFeriadosDefeitoValueChanged

    private void jListFeriadosDefeitoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jListFeriadosDefeitoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (jButtonDefHolidaysDireita.getBackground() == Color.GREEN) {
                jButtonDefHolidaysDireita.doClick();
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            jListFeriadosDefeito.clearSelection();
            jListFeriadosEscolhidos.clearSelection();
            jButtonDefHolidaysDireita.setBackground(new Color(254, 254, 254));
        }
    }//GEN-LAST:event_jListFeriadosDefeitoKeyPressed

    private void jButtonDefBreaksVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefBreaksVoltarActionPerformed
        jDialogDefBreaks.setVisible(false);
        jDialogDefBreaks.dispose();
    }//GEN-LAST:event_jButtonDefBreaksVoltarActionPerformed

    private void jButtonDefBreakApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefBreakApagarActionPerformed
        intervalos.getBreakPeriodList().remove(jListFerias.getSelectedIndex());
        this.drawBreaksList();
        jTextFieldDefBreaksNome.setText("");
        jButtonDefBreakApagar.setBackground(new Color(254, 254, 254));
        java.awt.image.BufferedImage image = null;
        try {
            image = ImageIO.read(getClass().getResourceAsStream("Images/plus.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (image != null) {
            javax.swing.ImageIcon icon = new javax.swing.ImageIcon(image);
            jButtonDefBreaksAdicionar.setIcon(icon);
        }
        jButtonDefBreaksAdicionar.setToolTipText(lingua.translate("Adicionar"));
        jButtonDefBreaksAdicionar.setBackground(new Color(254, 254, 254));
        this.clearComboBoxDefBreaks();
    }//GEN-LAST:event_jButtonDefBreakApagarActionPerformed

    private void jPanelDefHolidaysMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelDefHolidaysMouseClicked
        jListFeriadosEscolhidos.clearSelection();
        jListFeriadosDefeito.clearSelection();
        jButtonDefHolidaysApagar.setBackground(new Color(254, 254, 254));
        jButtonDefHolidaysDireita.setBackground(new Color(254, 254, 254));
    }//GEN-LAST:event_jPanelDefHolidaysMouseClicked

    private void jListFeriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListFeriasMouseClicked
        if (!jListFerias.isSelectionEmpty()) {
            jButtonDefBreakApagar.setBackground(Color.red);
            if (evt.getClickCount() == 2) {
                this.mostrajListFeriasMensagem();
            }
            String dia = String.valueOf(intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getBeginDate().getDay());
            int mes = intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getBeginDate().getMonth() - 1;
            String ano = String.valueOf(intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getBeginDate().getYear());
            jComboBoxDefBreaksDiaInicio.setSelectedItem(dia);
            jComboBoxDefBreaksMesInicio.setSelectedIndex(mes);
            jComboBoxDefBreaksAnoInicio.setSelectedItem(ano);
            dia = String.valueOf(intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getEndDate().getDay());
            mes = intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getEndDate().getMonth() - 1;
            ano = String.valueOf(intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getEndDate().getYear());
            jComboBoxDefBreaksDiaFim.setSelectedItem(dia);
            jComboBoxDefBreaksMesFim.setSelectedIndex(mes);
            jComboBoxDefBreaksAnoFim.setSelectedItem(ano);
            jTextFieldDefBreaksNome.setText(intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getName());
            java.awt.image.BufferedImage image = null;
            try {
                image = ImageIO.read(getClass().getResourceAsStream("Images/ok.png"));
            } catch (IOException ex) {
                Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (image != null) {
                javax.swing.ImageIcon icon = new javax.swing.ImageIcon(image);
                jButtonDefBreaksAdicionar.setIcon(icon);
            }
            jButtonDefBreaksAdicionar.setToolTipText(lingua.translate("Editar"));

            jButtonDefBreaksAdicionar.setBackground(Color.GREEN);
        } else {
            jButtonDefBreakApagar.setBackground(new Color(254, 254, 254));
        }

    }//GEN-LAST:event_jListFeriasMouseClicked

    private void jListFeriasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jListFeriasKeyPressed
        if (!jListFerias.isSelectionEmpty()) {
            jButtonDefBreakApagar.setBackground(Color.red);
            switch (evt.getKeyCode()) {
                case java.awt.event.KeyEvent.VK_ENTER:
                    this.mostrajListFeriasMensagem();
                    break;
                case java.awt.event.KeyEvent.VK_ESCAPE:
                    jButtonDefBreakApagar.setBackground(new Color(254, 254, 254));
                    java.awt.image.BufferedImage image = null;
                    try {
                        image = ImageIO.read(getClass().getResourceAsStream("Images/plus.png"));
                    } catch (IOException ex) {
                        Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (image != null) {
                        javax.swing.ImageIcon icon = new javax.swing.ImageIcon(image);
                        jButtonDefBreaksAdicionar.setIcon(icon);
                    }
                    jButtonDefBreaksAdicionar.setBackground(new Color(254, 254, 254));
                    jTextFieldDefBreaksNome.setText("");
                    jButtonDefBreaksAdicionar.setToolTipText(lingua.translate("Adicionar"));
                    jListFerias.clearSelection();
                    this.clearComboBoxDefBreaks();
                    break;
                case java.awt.event.KeyEvent.VK_DELETE:
                    jButtonDefBreakApagar.doClick();
                    break;
                default:
                    break;
            }
        }
    }//GEN-LAST:event_jListFeriasKeyPressed

    private void jPanelDefBreaksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelDefBreaksMouseClicked
        if (!jListFerias.isSelectionEmpty()) {
            String texto = jTextFieldDefBreaksNome.getText();
            String[] valor = jListFerias.getSelectedValue().split(":");
            java.awt.image.BufferedImage image = null;
            try {
                image = ImageIO.read(getClass().getResourceAsStream("Images/plus.png"));
            } catch (IOException ex) {
                Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (image != null) {
                javax.swing.ImageIcon icon = new javax.swing.ImageIcon(image);
                jButtonDefBreaksAdicionar.setIcon(icon);
            }
            jButtonDefBreaksAdicionar.setToolTipText(lingua.translate("Adicionar"));
            if (texto.equals(valor[0])) {
                jTextFieldDefBreaksNome.setText("");
                jButtonDefBreaksAdicionar.setBackground(new Color(254, 254, 254));
                this.clearComboBoxDefBreaks();
            }
            jListFerias.clearSelection();
            jButtonDefBreakApagar.setBackground(new Color(254, 254, 254));
        }

    }//GEN-LAST:event_jPanelDefBreaksMouseClicked

    private void jTextFieldDefBreaksNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDefBreaksNomeKeyReleased
        this.updatejTextFieldDefBreak();
    }//GEN-LAST:event_jTextFieldDefBreaksNomeKeyReleased

    private void updatejTextFieldDefBreak() {
        String nome = jTextFieldDefBreaksNome.getText().trim();
        int limite = 50;
        if (nome.length() < limite) {
            jTextFieldDefBreaksNome.setToolTipText(lingua.translate("Introduzir_um_nome_para_o_periodo_indicado"));
            Border borderg = BorderFactory.createLineBorder(Color.black, 1);
            Border borderf = BorderFactory.createEmptyBorder(0, 10, 0, 10);
            jTextFieldDefBreaksNome.setBorder(BorderFactory.createCompoundBorder(borderg, borderf));
            if (!jListFerias.isSelectionEmpty()) {
                String[] valor = jListFerias.getSelectedValue().split(":");
                if (valor[0].equals(nome)) {
                    java.awt.image.BufferedImage image = null;
                    try {
                        image = ImageIO.read(getClass().getResourceAsStream("Images/ok.png"));
                    } catch (IOException ex) {
                        Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (image != null) {
                        javax.swing.ImageIcon icon = new javax.swing.ImageIcon(image);
                        jButtonDefBreaksAdicionar.setIcon(icon);
                    }
                    jButtonDefBreaksAdicionar.setToolTipText(lingua.translate("Editar"));
                } else {
                    java.awt.image.BufferedImage image = null;
                    try {
                        image = ImageIO.read(getClass().getResourceAsStream("Images/plus.png"));
                    } catch (IOException ex) {
                        Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (image != null) {
                        javax.swing.ImageIcon icon = new javax.swing.ImageIcon(image);
                        jButtonDefBreaksAdicionar.setIcon(icon);
                    }
                    this.clearComboBoxDefBreaks();
                    jListFerias.clearSelection();
                    jButtonDefBreaksAdicionar.setToolTipText(lingua.translate("Adicionar"));
                    jButtonDefBreakApagar.setBackground(new Color(254, 254, 254));
                }
            } else {
                DefaultListModel modelo = (DefaultListModel) jListFerias.getModel();
                String[] val;
                for (int i = 0; i < modelo.getSize(); i++) {
                    val = modelo.get(i).toString().split(":");
                    if (val[0].equals(nome)) {
                        java.awt.image.BufferedImage image = null;
                        try {
                            image = ImageIO.read(getClass().getResourceAsStream("Images/ok.png"));
                        } catch (IOException ex) {
                            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        if (image != null) {
                            javax.swing.ImageIcon icon = new javax.swing.ImageIcon(image);
                            jButtonDefBreaksAdicionar.setIcon(icon);
                        }
                        jButtonDefBreaksAdicionar.setToolTipText(lingua.translate("Editar"));
                        jListFerias.setSelectedIndex(i);
                        String dia = String.valueOf(intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getBeginDate().getDay());
                        int mes = intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getBeginDate().getMonth() - 1;
                        String ano = String.valueOf(intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getBeginDate().getYear());
                        jComboBoxDefBreaksDiaInicio.setSelectedItem(dia);
                        jComboBoxDefBreaksMesInicio.setSelectedIndex(mes);
                        jComboBoxDefBreaksAnoInicio.setSelectedItem(ano);
                        dia = String.valueOf(intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getEndDate().getDay());
                        mes = intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getEndDate().getMonth() - 1;
                        ano = String.valueOf(intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getEndDate().getYear());
                        jComboBoxDefBreaksDiaFim.setSelectedItem(dia);
                        jComboBoxDefBreaksMesFim.setSelectedIndex(mes);
                        jComboBoxDefBreaksAnoFim.setSelectedItem(ano);
                        jButtonDefBreakApagar.setBackground(Color.red);
                    }
                }
            }
            this.verifyValityofDates(nome, limite);
        } else {
            Border borderg = BorderFactory.createLineBorder(Color.red, 2);
            Border borderf = BorderFactory.createEmptyBorder(0, 10, 0, 10);
            jTextFieldDefBreaksNome.setBorder(BorderFactory.createCompoundBorder(borderg, borderf));
            jButtonDefBreaksAdicionar.setBackground(new Color(254, 254, 254));
            jTextFieldDefBreaksNome.setToolTipText(lingua.translate("Texto_demasiado_grande(superior_a") + " " + limite + " " + lingua.translate("caracteres") + ").");
        }
    }
    private void jButtonDefBreaksAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefBreaksAdicionarActionPerformed
        if (jButtonDefBreaksAdicionar.getBackground() == Color.GREEN) {
            String nome = jTextFieldDefBreaksNome.getText();
            String nome2 = "";
            if (jListFerias.getSelectedIndex() >= 0) {
                nome2 = intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getName();
            }
            if ((!nome.equals(nome2)) && (!nome.equals(""))) {
                int dia = Integer.valueOf(jComboBoxDefBreaksDiaInicio.getSelectedItem().toString());
                int mes = jComboBoxDefBreaksMesInicio.getSelectedIndex() + 1;
                int ano = Integer.valueOf(jComboBoxDefBreaksAnoInicio.getSelectedItem().toString());
                TimeDate.Date dat1 = new TimeDate.Date(dia, mes, ano);
                dia = Integer.valueOf(jComboBoxDefBreaksDiaFim.getSelectedItem().toString());
                mes = jComboBoxDefBreaksMesFim.getSelectedIndex() + 1;
                ano = Integer.valueOf(jComboBoxDefBreaksAnoFim.getSelectedItem().toString());
                TimeDate.Date dat2 = new TimeDate.Date(dia, mes, ano);
                TimeDate.BreakPeriod br = new TimeDate.BreakPeriod(dat1, dat2, nome);
                intervalos.addBreakPeriod(br);
                this.drawBreaksList();
                jTextFieldDefBreaksNome.setText("");
                jButtonDefBreaksAdicionar.setBackground(new Color(254, 254, 254));
                jButtonDefBreakApagar.setBackground(new Color(254, 254, 254));
                this.clearComboBoxDefBreaks();
            } else if (nome.equals(nome2)) {
                int dia = Integer.valueOf(jComboBoxDefBreaksDiaInicio.getSelectedItem().toString());
                int mes = jComboBoxDefBreaksMesInicio.getSelectedIndex() + 1;
                int ano = Integer.valueOf(jComboBoxDefBreaksAnoInicio.getSelectedItem().toString());
                TimeDate.Date date1 = new TimeDate.Date(dia, mes, ano);
                dia = Integer.valueOf(jComboBoxDefBreaksDiaFim.getSelectedItem().toString());
                mes = jComboBoxDefBreaksMesFim.getSelectedIndex() + 1;
                ano = Integer.valueOf(jComboBoxDefBreaksAnoFim.getSelectedItem().toString());
                TimeDate.Date date2 = new TimeDate.Date(dia, mes, ano);
                intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).setBeginDate(date1);
                intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).setEndDate(date2);
                this.clearComboBoxDefBreaks();
                java.awt.image.BufferedImage image = null;
                try {
                    image = ImageIO.read(getClass().getResourceAsStream("Images/plus.png"));
                } catch (IOException ex) {
                    Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (image != null) {
                    javax.swing.ImageIcon icon = new javax.swing.ImageIcon(image);
                    jButtonDefBreaksAdicionar.setIcon(icon);
                }
                jButtonDefBreaksAdicionar.setToolTipText(lingua.translate("Adicionar"));
                jTextFieldDefBreaksNome.setText("");
                jButtonDefBreakApagar.setBackground(new Color(254, 254, 254));
                this.drawBreaksList();
            }
        }
    }//GEN-LAST:event_jButtonDefBreaksAdicionarActionPerformed

    private void clearComboBoxDefBreaks() {
        jComboBoxDefBreaksDiaInicio.setSelectedItem("1");
        jComboBoxDefBreaksMesInicio.setSelectedIndex(0);
        jComboBoxDefBreaksAnoInicio.setSelectedIndex(50);
        jComboBoxDefBreaksDiaFim.setSelectedItem("1");
        jComboBoxDefBreaksMesFim.setSelectedIndex(0);
        jComboBoxDefBreaksAnoFim.setSelectedIndex(50);
    }
    private void jTextFieldDefBreaksNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDefBreaksNomeFocusGained
        jTextFieldDefBreaksNome.setBackground(new Color(250, 250, 250));
    }//GEN-LAST:event_jTextFieldDefBreaksNomeFocusGained

    private void jTextFieldDefBreaksNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDefBreaksNomeFocusLost
        jTextFieldDefBreaksNome.setBackground(new Color(210, 214, 221));
    }//GEN-LAST:event_jTextFieldDefBreaksNomeFocusLost

    private void jListFeriadosEscolhidosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListFeriadosEscolhidosValueChanged
        if (!jListFeriadosEscolhidos.isSelectionEmpty()) {
            jButtonDefHolidaysApagar.setBackground(Color.red);
        } else {
            jButtonDefHolidaysApagar.setBackground(new Color(254, 254, 254));
        }
    }//GEN-LAST:event_jListFeriadosEscolhidosValueChanged

    private void jListFeriadosEscolhidosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jListFeriadosEscolhidosKeyPressed
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_DELETE:
                if (jButtonDefHolidaysApagar.getBackground() == Color.red) {
                    jButtonDefHolidaysApagar.doClick();
                }
                break;
            case KeyEvent.VK_ENTER:
                this.mostrajListFeriadosMensagem();
                break;
            case KeyEvent.VK_ESCAPE:
                jButtonDefHolidaysApagar.setBackground(new Color(254, 254, 254));
                jListFeriadosEscolhidos.clearSelection();
                jListFeriadosDefeito.clearSelection();
                break;
            default:
                break;
        }
    }//GEN-LAST:event_jListFeriadosEscolhidosKeyPressed

    private void jListFeriadosEscolhidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListFeriadosEscolhidosMouseClicked
        if (!jListFeriadosEscolhidos.isSelectionEmpty()) {
            jButtonDefHolidaysApagar.setBackground(Color.red);
            if (evt.getClickCount() == 2) {
                this.mostrajListFeriadosMensagem();
            }
        } else {
            jButtonDefHolidaysApagar.setBackground(new Color(254, 254, 254));
        }
    }//GEN-LAST:event_jListFeriadosEscolhidosMouseClicked

    private void jListFeriasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListFeriasValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jListFeriasValueChanged

    private void jToggleButtonBarRequisicoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonBarRequisicoesActionPerformed
        if (jToggleButtonBarRequisicoes.isSelected()) {
            if (auxiliar.isAlive()) {
                Threads.EfectsOnDivisor ev = (Threads.EfectsOnDivisor) auxiliar;
                ev.setCondition(false);
            }
            auxiliar = new Threads.EfectsOnDivisor(jSplitPaneInicial, jSplitPaneInicial.getWidth());
            auxiliar.start();
            jToggleButtonBarEntregas.setSelected(false);
            bitpagina[0] = 1;
            bitpagina[1] = 0;
        } else {
            bitpagina[0] = 0;
            bitpagina[1] = 0;
            if (auxiliar.isAlive()) {
                Threads.EfectsOnDivisor ev = (Threads.EfectsOnDivisor) auxiliar;
                ev.setCondition(false);
            } else {
                auxiliar = new Threads.EfectsOnDivisor(jSplitPaneInicial, 0.5);
                jToggleButtonBarRequisicoes.setSelected(false);
                jToggleButtonBarEntregas.setSelected(false);
                auxiliar.start();
            }
        }
    }//GEN-LAST:event_jToggleButtonBarRequisicoesActionPerformed

    private void jToggleButtonBarEntregasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonBarEntregasActionPerformed
        if (jToggleButtonBarEntregas.isSelected()) {
            if (auxiliar.isAlive()) {
                Threads.EfectsOnDivisor ev = (Threads.EfectsOnDivisor) auxiliar;
                ev.setCondition(false);
            }
            auxiliar = new Threads.EfectsOnDivisor(jSplitPaneInicial, 0);
            auxiliar.start();
            jToggleButtonBarRequisicoes.setSelected(false);
            bitpagina[0] = 0;
            bitpagina[1] = 1;
        } else {
            bitpagina[0] = 0;
            bitpagina[0] = 0;
            if (auxiliar.isAlive()) {
                Threads.EfectsOnDivisor ev = (Threads.EfectsOnDivisor) auxiliar;
                ev.setCondition(false);
            } else {
                auxiliar = new Threads.EfectsOnDivisor(jSplitPaneInicial, 0.5);
                jToggleButtonBarRequisicoes.setSelected(false);
                jToggleButtonBarEntregas.setSelected(false);
                auxiliar.start();
            }
        }
    }//GEN-LAST:event_jToggleButtonBarEntregasActionPerformed

    private void jSplitPaneInicialComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jSplitPaneInicialComponentMoved

    }//GEN-LAST:event_jSplitPaneInicialComponentMoved

    private void jButtonAtuacaoConfirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtuacaoConfirmaActionPerformed
        DataBase.DataBase db = new DataBase.DataBase(urlbd);
        Clavis.Request req = lista_req.getSelectedRequest();
        if (req != null) {
            db.changeRequestActiveState(req);
            lista_req.removeSelectedRequest();
            if (tema.equals("escuro")) {
                this.temaEscuro();
            } else {
                this.temaClaro();
            }
        }
        this.reCalculateList(true, lista_dev.getList().getTypeOfMaterial());
    }//GEN-LAST:event_jButtonAtuacaoConfirmaActionPerformed

    private void jButtonAtuacaoAlteraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtuacaoAlteraActionPerformed
        lista_req.setPanelColor(Color.GRAY);
        this.tdivisor = 20;
        prefs.save();
        this.jSplitPaneInicial.setDividerSize(tdivisor);
    }//GEN-LAST:event_jButtonAtuacaoAlteraActionPerformed

    private void jComboBoxMudaTemaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxMudaTemaItemStateChanged
        if (jComboBoxMudaTema.getSelectedIndex() == 0) {
            tema = "claro";
            prefs.save();
            this.temaClaro();
        } else {
            tema = "escuro";
            prefs.save();
            this.temaEscuro();
        }
    }//GEN-LAST:event_jComboBoxMudaTemaItemStateChanged

    private void jComboBoxMudaTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMudaTemaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxMudaTemaActionPerformed

    private void jComboBoxMudaLinguagemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxMudaLinguagemItemStateChanged
        Object[] lista = lingua.linguas.toArray();
        String lingu = lista[jComboBoxMudaLinguagem.getSelectedIndex()].toString();
        if (!lingu.equals(lingua.getLocale())) {
            jButtonLinguaMudaConfirma.setEnabled(true);
        } else {
            jButtonLinguaMudaConfirma.setEnabled(false);
        }
    }//GEN-LAST:event_jComboBoxMudaLinguagemItemStateChanged


    private void jComboBoxMudaLinguagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMudaLinguagemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxMudaLinguagemActionPerformed

    private void jButtonLinguaMudaConfirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLinguaMudaConfirmaActionPerformed
        String lingu = "";
        Object[] lista = lingua.linguas.toArray();
        String aux = lista[jComboBoxMudaLinguagem.getSelectedIndex()].toString();
        if (!lingua.getLocale().equals(aux)) {
            lingua.setLocale(aux);
            prefs.save();
            lingu = lingua.getlist(4).get(jComboBoxMudaLinguagem.getSelectedIndex());
        }
        jButtonLinguaMudaConfirma.setEnabled(false);
        if (!lingu.equals("")) {
            UIManager.put("OptionPane.noButtonText", lingua.translate("Nao"));
            UIManager.put("OptionPane.yesButtonMnemonic", "" + Character.getNumericValue(lingua.translate("Reiniciar").charAt(0)));
            UIManager.put("OptionPane.yesButtonText", lingua.translate("Reiniciar"));
            int resposta = JOptionPane.showConfirmDialog(this, lingua.translate("A_linguagem_do_programa_foi_alterada_para_") + lingua.translate(lingu).toLowerCase() + ".", lingua.translate("Confirmacao"), JOptionPane.YES_NO_OPTION);
            if (resposta == 0) {
                this.dispose();
                jDialogDefOpcoes.setVisible(false);
                jDialogDefOpcoes.dispose();
                this.setVisible(false);
                prefs = new PersonalPrefs();
                prefs.setVisible(true);
            } else {
                jLabelLinguaMuda.setVisible(true);
            }
        }
    }//GEN-LAST:event_jButtonLinguaMudaConfirmaActionPerformed

    private void jSliderTamanhoDivisorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderTamanhoDivisorStateChanged
        tdivisor = jSliderTamanhoDivisor.getValue();
        this.jSplitPaneInicial.setDividerSize(tdivisor);

    }//GEN-LAST:event_jSliderTamanhoDivisorStateChanged

    private void jSliderRedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderRedStateChanged
        int red = jSliderRed.getValue();
        int green = jSliderGreen.getValue();
        int blue = jSliderBlue.getValue();
        cordivisor = new Color(red, green, blue);
        this.drawDivisor();
    }//GEN-LAST:event_jSliderRedStateChanged

    private void jSliderGreenStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderGreenStateChanged
        int red = jSliderRed.getValue();
        int green = jSliderGreen.getValue();
        int blue = jSliderBlue.getValue();
        cordivisor = new Color(red, green, blue);
        this.drawDivisor();
    }//GEN-LAST:event_jSliderGreenStateChanged

    private void jSliderBlueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderBlueStateChanged
        int red = jSliderRed.getValue();
        int green = jSliderGreen.getValue();
        int blue = jSliderBlue.getValue();
        cordivisor = new Color(red, green, blue);
        this.drawDivisor();
    }//GEN-LAST:event_jSliderBlueStateChanged

    private void jButtonListaBotoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListaBotoesActionPerformed
        jDialogListaBotoes.setVisible(true);
        jDialogListaBotoes.setLocationRelativeTo(this);
        jTabbedPaneMaterialBotoes.removeAll();
        btrequests = new ButtonListRequest(requisicoes, urlbd, lingua, jTabbedPaneMaterialBotoes);
        jTabbedPaneMaterialBotoes.add(btrequests.getScrollPane());
        jTabbedPaneMaterialBotoes.setTitleAt(0, lingua.translate(requisicoes.getTypeOfMaterial().getTypeOfMaterialName()));
    }//GEN-LAST:event_jButtonListaBotoesActionPerformed

    private void jComboBoxListaBotoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxListaBotoesActionPerformed
        Clavis.TypeOfMaterial mat = tiposmateriais.get(jComboBoxListaBotoes.getSelectedIndex());
        if (!requisicoes.getTypeOfMaterial().equals(mat)) {
            //this.cleanList(false);
            this.calculateList(mat);
        }
    }//GEN-LAST:event_jComboBoxListaBotoesActionPerformed

    private void jButtonAtualizarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtualizarListaActionPerformed
        Clavis.TypeOfMaterial mat = tiposmateriais.get(jComboBoxListaBotoes.getSelectedIndex());
        this.calculateList(mat);

    }//GEN-LAST:event_jButtonAtualizarListaActionPerformed

    private void jButtonConfirmaDevolucaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmaDevolucaoActionPerformed
        DataBase.DataBase db = new DataBase.DataBase(urlbd);
        Clavis.Request req = lista_dev.getSelectedRequest();
        if (req != null) {
            db.changeRequestTerminateState(req);
            lista_dev.removeSelectedRequest();

        }
        //this.reCalculateList(true, lista_dev.getList().getTypeOfMaterial());
    }//GEN-LAST:event_jButtonConfirmaDevolucaoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextFieldProcuraCimaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldProcuraCimaKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            if (jTextFieldProcuraCima.getText().equals("")) {
                lista_req.destroySearch();
                lista_req.addTimerColors();
                lista_req.startTimerColors();
                jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
                jTextFieldProcuraCima.setText(lingua.translate("Pesquisa por utilizador ..."));
                jLabelTitulorequisicoes.setText(lingua.translate("Lista_de_requisi√ß√µes"));
                jLabelTituloOcupacoes.setVisible(true);
                jPanelTituloOcupacoes.remove(jLabelauxiliar);
                this.requestFocusInWindow();
            } else {
                lista_req.serchByUser(jTextFieldProcuraCima.getText());
                jLabelTitulorequisicoes.setText(lingua.translate("Resultado da pesquisa realizada"));
                jLabelTituloOcupacoes.setVisible(false);
                addlinktoCleanSearch();
            }
        } else if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ESCAPE) {
            //if (!jTextFieldProcuraCima.getText().equals("")) {
                lista_req.destroySearch();
                lista_req.addTimerColors();
                lista_req.startTimerColors();
                jLabelTituloOcupacoes.setVisible(true);
                jPanelTituloOcupacoes.remove(jLabelauxiliar);
            //}
            this.requestFocusInWindow();
            jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
            jTextFieldProcuraCima.setText(lingua.translate("Pesquisa por utilizador ..."));
            jLabelTitulorequisicoes.setText(lingua.translate("Lista_de_requisi√ß√µes"));
        }
    }//GEN-LAST:event_jTextFieldProcuraCimaKeyPressed

    private void jTextFieldProcuraCimaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldProcuraCimaFocusGained
        jTextFieldProcuraCima.setText("");
        jTextFieldProcuraCima.setForeground(Color.BLACK);
    }//GEN-LAST:event_jTextFieldProcuraCimaFocusGained

    private void jTextFieldProcuraCimaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldProcuraCimaFocusLost
        if (jTextFieldProcuraCima.getText().equals("")) {
            jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
            jTextFieldProcuraCima.setText(lingua.translate("Pesquisa por utilizador ..."));
        }
    }//GEN-LAST:event_jTextFieldProcuraCimaFocusLost

    private void jButtonProcuraCimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProcuraCimaActionPerformed
        if ((!jTextFieldProcuraCima.getText().equals("")) && (!jTextFieldProcuraCima.getText().equals(lingua.translate("Pesquisa por utilizador ...")))) {
            lista_req.serchByUser(jTextFieldProcuraCima.getText());
            jLabelTitulorequisicoes.setText(lingua.translate("Resultado da pesquisa realizada"));
        } else if (jTextFieldProcuraCima.getText().equals("Pesquisa por utilizador ...")) {
            lista_req.destroySearch();
            lista_req.addTimerColors();
            lista_req.startTimerColors();
            jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
            jTextFieldProcuraCima.setText(lingua.translate("Pesquisa por utilizador ..."));
            jLabelTitulorequisicoes.setText(lingua.translate("Lista_de_requisi√ß√µes"));
            jLabelTituloOcupacoes.setVisible(true);
            jPanelTituloOcupacoes.remove(jLabelauxiliar);
            this.requestFocusInWindow();
        }

    }//GEN-LAST:event_jButtonProcuraCimaActionPerformed

    private void verifyValityofDates(String nome, int limite) {
        if (nome.length() <= limite) {
            int ano = Integer.valueOf(jComboBoxDefBreaksAnoInicio.getSelectedItem().toString());
            int mes = jComboBoxDefBreaksMesInicio.getSelectedIndex() + 1;
            int dia = Integer.valueOf(jComboBoxDefBreaksDiaInicio.getSelectedItem().toString());
            TimeDate.Date inicio = new TimeDate.Date(dia, mes, ano);
            ano = Integer.valueOf(jComboBoxDefBreaksAnoFim.getSelectedItem().toString());
            mes = jComboBoxDefBreaksMesFim.getSelectedIndex() + 1;
            dia = Integer.valueOf(jComboBoxDefBreaksDiaFim.getSelectedItem().toString());
            TimeDate.Date fim = new TimeDate.Date(dia, mes, ano);
            if ((TimeDate.Date.numberOfDaysBetweenDates(inicio, fim) > 0) && (!nome.equals(""))) {
                jButtonDefBreaksAdicionar.setBackground(Color.GREEN);
            } else {
                jButtonDefBreaksAdicionar.setBackground(new Color(254, 254, 254));
            }
        }
    }

    private void mostrajListFeriadosMensagem() {
        TimeDate.Holiday hol = feriados.getHoliday(jListFeriadosEscolhidos.getSelectedIndex());
        hol.setLanguage(lingua);
        int ano = new TimeDate.Date().getYear();
        javax.swing.JLabel l = new javax.swing.JLabel();
        l.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        String palavra = "";
        if (hol.isDinamic()) {
            if (feriados.getCarnival().toString().equals(hol.toString())) {
                palavra = " (" + lingua.translate("Carnaval") + ")";
            } else if (feriados.getEaster().toString().equals(hol.toString())) {
                palavra = " (" + lingua.translate("P√°scoa") + ")";
            } else if (feriados.getGoodFriday().toString().equals(hol.toString())) {
                palavra = " (" + lingua.translate("Sexta-feira_santa") + ")";
            } else if (feriados.getCorpusChristi().toString().equals(hol.toString())) {
                palavra = " (" + lingua.translate("corpo_deus") + ")";
            }
        }
        l.setText(hol.toLongString() + " " + lingua.translate("de") + " " + ano + palavra + "\n");
        javax.swing.JLabel m = new javax.swing.JLabel();
        m.setText(lingua.translate("Dia_da_semana") + ": " + hol.getWeekDay(ano) + ".");
        m.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        l.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));
        m.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));
        Object[] lm = {l, m};
        UIManager.put("OptionPane.okButtonText", lingua.translate("Voltar"));
        JOptionPane.showMessageDialog(this, lm, lingua.translate("Informacao"), JOptionPane.PLAIN_MESSAGE);
        UIManager.put("OptionPane.okButtonText", "Ok");
    }

    private void mostrajListFeriasMensagem() {
        int v = jListFerias.getSelectedIndex();
        TimeDate.BreakPeriod br = (TimeDate.BreakPeriod) new java.util.ArrayList(intervalos.getBreakPeriodList()).get(v);
        int ano = new TimeDate.Date().getYear();
        javax.swing.JLabel l = new javax.swing.JLabel();
        l.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        l.setText(br.toStringSimple());
        javax.swing.JLabel m = new javax.swing.JLabel();
        javax.swing.JLabel n = new javax.swing.JLabel();
        try {
            TimeDate.WeekDay inicio = new TimeDate.WeekDay(br.getBeginDate());
            inicio.setLanguage(lingua);
            TimeDate.WeekDay fim = new TimeDate.WeekDay(br.getEndDate());
            fim.setLanguage(lingua);
            m.setText(lingua.translate("In√≠cio") + ": " + inicio);
            n.setText(lingua.translate("T√©rmino") + ": " + fim);
        } catch (ParseException ex) {
            Logger.getLogger(KeyQuest.class.getName()).log(Level.SEVERE, null, ex);
        }

        m.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        n.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        l.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));
        m.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));
        n.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));
        Object[] lm = {l, m, n};
        UIManager.put("OptionPane.okButtonText", lingua.translate("Voltar"));
        JOptionPane.showMessageDialog(this, lm, lingua.translate("Informacao"), JOptionPane.PLAIN_MESSAGE);
    }

    public void drawChoosenHolidaysList() {
        DefaultListModel modelo2 = new DefaultListModel();
        feriados.getHolidays().stream().map((ho) -> {
            ho.setLanguage(lingua);
            return ho;
        }).forEach((ho) -> {
            String palavra = ho.toLongString();
            if (ho.isDinamic()) {
                if (feriados.getCarnival().toString().equals(ho.toString())) {
                    palavra = lingua.translate("Carnaval");
                } else if (feriados.getEaster().toString().equals(ho.toString())) {
                    palavra = lingua.translate("P√°scoa");
                } else if (feriados.getGoodFriday().toString().equals(ho.toString())) {
                    palavra = lingua.translate("Sexta-feira_santa");
                } else if (feriados.getCorpusChristi().toString().equals(ho.toString())) {
                    palavra = lingua.translate("corpo_deus");
                }
            }
            modelo2.addElement(palavra);
        });
        jListFeriadosEscolhidos.setModel(modelo2);
        jListFeriadosEscolhidos.setBorder(BorderFactory.createEmptyBorder(20, 40, 0, 40));
        jListFeriadosEscolhidos.setCellRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(javax.swing.JList list, Object value, int index,
                    boolean isSelected,
                    boolean cellHasFocus) {
                javax.swing.JLabel label = (javax.swing.JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                label.setBorder(BorderFactory.createEmptyBorder(4, 0, 4, 0));
                label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                if (isSelected) {
                    label.setBackground(Color.GRAY);
                    label.setForeground(Color.WHITE);
                    label.setBorder(BorderFactory.createLineBorder(Color.black, 1));
                }
                return label;
            }
        });
    }

    public void drawBreaksList() {
        DefaultListModel modelo2 = new DefaultListModel();
        intervalos.getBreakPeriodList().stream().map((ho) -> {
            return ho;
        }).forEach((ho) -> {
            modelo2.addElement(lingua.translate(ho.toString()));
        });
        jListFerias.setModel(modelo2);
        jListFerias.setBorder(BorderFactory.createEmptyBorder(50, 10, 50, 10));
        jListFerias.setCellRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(javax.swing.JList list, Object value, int index,
                    boolean isSelected,
                    boolean cellHasFocus) {
                javax.swing.JLabel label = (javax.swing.JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                label.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));
                label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                if (isSelected) {
                    label.setBackground(Color.GRAY);
                    label.setForeground(Color.WHITE);
                    label.setBorder(BorderFactory.createLineBorder(Color.black, 1));
                }
                return label;
            }
        });
        FileBreakPeriods pf = new FileBreakPeriods();
        pf.saveHolidays(intervalos);
    }

    public void drawDefaultHolidaysList() {
        DefaultListModel<String> modelo = new DefaultListModel<>();
        HolidaysList hol = new FileHolidays().getDefaultHolidaysList();
        hol.getHolidays().stream().map((ho) -> {
            ho.setLanguage(lingua);
            return ho;
        }).forEach((ho) -> {
            modelo.addElement(ho.toLongString());
        });
        jListFeriadosDefeito.setBorder(BorderFactory.createEmptyBorder(10, 40, 0, 40));
        jListFeriadosDefeito.setModel(modelo);
        jListFeriadosDefeito.setCellRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(javax.swing.JList<?> list, Object value, int index,
                    boolean isSelected,
                    boolean cellHasFocus) {
                javax.swing.JLabel label = (javax.swing.JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                label.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));
                label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                if (isSelected) {
                    label.setBackground(Color.GRAY);
                    label.setForeground(Color.WHITE);
                    label.setBorder(BorderFactory.createLineBorder(Color.black, 1));
                }
                return label;
            }
        });
    }

    public final void caracteristicsJFrame() {
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.addWindowStateListener(new WindowStateListener() {
            // conseguir tamanho do monitor... multi-monitor 
            GraphicsDevice gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();
            int width = gd.getDisplayMode().getWidth();
            int height = gd.getDisplayMode().getHeight();

            // conseguir tamanho do monitor... simples
            /*
             Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
             double width = screenSize.getWidth();
             double height = screenSize.getHeight();
             */
            @Override
            public void windowStateChanged(WindowEvent e) {
                if (e.getOldState() == 6) {
                    int x = ((width / 2) - 500);
                    int y = ((height / 2) - 350);
                    setBounds(x, y, 1024, 700);
                }
            }
        });

        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                prefs.save();
            }
        });
        this.drawDivisor();
        // Comportamento do duplo clique no separador  
    }

    private void drawDivisor() {
        jSplitPaneInicial.setOneTouchExpandable(false);
        jSplitPaneInicial.setUI(new BasicSplitPaneUI() {
            @Override
            public BasicSplitPaneDivider createDefaultDivider() {
                return new BasicSplitPaneDivider(this) {
                    @Override
                    public void setBorder(Border b) {
                    }

                    @Override
                    public void paint(java.awt.Graphics g) {
                        java.awt.Graphics2D g2 = (java.awt.Graphics2D) g;
                        g.setColor(Color.GRAY);
                        java.awt.GradientPaint redtowhite = new java.awt.GradientPaint(0, 0, cordivisor, getSize().width, 0, Color.black);
                        g2.setPaint(redtowhite);
                        g2.fillRect(0, 0, getSize().width, getSize().height);
                        g2.setColor(Color.WHITE);
                        g2.drawLine(0, getSize().height - 2, getSize().width, getSize().height - 2);
                        g2.drawLine(0, 1, getSize().width, 1);
                        g2.setColor(Color.black);
                        g2.drawLine(0, 0, getSize().width, 0);
                        g2.drawLine(0, getSize().height - 1, getSize().width, getSize().height - 1);
                        g2.setColor(Color.WHITE);
                        g2.drawLine(getSize().width / 3, getSize().height / 2 + 3, getSize().width * 2 / 3, getSize().height / 2 + 3);
                        g2.drawLine(getSize().width / 3, getSize().height / 2 + 1, getSize().width * 2 / 3, getSize().height / 2 + 1);
                        g2.drawLine(getSize().width / 3, getSize().height / 2 - 1, getSize().width * 2 / 3, getSize().height / 2 - 1);
                        g2.drawLine(getSize().width / 3, getSize().height / 2 - 3, getSize().width * 2 / 3, getSize().height / 2 - 3);
                        super.paint(g);
                    }
                };
            }
        });
        BasicSplitPaneUI ui = (BasicSplitPaneUI) jSplitPaneInicial.getUI();
        BasicSplitPaneDivider divisor = ui.getDivider();
        divisor.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                if (evt.getClickCount() == 2) {
                    if (auxiliar.isAlive()) {
                        Threads.EfectsOnDivisor ev = (Threads.EfectsOnDivisor) auxiliar;
                        ev.setCondition(false);
                    }
                    auxiliar = new Threads.EfectsOnDivisor(jSplitPaneInicial, 0.5);
                    jToggleButtonBarRequisicoes.setSelected(false);
                    jToggleButtonBarEntregas.setSelected(false);
                    bitpagina[0] = 0;
                    bitpagina[1] = 0;
                    auxiliar.start();
                }
            }
        });

        divisor.addMouseMotionListener(new MouseMotionListener() {
            @Override
            public void mouseDragged(MouseEvent e) {
                if (jSplitPaneInicial.getDividerLocation() > jSplitPaneInicial.getHeight() - 100) {
                    jToggleButtonBarRequisicoes.setSelected(true);
                    bitpagina[0] = 1;
                    bitpagina[1] = 0;
                } else if (jSplitPaneInicial.getDividerLocation() < 100) {
                    jToggleButtonBarEntregas.setSelected(true);
                    bitpagina[0] = 0;
                    bitpagina[1] = 1;
                } else {
                    jToggleButtonBarRequisicoes.setSelected(false);
                    jToggleButtonBarEntregas.setSelected(false);
                    bitpagina[0] = 0;
                    bitpagina[1] = 0;
                }
            }

            @Override
            public void mouseMoved(MouseEvent e) {

            }
        });
    }

    protected final void init() {
        HolidaysList.updateDynamicHolidays();
        this.intervalos = new FileBreakPeriods().getBreakPeriods();
        this.feriados = new FileHolidays().getHolidays();
        urlcsv = DEFAULT_URlCSV;
        urlbd = DEFAULT_URlBD;
        initComponents();
        this.tiposmateriais = new DataBase.DataBase(urlbd).getTypesOfMaterial();
        String[] lista = new String[tiposmateriais.size()];
        int i = 0;
        for (Clavis.TypeOfMaterial mat : tiposmateriais) {
            lista[i] = lingua.translate(mat.getTypeOfMaterialName());
            i++;
        }

        jComboBoxListaBotoes.setModel(new javax.swing.DefaultComboBoxModel<>(lista));
        createMenu();
        this.calculateList();
        Main.UpdateCSVonDB cbd = new Main.UpdateCSVonDB(new TimeDate.Date(), new TimeDate.Date(12, 1, 2017), intervalos, feriados, DEFAULT_URlBD, DEFAULT_URlCSV);
        //cbd.update();
        if ((bitpagina[0] == 1) && (bitpagina[1]) == 0) {
            jSplitPaneInicial.setDividerLocation((int) jPanelInicial.getSize().getHeight());
            jToggleButtonBarRequisicoes.setSelected(true);
        } else if ((bitpagina[1] == 1) && (bitpagina[0] == 0)) {
            jSplitPaneInicial.setDividerLocation(0.0);
            jToggleButtonBarEntregas.setSelected(true);
        } else {
            jSplitPaneInicial.setDividerLocation(0.5);
        }
        pack();
        setLocationRelativeTo(null);
        //this.addDayTimer();
    }

    private void createMenu() {
        Menu menu = new Menu();
        JMenu menuFicheiro = new JMenu();
        JMenu jMenuDefinicoes = new JMenu();
        menuFicheiro.setText(lingua.translate("Ficheiro"));
        menuFicheiro.setMnemonic(lingua.translate("Ficheiro").charAt(0));
        JMenuItem itemSair = new JMenuItem();
        itemSair.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, Event.ALT_MASK));
        itemSair.setText(lingua.translate("Sair"));
        itemSair.setCursor(new Cursor(Cursor.HAND_CURSOR));
        itemSair.addActionListener((ActionEvent e) -> {
            sair(e);
        });
        java.awt.image.BufferedImage im = null;
        javax.swing.ImageIcon icon = null;
        try {
            im = ImageIO.read(getClass().getResourceAsStream("Images/menu/exit.png"));
            icon = new javax.swing.ImageIcon(im);
            itemSair.setIcon(icon);
        } catch (IOException e) {
        }
        menuFicheiro.add(itemSair);
        menu.add(menuFicheiro);
        jMenuDefinicoes.setText(lingua.translate("Defini√ß√µes"));
        jMenuDefinicoes.setMnemonic(lingua.translate("Defini√ß√µes").charAt(0));
        JMenuItem itemFeriados = new JMenuItem();
        itemFeriados.setText(lingua.translate("Editar_feriados"));
        itemFeriados.setCursor(new Cursor(Cursor.HAND_CURSOR));
        itemFeriados.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_H, Event.ALT_MASK));
        itemFeriados.addActionListener((java.awt.event.ActionEvent evt) -> {
            itemFeriadosActionPerformed(evt);
        });
        try {
            im = ImageIO.read(getClass().getResourceAsStream("Images/menu/feriado.png"));
            icon = new javax.swing.ImageIcon(im);
            itemFeriados.setIcon(icon);
        } catch (IOException e) {
        }
        jMenuDefinicoes.add(itemFeriados);
        JMenuItem itemFerias = new JMenuItem();
        itemFerias.setText(lingua.translate("Editar_Periodos_Interrupcao"));
        itemFerias.setCursor(new Cursor(Cursor.HAND_CURSOR));
        itemFerias.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_B, Event.ALT_MASK));
        itemFerias.addActionListener((java.awt.event.ActionEvent evt) -> {
            itemFeriasActionPerformed(evt);
        });
        try {
            im = ImageIO.read(getClass().getResourceAsStream("Images/menu/ferias.png"));
            icon = new javax.swing.ImageIcon(im);
            itemFerias.setIcon(icon);
        } catch (IOException e) {
        }
        jMenuDefinicoes.add(itemFerias);
        JMenuItem itemDefinicoes = new JMenuItem();
        itemDefinicoes.setText(lingua.translate("Definicoes_visualizacao"));
        itemDefinicoes.setCursor(new Cursor(Cursor.HAND_CURSOR));
        itemDefinicoes.setAccelerator(KeyStroke.getKeyStroke(itemDefinicoes.getText().charAt(0), Event.ALT_MASK));
        itemDefinicoes.addActionListener((java.awt.event.ActionEvent evt) -> {
            itemDefinicoesActionPerformed(evt);
        });
        try {
            im = ImageIO.read(getClass().getResourceAsStream("Images/menu/ver.png"));
            icon = new javax.swing.ImageIcon(im);
            itemDefinicoes.setIcon(icon);
        } catch (IOException e) {
        }
        jMenuDefinicoes.add(itemDefinicoes);
        menu.add(jMenuDefinicoes);

        this.setJMenuBar(menu);

    }

    private void addDayTimer() {
        Calendar today = Calendar.getInstance();
        today.set(Calendar.HOUR_OF_DAY, 0);
        today.set(Calendar.MINUTE, 0);
        today.set(Calendar.SECOND, 0);
        java.util.Timer timer = new java.util.Timer();
        timer.scheduleAtFixedRate(new java.util.TimerTask() {
            @Override
            public void run() {
                calculateList();
            }
        }, today.getTime(), TimeUnit.MILLISECONDS.convert(1, TimeUnit.DAYS));

    }

    private void itemFeriadosActionPerformed(java.awt.event.ActionEvent evt) {
        jButtonDefHolidaysDireita.setBackground(new Color(254, 254, 254));
        jButtonDefHolidaysApagar.setBackground(new Color(254, 254, 254));
        this.drawDefaultHolidaysList();
        this.drawChoosenHolidaysList();
        jDialogDefHolidays.setVisible(true);
        jDialogDefHolidays.setLocationRelativeTo(KeyQuest.this);
        if (feriados.hasEaster()) {
            jRadioButtonPascoa.setSelected(true);
        }
        if (feriados.hasCarnival()) {
            jRadioButtonCarnaval.setSelected(true);
        }
        if (feriados.hasCorpusChristi()) {
            jRadioButtonCorpoDeus.setSelected(true);
        }
        if (feriados.hasGoodFriday()) {
            jRadioButtonSextaFeira.setSelected(true);
        }

    }

    private void itemFeriasActionPerformed(java.awt.event.ActionEvent evt) {
        jDialogDefBreaks.setVisible(true);
        jDialogDefBreaks.setLocationRelativeTo(KeyQuest.this);
        jTextFieldDefBreaksNome.setText("");
        this.drawBreaksList();
        this.drawTimeComboBoxes();
    }

    private void itemDefinicoesActionPerformed(java.awt.event.ActionEvent evt) {
        jDialogDefOpcoes.setVisible(true);
        jDialogDefOpcoes.setLocationRelativeTo(KeyQuest.this);
        if (tema.equals("claro")) {
            jComboBoxMudaTema.setSelectedIndex(0);
        } else {
            jComboBoxMudaTema.setSelectedIndex(1);
        }

        int lingu = 0;
        Object[] lista = lingua.linguas.toArray();
        int i = 0;
        while (i < lista.length) {
            if (lingua.getLocale().equals(lista[i].toString())) {
                lingu = i;
            }
            i++;
        }
        jComboBoxMudaLinguagem.setSelectedIndex(lingu);
        jSliderTamanhoDivisor.setValue(tdivisor);
        int red = cordivisor.getRed();
        int green = cordivisor.getGreen();
        int blue = cordivisor.getBlue();
        jSliderRed.setValue(red);
        jSliderGreen.setValue(green);
        jSliderBlue.setValue(blue);
    }

    private void addlinktoCleanSearch() {
        jLabelauxiliar = new javax.swing.JLabel(lingua.translate("Limpar pesquisa"));
        jLabelauxiliar.setBackground(jPanelCima.getBackground());
        jLabelauxiliar.setCursor(new Cursor(Cursor.HAND_CURSOR));
        jLabelauxiliar.setBorder(BorderFactory.createEmptyBorder(16, 17, 0, 5));
        jPanelCima.getLayout().addLayoutComponent("jLabelauxiliar", jLabelauxiliar);
        javax.swing.GroupLayout jPanelTituloOcupacoesLayout = new javax.swing.GroupLayout(jPanelTituloOcupacoes);
        jPanelTituloOcupacoes.setLayout(jPanelTituloOcupacoesLayout);
        jPanelTituloOcupacoesLayout.setHorizontalGroup(
                jPanelTituloOcupacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanelTituloOcupacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabelauxiliar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 33, 153))
        );
        jPanelTituloOcupacoesLayout.setVerticalGroup(
                jPanelTituloOcupacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanelTituloOcupacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabelauxiliar, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
        );
        jLabelauxiliar.addMouseListener(new java.awt.event.MouseAdapter() {
           

            @Override
            public void mousePressed(MouseEvent e) {
                lista_req.destroySearch();
                lista_req.addTimerColors();
                lista_req.startTimerColors();
                jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
                jTextFieldProcuraCima.setText(lingua.translate("Pesquisa por utilizador ..."));
                jLabelTitulorequisicoes.setText(lingua.translate("Lista_de_requisi√ß√µes"));
                jLabelTituloOcupacoes.setVisible(true);
                jPanelTituloOcupacoes.remove(jLabelauxiliar);
                requestFocusInWindow();

            }

            @Override
            public void mouseEntered(MouseEvent e) {
                jLabelauxiliar.setForeground(Color.WHITE);
            }

            @Override
            public void mouseExited(MouseEvent e) {
                jLabelauxiliar.setForeground(Color.BLACK);
            }

        });
    }

    private void drawTimeComboBoxes() {
        int ano = new TimeDate.Date().getYear();
        int limite = 50;
        String[] anos = new String[101];
        ano = ano - 50;
        for (int i = 0; i < 101; i++) {
            anos[i] = String.valueOf(ano + i);
        }
        jComboBoxDefBreaksAnoInicio.setModel(new javax.swing.DefaultComboBoxModel<>(anos));
        jComboBoxDefBreaksAnoInicio.setSelectedIndex(50);
        jComboBoxDefBreaksMesInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{lingua.translate("Janeiro"), lingua.translate("Fevereiro"),
            lingua.translate("Mar√ßo"), lingua.translate("Abril"), lingua.translate("Maio"),
            lingua.translate("Junho"), lingua.translate("Julho"), lingua.translate("Agosto"), lingua.translate("Setembro"),
            lingua.translate("Outubro"), lingua.translate("Novembro"), lingua.translate("Dezembro")}));
        jComboBoxDefBreaksMesInicio.setSelectedIndex(0);
        ((javax.swing.JLabel) jComboBoxDefBreaksMesInicio.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        ((javax.swing.JLabel) jComboBoxDefBreaksAnoInicio.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        ((javax.swing.JLabel) jComboBoxDefBreaksDiaInicio.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        ((javax.swing.JLabel) jComboBoxDefBreaksDiaInicio.getRenderer()).setSize(200, 20);
        ((javax.swing.JLabel) jComboBoxDefBreaksDiaInicio.getRenderer()).setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 10));
        ((javax.swing.JLabel) jComboBoxDefBreaksMesInicio.getRenderer()).setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 10));
        ((javax.swing.JLabel) jComboBoxDefBreaksAnoInicio.getRenderer()).setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 10));
        jComboBoxDefBreaksDiaInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));
        jComboBoxDefBreaksMesInicio.addActionListener((ActionEvent e) -> {
            int vval = jComboBoxDefBreaksMesInicio.getSelectedIndex();
            int select = jComboBoxDefBreaksDiaInicio.getSelectedIndex();
            if ((vval == 3) || (vval == 5) || (vval == 8) || (vval == 10)) {
                jComboBoxDefBreaksDiaInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30"}));
                if (select == 30) {
                    select = 29;
                }
            } else if (vval == 1) {
                if (TimeDate.Date.verifyJump(Integer.valueOf(jComboBoxDefBreaksAnoInicio.getSelectedItem().toString()))) {
                    jComboBoxDefBreaksDiaInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29"}));
                } else {
                    if ((vval == 1) && (select == 28)) {
                        jComboBoxDefBreaksDiaInicio.setSelectedIndex(27);
                    }
                    jComboBoxDefBreaksDiaInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28"}));
                }
            } else {
                jComboBoxDefBreaksDiaInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));
            }
            if (jComboBoxDefBreaksDiaInicio.getModel().getSize() > select) {
                jComboBoxDefBreaksDiaInicio.setSelectedIndex(select);
            }
            this.verifyValityofDates(jTextFieldDefBreaksNome.getText(), limite);
        });
        jComboBoxDefBreaksAnoInicio.addActionListener((ActionEvent e) -> {
            int select = jComboBoxDefBreaksDiaInicio.getSelectedIndex();
            int select2 = jComboBoxDefBreaksMesInicio.getSelectedIndex();
            if (select2 == 1) {
                if (!TimeDate.Date.verifyJump(Integer.valueOf(jComboBoxDefBreaksAnoInicio.getSelectedItem().toString()))) {
                    jComboBoxDefBreaksDiaInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28"}));
                    if ((select == 28) && (select2 == 1)) {
                        jComboBoxDefBreaksDiaInicio.setSelectedIndex(27);
                    } else {
                        jComboBoxDefBreaksDiaInicio.setSelectedIndex(select);
                    }

                } else {
                    jComboBoxDefBreaksDiaInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29"}));
                    jComboBoxDefBreaksDiaInicio.setSelectedIndex(select);
                }
            }
            this.verifyValityofDates(jTextFieldDefBreaksNome.getText(), limite);
        });
        jComboBoxDefBreaksAnoFim.setModel(new javax.swing.DefaultComboBoxModel<>(anos));
        jComboBoxDefBreaksAnoFim.setSelectedIndex(50);
        jComboBoxDefBreaksMesFim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{lingua.translate("Janeiro"), lingua.translate("Fevereiro"),
            lingua.translate("Mar√ßo"), lingua.translate("Abril"), lingua.translate("Maio"),
            lingua.translate("Junho"), lingua.translate("Julho"), lingua.translate("Agosto"), lingua.translate("Setembro"),
            lingua.translate("Outubro"), lingua.translate("Novembro"), lingua.translate("Dezembro")}));
        jComboBoxDefBreaksMesFim.setSelectedIndex(0);
        ((javax.swing.JLabel) jComboBoxDefBreaksMesFim.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        ((javax.swing.JLabel) jComboBoxDefBreaksAnoFim.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        ((javax.swing.JLabel) jComboBoxDefBreaksDiaFim.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        ((javax.swing.JLabel) jComboBoxDefBreaksDiaFim.getRenderer()).setSize(200, 20);
        ((javax.swing.JLabel) jComboBoxDefBreaksDiaFim.getRenderer()).setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 10));
        ((javax.swing.JLabel) jComboBoxDefBreaksMesFim.getRenderer()).setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 10));
        ((javax.swing.JLabel) jComboBoxDefBreaksAnoFim.getRenderer()).setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 10));
        jComboBoxDefBreaksDiaFim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));
        jComboBoxDefBreaksMesFim.addActionListener((ActionEvent e) -> {
            int vval = jComboBoxDefBreaksMesFim.getSelectedIndex();
            int select = jComboBoxDefBreaksDiaFim.getSelectedIndex();
            if ((vval == 3) || (vval == 5) || (vval == 8) || (vval == 10)) {
                jComboBoxDefBreaksDiaFim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30"}));
                if (select == 30) {
                    select = 29;
                }
            } else if (vval == 1) {
                if (TimeDate.Date.verifyJump(Integer.valueOf(jComboBoxDefBreaksAnoFim.getSelectedItem().toString()))) {
                    jComboBoxDefBreaksDiaFim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29"}));
                } else {
                    if ((vval == 1) && (select == 28)) {
                        jComboBoxDefBreaksDiaFim.setSelectedIndex(27);
                    }
                    jComboBoxDefBreaksDiaFim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28"}));
                }
            } else {
                jComboBoxDefBreaksDiaFim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));
            }
            if (jComboBoxDefBreaksDiaFim.getModel().getSize() > select) {
                jComboBoxDefBreaksDiaFim.setSelectedIndex(select);
            }
            this.verifyValityofDates(jTextFieldDefBreaksNome.getText(), limite);
        });
        jComboBoxDefBreaksAnoFim.addActionListener((ActionEvent e) -> {
            int select = jComboBoxDefBreaksDiaFim.getSelectedIndex();
            int select2 = jComboBoxDefBreaksMesFim.getSelectedIndex();
            if (select2 == 1) {
                if (!TimeDate.Date.verifyJump(Integer.valueOf(jComboBoxDefBreaksAnoFim.getSelectedItem().toString()))) {
                    jComboBoxDefBreaksDiaFim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28"}));
                    if ((select == 28) && (select2 == 1)) {
                        jComboBoxDefBreaksDiaFim.setSelectedIndex(27);
                    } else {
                        jComboBoxDefBreaksDiaFim.setSelectedIndex(select);
                    }

                } else {
                    jComboBoxDefBreaksDiaFim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29"}));
                    jComboBoxDefBreaksDiaFim.setSelectedIndex(select);
                }
            }
            this.verifyValityofDates(jTextFieldDefBreaksNome.getText(), limite);
        });
        jComboBoxDefBreaksDiaInicio.addActionListener((ActionEvent e) -> {
            this.verifyValityofDates(jTextFieldDefBreaksNome.getText(), limite);
        });
        jComboBoxDefBreaksDiaFim.addActionListener((ActionEvent e) -> {
            this.verifyValityofDates(jTextFieldDefBreaksNome.getText(), limite);
        });

    }

    private void calculateList() {
        Function funcao = new Function("Professor", 2);
        TypeOfMaterial material = new TypeOfMaterial(1, "sala", 70);
        material.setTypeOfMaterialImage("Sala");
        boolean estado = false;
        requisicoes = new RequestList(urlbd, material, vista, feriados, estado, false);
        requisicoes.make();
        lista_req = new TableRequest(requisicoes, jPanelInformaCimaCima, lingua, false);
        lista_req.getTable().clearSelection();
        lista_req.create();
        lista_req.addListenenerSelectionRequisitions(jButtonAtuacaoConfirma, jButtonAtuacaoAltera);
        jScrollPaneRequisicoes.setViewportView(lista_req.getTable());
        estado = true;
        devolucoes = new RequestList(urlbd, material, RequestList.VIEW_DAY, feriados, estado, false);
        devolucoes.make();
        lista_dev = new TableRequest(devolucoes, jPanelInformaBaixoCima, lingua, true);
        lista_dev.getTable().clearSelection();
        lista_dev.create();
        lista_dev.addListenenerSelectionRequisitions(jButtonConfirmaDevolucao, jButtonAlteraDevolucao);
        jScrollPaneDevolucoes.setViewportView(lista_dev.getTable());
        jSplitPaneInicial.setDividerSize(tdivisor);
        //btrequests = new ButtonListRequest(requisicoes, urlbd, lingua, jTabbedPaneMaterial);
        //jTabbedPaneMaterial.add(btrequests.getScrollPane());
        //jTabbedPaneMaterial.setTitleAt(0, lingua.translate(material.getTypeOfMaterialName()));
        jComboBoxVista.setSelectedIndex(vista);
        lista_req.addTimerColors();
        lista_req.startTimerColors();
        this.controlScroll();
        if (tema.equals("escuro")) {
            this.temaEscuro();
        }

    }

    private void calculateList(Clavis.TypeOfMaterial material) {
        boolean estado = false;
        requisicoes = new RequestList(urlbd, material, vista, feriados, estado, false);
        requisicoes.make();
        lista_req.getTable().clearSelection();
        lista_req = new TableRequest(requisicoes, jPanelInformaCimaCima, lingua, false);
        lista_req.create();
        lista_req.addListenenerSelectionRequisitions(jButtonAtuacaoConfirma, jButtonAtuacaoAltera);
        jScrollPaneRequisicoes.setViewportView(lista_req.getTable());
        estado = true;
        devolucoes = new RequestList(urlbd, material, RequestList.VIEW_DAY, feriados, estado, false);
        devolucoes.make();
        lista_dev.getTable().clearSelection();
        lista_dev = new TableRequest(devolucoes, jPanelInformaBaixoCima, lingua, true);
        lista_dev.create();
        lista_dev.addListenenerSelectionRequisitions(jButtonConfirmaDevolucao, jButtonAlteraDevolucao);
        jScrollPaneDevolucoes.setViewportView(lista_dev.getTable());
        //btrequests = new ButtonListRequest(requisicoes, urlbd, lingua, jTabbedPaneMaterial);
        //jTabbedPaneMaterial.add(btrequests.getScrollPane());
        //jTabbedPaneMaterial.setTitleAt(0, lingua.translate(material.getTypeOfMaterialName()));
        jComboBoxVista.setSelectedIndex(vista);
        lista_req.addTimerColors();
        lista_req.startTimerColors();
        //this.controlScroll();
        if (tema.equals("escuro")) {
            this.temaEscuro();
        }
    }

    private void reCalculateList(boolean estado, Clavis.TypeOfMaterial material) {
        if (!estado) {
            requisicoes = new RequestList(urlbd, material, vista, feriados, estado, false);
            requisicoes.make();
            lista_req.getTable().clearSelection();
            lista_req = new TableRequest(requisicoes, jPanelInformaCimaCima, lingua, estado);
            lista_req.create();
            lista_req.addListenenerSelectionRequisitions(jButtonAtuacaoConfirma, jButtonAtuacaoAltera);
            jScrollPaneRequisicoes.setViewportView(lista_req.getTable());
        } else {
            devolucoes = new RequestList(urlbd, material, RequestList.VIEW_DAY, feriados, estado, false);
            devolucoes.make();
            lista_dev.getTable().clearSelection();
            lista_dev = new TableRequest(devolucoes, jPanelInformaBaixoCima, lingua, true);
            lista_dev.create();
            lista_dev.addListenenerSelectionRequisitions(jButtonConfirmaDevolucao, jButtonAlteraDevolucao);
            jScrollPaneDevolucoes.setViewportView(lista_dev.getTable());
        }
        if (tema.equals("escuro")) {
            this.temaEscuro();
        }
        //this.controlScroll();
    }

    public void sair(ActionEvent e) {
        prefs.save();
        this.dispose();
        System.exit(0);
    }

    private void controlScroll() {
        if (scrollAtivo) {
            scroll = new Timer(1000, (ActionEvent e) -> {
                if (lista_req.getList().getRequests().size() > 0) {
                    if (jScrollPaneRequisicoes.getVerticalScrollBar().isVisible()) {
                        TimeDate.Time tempo = new TimeDate.Time();
                        TimeDate.Date dat = new TimeDate.Date();
                        int i = 0;
                        for (Clavis.Request req : lista_req.getList().getRequests()) {
                            int val = tempo.compareTime(req.getTimeBegin());
                            if ((req.getBeginDate().getDay() == dat.getDay()) && (req.getBeginDate().getMonth() == dat.getMonth()) && (req.getBeginDate().getYear() == dat.getYear())) {
                                // problema da hora de sa√≠da ap√≥s a meio-noite
                                int valfinal;
                                if (new TimeDate.Date().getDayYear() < req.getEndDate().getDayYear()) {
                                    valfinal = new TimeDate.Time(0, 0, 0).compareTime(req.getTimeEnd()) + tempo.compareTime(new TimeDate.Time(23, 59, 59)) + (84600 * (new TimeDate.Date().getDayYear() - req.getEndDate().getDayYear()) - 1);
                                } else {
                                    valfinal = tempo.compareTime(req.getTimeEnd());
                                }
                                //
                                if ((val < 600) && (valfinal >= 0)) {
                                    int max = jScrollPaneRequisicoes.getVerticalScrollBar().getMaximum();
                                    int nlinhas = lista_req.getList().getRequests().size();
                                    max = max / nlinhas;
                                    if (i > 0) {
                                        i = i - 1;
                                    }
                                    int mudanca = max * i;
                                    if (!isRowVisible(lista_req.getTable(), i)) {
                                        jScrollPaneRequisicoes.getVerticalScrollBar().setValue(mudanca);
                                    }
                                    break;
                                } else {
                                    i++;
                                }
                            }
                        }
                    }
                }

            });
            scroll.start();
        }
    }

    private void startScroll() {
        scrollAtivo = true;
        this.controlScroll();
    }

    private void stopScroll() {
        scroll.stop();
        scrollAtivo = false;
    }

    private void temaEscuro() {
        lista_req.setBackGroundColor(Color.black);
        lista_req.setForegroundcolor(Color.white);
        lista_req.setSelectColor(Color.blue);
        lista_req.setPanelColor(new Color(245, 245, 220));
        lista_dev.setBackGroundColor(Color.black);
        lista_dev.setForegroundcolor(Color.white);
        lista_dev.setSelectColor(Color.blue);
        lista_dev.setPanelColor(new Color(245, 245, 220));

    }

    private void temaClaro() {
        lista_req.setBackGroundColor(UIManager.getColor("Table.background"));
        lista_req.setForegroundcolor(Color.black);
        lista_req.setSelectColor(Color.DARK_GRAY);
        lista_req.setPanelColor(Color.gray);
        lista_dev.setBackGroundColor(UIManager.getColor("Table.background"));
        lista_dev.setForegroundcolor(Color.black);
        lista_dev.setSelectColor(Color.DARK_GRAY);
        lista_dev.setPanelColor(Color.GRAY);
    }

    public boolean isRowVisible(javax.swing.JTable table, int rowIndex) {
        if (!(table.getParent() instanceof javax.swing.JViewport)) {
            return true;
        }
        javax.swing.JViewport viewport = (javax.swing.JViewport) table.getParent();
        java.awt.Rectangle rect = table.getCellRect(rowIndex, 1, true);
        // The location of the viewport relative to the table     
        java.awt.Point pt = viewport.getViewPosition();
        // Translate the cell location so that it is relative 
        // to the view, assuming the northwest corner of the 
        // view is (0,0) 
        rect.setLocation(rect.x - pt.x, rect.y - pt.y);

        // Check if view completely contains the row
        return new java.awt.Rectangle(viewport.getExtentSize()).contains(rect);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KeyQuest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            prefs = new PersonalPrefs();
            prefs.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            prefs.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton jButton1;
    javax.swing.JButton jButton3;
    javax.swing.JButton jButtonAlteraDevolucao;
    javax.swing.JButton jButtonAtuacaoAltera;
    javax.swing.JButton jButtonAtuacaoConfirma;
    javax.swing.JButton jButtonConfirmaDevolucao;
    javax.swing.JButton jButtonDefBreakApagar;
    javax.swing.JButton jButtonDefBreaksAdicionar;
    javax.swing.JButton jButtonDefBreaksVoltar;
    javax.swing.JButton jButtonDefHolidaysApagar;
    javax.swing.JButton jButtonDefHolidaysDireita;
    javax.swing.JButton jButtonDefHolidaysMais;
    javax.swing.JButton jButtonDefHolidaysVoltar;
    javax.swing.JButton jButtonLinguaMudaConfirma;
    javax.swing.JButton jButtonListaBotoes;
    javax.swing.JButton jButtonProcuraCima;
    javax.swing.JComboBox<String> jComboBoxDefBreaksAnoFim;
    javax.swing.JComboBox<String> jComboBoxDefBreaksAnoInicio;
    javax.swing.JComboBox<String> jComboBoxDefBreaksDiaFim;
    javax.swing.JComboBox<String> jComboBoxDefBreaksDiaInicio;
    javax.swing.JComboBox<String> jComboBoxDefBreaksMesFim;
    javax.swing.JComboBox<String> jComboBoxDefBreaksMesInicio;
    javax.swing.JComboBox<String> jComboBoxListaBotoes;
    javax.swing.JComboBox<String> jComboBoxMudaLinguagem;
    javax.swing.JComboBox<String> jComboBoxMudaTema;
    javax.swing.JComboBox<String> jComboBoxVista;
    javax.swing.JDialog jDialogDefBreaks;
    javax.swing.JDialog jDialogDefHolidays;
    javax.swing.JDialog jDialogDefOpcoes;
    javax.swing.JDialog jDialogListaBotoes;
    javax.swing.JLabel jLabel1;
    javax.swing.JLabel jLabel2;
    javax.swing.JLabel jLabelBlue;
    javax.swing.JLabel jLabelDefBreaksAnoFim;
    javax.swing.JLabel jLabelDefBreaksAnoInicio;
    javax.swing.JLabel jLabelDefBreaksDiaFim;
    javax.swing.JLabel jLabelDefBreaksDiaInicio;
    javax.swing.JLabel jLabelDefBreaksInicio;
    javax.swing.JLabel jLabelDefBreaksMesFim;
    javax.swing.JLabel jLabelDefBreaksMesInicio;
    javax.swing.JLabel jLabelDefBreaksNome;
    javax.swing.JLabel jLabelDefBreaksTermino;
    javax.swing.JLabel jLabelDetalhesDevolucoes;
    javax.swing.JLabel jLabelGreen;
    javax.swing.JLabel jLabelLinguaMuda;
    javax.swing.JLabel jLabelListaFeriadosDefeito;
    javax.swing.JLabel jLabelListaFeriadosEscolhidos;
    javax.swing.JLabel jLabelMudaCorDivisor;
    javax.swing.JLabel jLabelMudaLinguagem;
    javax.swing.JLabel jLabelMudaTamanhoDivisor;
    javax.swing.JLabel jLabelMudaTemaQuadros;
    javax.swing.JLabel jLabelRed;
    javax.swing.JLabel jLabelTituloDefOpcoes;
    javax.swing.JLabel jLabelTituloDevolucoes;
    javax.swing.JLabel jLabelTituloOcupacoes;
    javax.swing.JLabel jLabelTitulorequisicoes;
    javax.swing.JList<String> jListFeriadosDefeito;
    javax.swing.JList<String> jListFeriadosEscolhidos;
    javax.swing.JList<String> jListFerias;
    javax.swing.JPanel jPanel2;
    javax.swing.JPanel jPanelBaixo;
    javax.swing.JPanel jPanelCima;
    javax.swing.JPanel jPanelDefBreaks;
    javax.swing.JPanel jPanelDefHolidays;
    javax.swing.JPanel jPanelDefOpcoes;
    javax.swing.JPanel jPanelDefOpcoes2;
    javax.swing.JPanel jPanelInformaBaixoBaixo;
    javax.swing.JPanel jPanelInformaBaixoCima;
    javax.swing.JPanel jPanelInformaCimaBaixo;
    javax.swing.JPanel jPanelInformaCimaCima;
    javax.swing.JPanel jPanelInicial;
    javax.swing.JPanel jPanelListaBotoes;
    javax.swing.JPanel jPanelListaFeriadosDefeito;
    javax.swing.JPanel jPanelListaFeriadosEscolhidos;
    javax.swing.JPanel jPanelMudaCorSlider;
    javax.swing.JPanel jPanelTituloOcupacoes;
    javax.swing.JRadioButton jRadioButtonCarnaval;
    javax.swing.JRadioButton jRadioButtonCorpoDeus;
    javax.swing.JRadioButton jRadioButtonPascoa;
    javax.swing.JRadioButton jRadioButtonSextaFeira;
    javax.swing.JScrollPane jScrollPane2;
    javax.swing.JScrollPane jScrollPaneDevolucoes;
    javax.swing.JScrollPane jScrollPaneFeriadosDefeito;
    javax.swing.JScrollPane jScrollPaneFeriadosEscolhidos;
    javax.swing.JScrollPane jScrollPaneInformaBaixo;
    javax.swing.JScrollPane jScrollPaneInformaCima;
    javax.swing.JScrollPane jScrollPaneMaterialBotoes;
    javax.swing.JScrollPane jScrollPaneRequisicoes;
    javax.swing.JToolBar.Separator jSeparator1;
    javax.swing.JToolBar.Separator jSeparator2;
    javax.swing.JSlider jSliderBlue;
    javax.swing.JSlider jSliderGreen;
    javax.swing.JSlider jSliderRed;
    javax.swing.JSlider jSliderTamanhoDivisor;
    javax.swing.JSplitPane jSplitPaneInicial;
    javax.swing.JTabbedPane jTabbedPaneMaterialBotoes;
    javax.swing.JTextField jTextField2;
    javax.swing.JTextField jTextFieldDefBreaksNome;
    javax.swing.JTextField jTextFieldProcuraCima;
    javax.swing.JToggleButton jToggleButtonBarEntregas;
    javax.swing.JToggleButton jToggleButtonBarRequisicoes;
    javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
    protected boolean booleanBoxLanguage;
    private RequestList requisicoes;
    private RequestList devolucoes;
    private java.util.List<Clavis.TypeOfMaterial> tiposmateriais;
    private String urlbd;
    private String urlcsv;
    private static PersonalPrefs prefs;
    protected Langs.Locale lingua;
    private ButtonListRequest btrequests;
    private TableRequest lista_req;
    private TableRequest lista_dev;
    protected int tdivisor = 40;
    protected Color cordivisor;
    protected HolidaysList feriados;
    protected TimeDate.BreakPeriodList intervalos;
    private javax.swing.JLabel jLabelauxiliar;
    protected int vista = 0;
    protected String tema = "claro";
    private Timer scroll;
    protected boolean scrollAtivo;
    private Thread auxiliar = new Thread();
    protected byte[] bitpagina = new byte[2];
    public final Color COR_DIVISOR = Color.DARK_GRAY;
    private final String DEFAULT_URlCSV = "http://localhost:8080/horario_disciplinas.csv";
    private final String DEFAULT_URlBD = "jdbc:mysql://localhost:3306/clavis?autoReconnect=true&useSSL=false&user=root&password=sobral";

    public void setURLcsv(String csv) {
        this.urlcsv = csv;
    }

    public String getURLcsv() {
        return this.urlcsv;
    }

    public void setURLbd(String bd) {
        this.urlbd = bd;
    }

    public String getURLbd() {
        return this.urlbd;
    }
}
