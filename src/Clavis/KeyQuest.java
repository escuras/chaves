/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Clavis;

import TimeDate.HolidaysList;
import Keys.Function;
import Keys.TypeOfMaterial;
import FileIOAux.ImageAux;
import com.sun.glass.events.KeyEvent;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Event;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.GridLayout;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.Window;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.AdjustmentEvent;
import java.awt.event.AdjustmentListener;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowStateListener;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.util.Calendar;
import java.util.TimerTask;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.Painter;
import javax.swing.ScrollPaneConstants;
import javax.swing.SwingConstants;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.border.Border;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.plaf.PopupMenuUI;
import javax.swing.plaf.ViewportUI;
import javax.swing.plaf.basic.BasicComboPopup;
import javax.swing.plaf.basic.BasicSplitPaneDivider;
import javax.swing.plaf.basic.BasicSplitPaneUI;
import javax.swing.plaf.nimbus.NimbusLookAndFeel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import org.jdesktop.swingx.border.DropShadowBorder;

/**
 *
 * @author Ant√≥nio Santos
 */
public class KeyQuest extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;

    /**
     * Creates new form KeyQuest
     */
    public KeyQuest() {
        this.mudoutema = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogDefHolidays = new javax.swing.JDialog();
        jPanelDefHolidays = new javax.swing.JPanel();
        jLabelListaFeriadosDefeito = new javax.swing.JLabel();
        jPanelListaFeriadosDefeito = new javax.swing.JPanel();
        jScrollPaneFeriadosDefeito = new javax.swing.JScrollPane();
        jListFeriadosDefeito = new javax.swing.JList<>();
        jPanelListaFeriadosEscolhidos = new javax.swing.JPanel();
        jScrollPaneFeriadosEscolhidos = new javax.swing.JScrollPane();
        jListFeriadosEscolhidos = new javax.swing.JList<>();
        jLabelListaFeriadosEscolhidos = new javax.swing.JLabel();
        jRadioButtonCarnaval = new javax.swing.JRadioButton();
        jRadioButtonSextaFeira = new javax.swing.JRadioButton();
        jRadioButtonPascoa = new javax.swing.JRadioButton();
        jRadioButtonCorpoDeus = new javax.swing.JRadioButton();
        jButtonDefHolidaysDireita = new javax.swing.JButton();
        jButtonDefHolidaysApagar = new javax.swing.JButton();
        jButtonDefHolidaysVoltar = new javax.swing.JButton();
        jButtonDefHolidaysMais = new javax.swing.JButton();
        jDialogDefBreaks = new javax.swing.JDialog();
        jPanelDefBreaks = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListFerias = new javax.swing.JList<>();
        jButtonDefBreaksVoltar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButtonDefBreakApagar = new javax.swing.JButton();
        jLabelDefBreaksInicio = new javax.swing.JLabel();
        jLabelDefBreaksTermino = new javax.swing.JLabel();
        jComboBoxDefBreaksDiaInicio = new javax.swing.JComboBox<>();
        jLabelDefBreaksDiaInicio = new javax.swing.JLabel();
        jLabelDefBreaksMesInicio = new javax.swing.JLabel();
        jComboBoxDefBreaksMesInicio = new javax.swing.JComboBox<>();
        jLabelDefBreaksAnoInicio = new javax.swing.JLabel();
        jComboBoxDefBreaksAnoInicio = new javax.swing.JComboBox<>();
        jLabelDefBreaksDiaFim = new javax.swing.JLabel();
        jComboBoxDefBreaksDiaFim = new javax.swing.JComboBox<>();
        jLabelDefBreaksMesFim = new javax.swing.JLabel();
        jComboBoxDefBreaksMesFim = new javax.swing.JComboBox<>();
        jLabelDefBreaksAnoFim = new javax.swing.JLabel();
        jComboBoxDefBreaksAnoFim = new javax.swing.JComboBox<>();
        jButtonDefBreaksAdicionar = new javax.swing.JButton();
        jTextFieldDefBreaksNome = new org.jdesktop.swingx.JXTextField();
        jLabelDefBreaksNome = new javax.swing.JLabel();
        jDialogDefOpcoes = new javax.swing.JDialog();
        jPanelDefOpcoes = new javax.swing.JPanel();
        jLabelTituloDefOpcoes = new javax.swing.JLabel();
        jLabelMudaTemaQuadros = new javax.swing.JLabel();
        jComboBoxMudaTema = new javax.swing.JComboBox<>();
        jLabelMudaLinguagem = new javax.swing.JLabel();
        jComboBoxMudaLinguagem = new javax.swing.JComboBox<>();
        jButtonLinguaMudaConfirma = new javax.swing.JButton();
        jLabelLinguaMuda = new javax.swing.JLabel();
        jSliderTamanhoDivisor = new javax.swing.JSlider();
        jLabelMudaTamanhoDivisor = new javax.swing.JLabel();
        jPanelMudaCorSlider = new javax.swing.JPanel();
        jLabelAuxiliarScroll = new javax.swing.JLabel();
        jComboBoxScrollAtivo = new javax.swing.JComboBox<>();
        jDialogListaBotoes = new javax.swing.JDialog();
        jPanelListaBotoes = new javax.swing.JPanel();
        jScrollPaneMaterialBotoes = new javax.swing.JScrollPane();
        UIManager.put("TabbedPane.background", Color.WHITE);
        UIManager.put("TabbedPane.selected", Color.red);
        jTabbedPaneMaterialBotoes = new javax.swing.JTabbedPane();
        jLabel2 = new javax.swing.JLabel();
        jDialog1 = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jPanelInicial = new javax.swing.JPanel();
        jSplitPaneInicial = new javax.swing.JSplitPane();
        jPanelBaixo = new javax.swing.JPanel();
        jScrollPaneDevolucoes = new javax.swing.JScrollPane();
        jLabelTituloDevolucoes = new javax.swing.JLabel();
        jPanelInformaBaixoBaixo = new javax.swing.JPanel();
        jScrollPaneInformaBaixo = new javax.swing.JScrollPane();
        jPanelInformaBaixoCima = new javax.swing.JPanel();
        jButtonConfirmaDevolucao = new javax.swing.JButton();
        jButtonAlteraDevolucao = new javax.swing.JButton();
        jButtonProcuraBaixo = new javax.swing.JButton();
        jTextFieldProcuraBaixo = new javax.swing.JTextField();
        jPanelLimpaPesquisaBaixo = new javax.swing.JPanel();
        jLabelLimpaPesquisaBaixo = new javax.swing.JLabel();
        jLabelDetalhesBaixo = new javax.swing.JLabel();
        jPanelCima = new javax.swing.JPanel();
        jScrollPaneRequisicoes = new javax.swing.JScrollPane();
        jLabelTitulorequisicoes = new javax.swing.JLabel();
        jPanelInformaCimaBaixo = new javax.swing.JPanel();
        jScrollPaneInformaCima = new javax.swing.JScrollPane();
        jPanelInformaCimaCima = new javax.swing.JPanel();
        jButtonAtuacaoConfirma = new javax.swing.JButton();
        jButtonAtuacaoAltera = new javax.swing.JButton();
        jTextFieldProcuraCima = new javax.swing.JTextField();
        jButtonProcuraCima = new javax.swing.JButton();
        jPanelDetalhesCima = new javax.swing.JPanel();
        jLabelLimpaPesquisaCima = new javax.swing.JLabel();
        jLabelDetalhesCima = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jToggleButtonBarRequisicoes = new Components.PersonalToggleButton();
        jToggleButtonBarEntregas = new Components.PersonalToggleButton();
        jComboBoxVista = new javax.swing.JComboBox<>();
        jComboBoxListaBotoes = new javax.swing.JComboBox<>();
        jButtonListaBotoes = new Components.PersonalButton();
        jComboBoxPesquisaOpcao = new javax.swing.JComboBox<>();
        jToggleButton1 = new Components.PersonalToggleButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();

        jDialogDefHolidays.setTitle("Editar Feriados");
        jDialogDefHolidays.setMinimumSize(new java.awt.Dimension(700, 500));
        jDialogDefHolidays.setResizable(false);

        jPanelDefHolidays.setBackground(new java.awt.Color(254, 254, 254));
        jPanelDefHolidays.setBorder(null);
        jPanelDefHolidays.setPreferredSize(new java.awt.Dimension(660, 528));
        jPanelDefHolidays.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelDefHolidaysMouseClicked(evt);
            }
        });

        jLabelListaFeriadosDefeito.setFont(new java.awt.Font("Cantarell", 0, 14)); // NOI18N
        jLabelListaFeriadosDefeito.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelListaFeriadosDefeito.setText("Lista de feriados fixos por defeito: ");
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder1 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder1.setCornerSize(6);
        dropShadowBorder1.setShadowSize(3);
        dropShadowBorder1.setShowRightShadow(false);
        jLabelListaFeriadosDefeito.setBorder(dropShadowBorder1);
        jLabelListaFeriadosDefeito.setText(lingua.translate("Lista_feriados_por_defeito"));

        jPanelListaFeriadosDefeito.setBackground(new java.awt.Color(254, 254, 254));
        jPanelListaFeriadosDefeito.setBorder(null);

        jScrollPaneFeriadosDefeito.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jListFeriadosDefeito.setBackground(new java.awt.Color(216, 220, 227));
        jListFeriadosDefeito.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListFeriadosDefeitoMouseClicked(evt);
            }
        });
        jListFeriadosDefeito.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jListFeriadosDefeitoPropertyChange(evt);
            }
        });
        jListFeriadosDefeito.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jListFeriadosDefeitoKeyPressed(evt);
            }
        });
        jListFeriadosDefeito.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListFeriadosDefeitoValueChanged(evt);
            }
        });
        jListFeriadosDefeito.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jScrollPaneFeriadosDefeito.setViewportView(jListFeriadosDefeito);

        javax.swing.GroupLayout jPanelListaFeriadosDefeitoLayout = new javax.swing.GroupLayout(jPanelListaFeriadosDefeito);
        jPanelListaFeriadosDefeito.setLayout(jPanelListaFeriadosDefeitoLayout);
        jPanelListaFeriadosDefeitoLayout.setHorizontalGroup(
            jPanelListaFeriadosDefeitoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneFeriadosDefeito, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
        );
        jPanelListaFeriadosDefeitoLayout.setVerticalGroup(
            jPanelListaFeriadosDefeitoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneFeriadosDefeito, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanelListaFeriadosEscolhidos.setBackground(new java.awt.Color(254, 254, 254));
        jPanelListaFeriadosEscolhidos.setBorder(null);

        jScrollPaneFeriadosEscolhidos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jListFeriadosEscolhidos.setBackground(new java.awt.Color(254, 254, 234));
        jListFeriadosEscolhidos.setToolTipText(null);
        jListFeriadosEscolhidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListFeriadosEscolhidosMouseClicked(evt);
            }
        });
        jListFeriadosEscolhidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jListFeriadosEscolhidosKeyPressed(evt);
            }
        });
        jListFeriadosEscolhidos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListFeriadosEscolhidosValueChanged(evt);
            }
        });
        jListFeriadosEscolhidos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jScrollPaneFeriadosEscolhidos.setViewportView(jListFeriadosEscolhidos);

        javax.swing.GroupLayout jPanelListaFeriadosEscolhidosLayout = new javax.swing.GroupLayout(jPanelListaFeriadosEscolhidos);
        jPanelListaFeriadosEscolhidos.setLayout(jPanelListaFeriadosEscolhidosLayout);
        jPanelListaFeriadosEscolhidosLayout.setHorizontalGroup(
            jPanelListaFeriadosEscolhidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneFeriadosEscolhidos, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
        );
        jPanelListaFeriadosEscolhidosLayout.setVerticalGroup(
            jPanelListaFeriadosEscolhidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneFeriadosEscolhidos)
        );

        jLabelListaFeriadosEscolhidos.setFont(new java.awt.Font("Cantarell", 0, 14)); // NOI18N
        jLabelListaFeriadosEscolhidos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelListaFeriadosEscolhidos.setText("Lista de feriados fixos por defeito: ");
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder2 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder2.setCornerSize(6);
        dropShadowBorder2.setShadowSize(3);
        dropShadowBorder2.setShowRightShadow(false);
        jLabelListaFeriadosEscolhidos.setBorder(dropShadowBorder2);
        jLabelListaFeriadosDefeito.setText(lingua.translate("Lista_feriados_por_defeito"));

        jRadioButtonCarnaval.setText("Carnaval");
        jRadioButtonCarnaval.setFocusPainted(false);
        jRadioButtonCarnaval.setText(lingua.translate("Carnaval"));
        jRadioButtonCarnaval.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButtonCarnavalStateChanged(evt);
            }
        });
        jRadioButtonCarnaval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCarnavalActionPerformed(evt);
            }
        });

        jRadioButtonSextaFeira.setText("Sexta-feira santa");
        jRadioButtonSextaFeira.setFocusPainted(false);
        jRadioButtonSextaFeira.setText(lingua.translate("Sexta-feira_santa"));
        jRadioButtonSextaFeira.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSextaFeiraActionPerformed(evt);
            }
        });

        jRadioButtonPascoa.setText("P√°scoa");
        jRadioButtonPascoa.setFocusPainted(false);
        jRadioButtonPascoa.setText(lingua.translate("P√°scoa"));
        jRadioButtonPascoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPascoaActionPerformed(evt);
            }
        });

        jRadioButtonCorpoDeus.setText("Corpo de Deus");
        jRadioButtonCorpoDeus.setFocusPainted(false);
        jRadioButtonCorpoDeus.setText(lingua.translate("corpo_deus"));
        jRadioButtonCorpoDeus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCorpoDeusActionPerformed(evt);
            }
        });

        jButtonDefHolidaysDireita.setBackground(new java.awt.Color(51, 102, 153));
        jButtonDefHolidaysDireita.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonDefHolidaysDireita.setEnabled(false);
        jButtonDefHolidaysDireita.setFocusPainted(false);
        jButtonDefHolidaysDireita.setPreferredSize(new java.awt.Dimension(10, 40));
        jButtonDefHolidaysDireita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefHolidaysDireitaActionPerformed(evt);
            }
        });

        jButtonDefHolidaysApagar.setBackground(new java.awt.Color(51, 102, 153));
        jButtonDefHolidaysApagar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonDefHolidaysApagar.setEnabled(false);
        jButtonDefHolidaysApagar.setFocusPainted(false);
        jButtonDefHolidaysApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefHolidaysApagarActionPerformed(evt);
            }
        });

        jButtonDefHolidaysVoltar.setBackground(new java.awt.Color(1, 1, 1));
        jButtonDefHolidaysVoltar.setForeground(new java.awt.Color(254, 254, 254));
        //jButtonDefHolidaysVoltar.setText(lingua.translate("Voltar"));
        jButtonDefHolidaysVoltar.setToolTipText("");
        jButtonDefHolidaysVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonDefHolidaysVoltar.setFocusPainted(false);
        //jButtonDefHolidaysVoltar.setMnemonic(lingua.translate("Voltar").charAt(0));
        jButtonDefHolidaysVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefHolidaysVoltarActionPerformed(evt);
            }
        });

        jButtonDefHolidaysMais.setBackground(new java.awt.Color(51, 102, 153));
        jButtonDefHolidaysMais.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonDefHolidaysMais.setFocusPainted(false);
        jButtonDefHolidaysMais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefHolidaysMaisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDefHolidaysLayout = new javax.swing.GroupLayout(jPanelDefHolidays);
        jPanelDefHolidays.setLayout(jPanelDefHolidaysLayout);
        jPanelDefHolidaysLayout.setHorizontalGroup(
            jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDefHolidaysLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDefHolidaysLayout.createSequentialGroup()
                        .addGroup(jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDefHolidaysLayout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addGroup(jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButtonSextaFeira)
                                    .addComponent(jRadioButtonCarnaval)
                                    .addComponent(jRadioButtonPascoa)
                                    .addComponent(jRadioButtonCorpoDeus)))
                            .addComponent(jPanelListaFeriadosDefeito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonDefHolidaysDireita, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                            .addComponent(jButtonDefHolidaysApagar, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(jButtonDefHolidaysMais, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(jButtonDefHolidaysVoltar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)))
                    .addGroup(jPanelDefHolidaysLayout.createSequentialGroup()
                        .addComponent(jLabelListaFeriadosDefeito, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelListaFeriadosEscolhidos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelListaFeriadosEscolhidos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17))
        );
        jPanelDefHolidaysLayout.setVerticalGroup(
            jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDefHolidaysLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelListaFeriadosDefeito, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jLabelListaFeriadosEscolhidos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelDefHolidaysLayout.createSequentialGroup()
                        .addGroup(jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelListaFeriadosDefeito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelDefHolidaysLayout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jButtonDefHolidaysDireita, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonDefHolidaysApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonDefHolidaysMais, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanelDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDefHolidaysLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonCarnaval)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonSextaFeira)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonPascoa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButtonCorpoDeus))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDefHolidaysLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                                .addComponent(jButtonDefHolidaysVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jPanelListaFeriadosEscolhidos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        jLabelListaFeriadosEscolhidos.setText(lingua.translate("Lista_feriados_escolhidos"));
        try {
            java.awt.image.BufferedImage image = ImageIO.read(getClass().getResourceAsStream("Images/arrow_right.png"));
            javax.swing.ImageIcon icon = new javax.swing.ImageIcon(image);
            jButtonDefHolidaysDireita.setIcon(icon);
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        jButtonDefHolidaysDireita.setToolTipText(lingua.translate("Adicionar_feriado"));
        java.awt.image.BufferedImage image2 = null;
        try {
            image2 = ImageIO.read(getClass().getResourceAsStream("Images/delete.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (image2 != null) {
            javax.swing.ImageIcon icon2 = new javax.swing.ImageIcon(image2);
            jButtonDefHolidaysApagar.setIcon(icon2);
        }
        jButtonDefHolidaysApagar.setToolTipText(lingua.translate("Apagar"));
        java.awt.image.BufferedImage image5 = null;
        try {
            image5 = ImageIO.read(getClass().getResourceAsStream("Images/exit26x24.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (image5 != null) {
            javax.swing.ImageIcon icon5 = new javax.swing.ImageIcon(image5);
            jButtonDefHolidaysVoltar.setIcon(icon5);
        }
        jButtonDefHolidaysVoltar.setToolTipText(lingua.translate("Voltar"));
        java.awt.image.BufferedImage image3 = null;
        try {
            image3 = ImageIO.read(getClass().getResourceAsStream("Images/plus24x24.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (image3 != null) {
            javax.swing.ImageIcon icon3 = new javax.swing.ImageIcon(image3);
            jButtonDefHolidaysMais.setIcon(icon3);
        }
        jButtonDefHolidaysMais.setToolTipText(lingua.translate("Adicionar_feriado_personalizado"));

        javax.swing.GroupLayout jDialogDefHolidaysLayout = new javax.swing.GroupLayout(jDialogDefHolidays.getContentPane());
        jDialogDefHolidays.getContentPane().setLayout(jDialogDefHolidaysLayout);
        jDialogDefHolidaysLayout.setHorizontalGroup(
            jDialogDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelDefHolidays, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialogDefHolidaysLayout.setVerticalGroup(
            jDialogDefHolidaysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelDefHolidays, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.border.Border border11 = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(systemColor, 4), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1));
        jPanelDefHolidays.setBorder(border11);

        jDialogDefHolidays.setTitle(lingua.translate("Editar")+" "+lingua.translate("Feriados"));

        jDialogDefBreaks.setTitle("Editar per√≠odos de interrup√ß√£o");
        jDialogDefBreaks.setMinimumSize(new java.awt.Dimension(700, 500));
        jDialogDefBreaks.setResizable(false);

        jPanelDefBreaks.setBackground(new java.awt.Color(254, 254, 254));
        jPanelDefBreaks.setBorder(null);
        jPanelDefBreaks.setPreferredSize(new java.awt.Dimension(688, 468));
        jPanelDefBreaks.setRequestFocusEnabled(false);
        jPanelDefBreaks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelDefBreaksMouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(254, 254, 254));
        jPanel2.setBorder(null);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jListFerias.setBackground(new java.awt.Color(254, 254, 234));
        jListFerias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListFeriasMouseClicked(evt);
            }
        });
        jListFerias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jListFeriasKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jListFerias);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        jButtonDefBreaksVoltar.setBackground(new java.awt.Color(1, 1, 1));
        jButtonDefBreaksVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonDefBreaksVoltar.setFocusPainted(false);
        jButtonDefBreaksVoltar.setPreferredSize(new java.awt.Dimension(90, 40));
        jButtonDefBreaksVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefBreaksVoltarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Cantarell", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Adicionar per√≠odos:");
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder3 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder3.setCornerSize(6);
        dropShadowBorder3.setShadowSize(3);
        dropShadowBorder3.setShowRightShadow(false);
        jLabel1.setBorder(dropShadowBorder3);
        jLabel1.setText(lingua.translate("Adicionar_periodos"));

        jButtonDefBreakApagar.setBackground(new java.awt.Color(51, 102, 153));
        jButtonDefBreakApagar.setEnabled(false);
        jButtonDefBreakApagar.setFocusPainted(false);
        jButtonDefBreakApagar.setMaximumSize(new java.awt.Dimension(10444, 144440));
        jButtonDefBreakApagar.setPreferredSize(new java.awt.Dimension(90, 40));
        jButtonDefBreakApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefBreakApagarActionPerformed(evt);
            }
        });

        jLabelDefBreaksInicio.setFont(new java.awt.Font("Cantarell", 0, 14)); // NOI18N
        jLabelDefBreaksInicio.setText("In√≠cio:");

        jLabelDefBreaksTermino.setFont(new java.awt.Font("Cantarell", 0, 14)); // NOI18N
        jLabelDefBreaksTermino.setText("T√©rmino:");

        jComboBoxDefBreaksDiaInicio.setBackground(new java.awt.Color(213, 213, 213));
        jComboBoxDefBreaksDiaInicio.setFocusable(false);

        jLabelDefBreaksDiaInicio.setText("Dia:");

        jLabelDefBreaksMesInicio.setText("M√™s:");

        jComboBoxDefBreaksMesInicio.setBackground(new java.awt.Color(213, 213, 213));
        jComboBoxDefBreaksMesInicio.setFocusable(false);

        jLabelDefBreaksAnoInicio.setText("Ano:");

        jComboBoxDefBreaksAnoInicio.setBackground(new java.awt.Color(213, 213, 213));
        jComboBoxDefBreaksAnoInicio.setFocusable(false);

        jLabelDefBreaksDiaFim.setText("Dia:");

        jComboBoxDefBreaksDiaFim.setBackground(new java.awt.Color(213, 213, 213));
        jComboBoxDefBreaksDiaFim.setFocusable(false);

        jLabelDefBreaksMesFim.setText("M√™s:");

        jComboBoxDefBreaksMesFim.setBackground(new java.awt.Color(213, 213, 213));
        jComboBoxDefBreaksMesFim.setFocusable(false);

        jLabelDefBreaksAnoFim.setText("Ano:");

        jComboBoxDefBreaksAnoFim.setBackground(new java.awt.Color(213, 213, 213));
        jComboBoxDefBreaksAnoFim.setFocusable(false);

        jButtonDefBreaksAdicionar.setBackground(new java.awt.Color(51, 102, 153));
        jButtonDefBreaksAdicionar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonDefBreaksAdicionar.setEnabled(false);
        jButtonDefBreaksAdicionar.setFocusPainted(false);
        jButtonDefBreaksAdicionar.setPreferredSize(new java.awt.Dimension(90, 40));
        jButtonDefBreaksAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefBreaksAdicionarActionPerformed(evt);
            }
        });

        jTextFieldDefBreaksNome.setBackground(new java.awt.Color(210, 214, 221));
        jTextFieldDefBreaksNome.setToolTipText("");
        jTextFieldDefBreaksNome.setBorder(null);
        jTextFieldDefBreaksNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldDefBreaksNomeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDefBreaksNomeFocusLost(evt);
            }
        });
        jTextFieldDefBreaksNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldDefBreaksNomeKeyReleased(evt);
            }
        });

        jLabelDefBreaksNome.setFont(new java.awt.Font("Cantarell", 0, 14)); // NOI18N
        jLabelDefBreaksNome.setText("Nome:");

        javax.swing.GroupLayout jPanelDefBreaksLayout = new javax.swing.GroupLayout(jPanelDefBreaks);
        jPanelDefBreaks.setLayout(jPanelDefBreaksLayout);
        jPanelDefBreaksLayout.setHorizontalGroup(
            jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDefBreaksLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDefBreaksLayout.createSequentialGroup()
                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelDefBreaksTermino, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanelDefBreaksLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabelDefBreaksAnoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBoxDefBreaksAnoInicio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxDefBreaksMesInicio, 0, 180, Short.MAX_VALUE)
                                    .addComponent(jComboBoxDefBreaksDiaInicio, 0, 180, Short.MAX_VALUE))))
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDefBreaksLayout.createSequentialGroup()
                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelDefBreaksLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDefBreaksLayout.createSequentialGroup()
                                        .addComponent(jLabelDefBreaksDiaFim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jComboBoxDefBreaksDiaFim, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDefBreaksLayout.createSequentialGroup()
                                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelDefBreaksMesFim)
                                            .addComponent(jLabelDefBreaksAnoFim, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jComboBoxDefBreaksMesFim, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBoxDefBreaksAnoFim, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanelDefBreaksLayout.createSequentialGroup()
                                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabelDefBreaksDiaInicio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabelDefBreaksMesInicio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelDefBreaksLayout.createSequentialGroup()
                                .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanelDefBreaksLayout.createSequentialGroup()
                                        .addComponent(jButtonDefBreaksVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonDefBreaksAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanelDefBreaksLayout.createSequentialGroup()
                                        .addComponent(jLabelDefBreaksNome, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldDefBreaksNome, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabelDefBreaksInicio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(22, 22, 22)))
                .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDefBreakApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );
        jPanelDefBreaksLayout.setVerticalGroup(
            jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDefBreaksLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelDefBreaksLayout.createSequentialGroup()
                        .addComponent(jLabelDefBreaksInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDefBreaksDiaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxDefBreaksDiaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDefBreaksMesInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxDefBreaksMesInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDefBreaksAnoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxDefBreaksAnoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addComponent(jLabelDefBreaksTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDefBreaksDiaFim, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxDefBreaksDiaFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDefBreaksMesFim, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxDefBreaksMesFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDefBreaksAnoFim, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxDefBreaksAnoFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDefBreaksNome, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldDefBreaksNome, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanelDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonDefBreakApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDefBreaksVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDefBreaksAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        if (image5 != null) {
            javax.swing.ImageIcon icon5 = new javax.swing.ImageIcon(image5);
            jButtonDefBreaksVoltar.setIcon(icon5);
        }
        jButtonDefBreaksVoltar.setToolTipText(lingua.translate("Voltar"));
        jButtonDefBreakApagar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        if (image2 != null) {
            javax.swing.ImageIcon icon2 = new javax.swing.ImageIcon(image2);
            jButtonDefBreakApagar.setIcon(icon2);
        }
        jButtonDefBreakApagar.setToolTipText(lingua.translate("Eliminar"));
        jLabelDefBreaksInicio.setText(lingua.translate("In√≠cio")+":");
        jLabelDefBreaksTermino.setText(lingua.translate("T√©rmino")+":");
        BasicComboPopup popupBreaksDia = (BasicComboPopup) jComboBoxDefBreaksDiaInicio.getAccessibleContext().getAccessibleChild(0);
        popupBreaksDia.getList().setSelectionBackground(Color.DARK_GRAY);
        popupBreaksDia.getList().setBorder(BorderFactory.createEmptyBorder(1, 2, 1, 2));
        jLabelDefBreaksDiaInicio.setText(lingua.translate("Dia")+":");
        jLabelDefBreaksMesInicio.setText(lingua.translate("M√™s")+":");
        BasicComboPopup popupBreaksMesInicio = (BasicComboPopup) jComboBoxDefBreaksMesInicio.getAccessibleContext().getAccessibleChild(0);
        popupBreaksMesInicio.getList().setSelectionBackground(Color.DARK_GRAY);
        popupBreaksMesInicio.getList().setBorder(BorderFactory.createEmptyBorder(1, 2, 1, 2));
        jLabelDefBreaksAnoInicio.setText(lingua.translate("Ano")+":");
        BasicComboPopup popupBreaksAnoInicio = (BasicComboPopup) jComboBoxDefBreaksAnoInicio.getAccessibleContext().getAccessibleChild(0);
        popupBreaksAnoInicio.getList().setSelectionBackground(Color.DARK_GRAY);
        popupBreaksAnoInicio.getList().setBorder(BorderFactory.createEmptyBorder(1, 2, 1, 2));
        jLabelDefBreaksDiaFim.setText(lingua.translate("Dia")+":");
        BasicComboPopup popupBreaksDiaFim = (BasicComboPopup) jComboBoxDefBreaksDiaFim.getAccessibleContext().getAccessibleChild(0);
        popupBreaksDiaFim.getList().setSelectionBackground(Color.DARK_GRAY);
        popupBreaksDiaFim.getList().setBorder(BorderFactory.createEmptyBorder(1, 2, 1, 2));
        jLabelDefBreaksMesFim.setText(lingua.translate("M√™s")+":");
        BasicComboPopup popupBreaksMesFim = (BasicComboPopup) jComboBoxDefBreaksMesFim.getAccessibleContext().getAccessibleChild(0);
        popupBreaksMesFim.getList().setSelectionBackground(Color.DARK_GRAY);
        popupBreaksMesFim.getList().setBorder(BorderFactory.createEmptyBorder(1, 2, 1, 2));
        jLabelDefBreaksAnoFim.setText(lingua.translate("Ano")+":");
        BasicComboPopup popupBreaksAnoFim = (BasicComboPopup) jComboBoxDefBreaksAnoFim.getAccessibleContext().getAccessibleChild(0);
        popupBreaksAnoFim.getList().setSelectionBackground(Color.DARK_GRAY);
        popupBreaksAnoFim.getList().setBorder(BorderFactory.createEmptyBorder(1, 2, 1, 2));
        if (image3 != null) {
            javax.swing.ImageIcon icon3 = new javax.swing.ImageIcon(image3);
            jButtonDefBreaksAdicionar.setIcon(icon3);
        }
        jButtonDefBreaksAdicionar.setToolTipText(lingua.translate("Adicionar"));
        jTextFieldDefBreaksNome.setToolTipText(lingua.translate("Introduzir_um_nome_para_o_periodo_indicado."));
        Border borderg = BorderFactory.createLineBorder(Color.black,1);
        Border borderf = BorderFactory.createEmptyBorder(0, 10, 0, 10);
        jTextFieldDefBreaksNome.setBorder(BorderFactory.createCompoundBorder(jTextFieldDefBreaksNome.getBorder(), BorderFactory.createCompoundBorder(borderg, borderf)));
        jTextFieldDefBreaksNome.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updatejTextFieldDefBreak();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updatejTextFieldDefBreak();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {

            }
        });
        jTextFieldDefBreaksNome.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyPressed(java.awt.event.KeyEvent e) {
                if (e.getKeyCode() == java.awt.event.KeyEvent.VK_ESCAPE) {

                    jDialogDefBreaks.requestFocusInWindow();
                    jTextFieldDefBreaksNome.setText("");
                }
            }
        });
        jLabelDefBreaksNome.setText(lingua.translate("Nome")+":");

        javax.swing.GroupLayout jDialogDefBreaksLayout = new javax.swing.GroupLayout(jDialogDefBreaks.getContentPane());
        jDialogDefBreaks.getContentPane().setLayout(jDialogDefBreaksLayout);
        jDialogDefBreaksLayout.setHorizontalGroup(
            jDialogDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelDefBreaks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialogDefBreaksLayout.setVerticalGroup(
            jDialogDefBreaksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelDefBreaks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.border.Border border111 = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(systemColor, 4),javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1));

        jPanelDefBreaks.setBorder(border111);

        jDialogDefBreaks.setTitle(lingua.translate("Editar_per√≠odos_de_interrup√ß√£o"));

        jDialogDefOpcoes.setMinimumSize(new java.awt.Dimension(700, 500));
        jDialogDefOpcoes.setResizable(false);

        jPanelDefOpcoes.setBackground(new java.awt.Color(254, 254, 254));
        jPanelDefOpcoes.setBorder(null);

        jLabelTituloDefOpcoes.setFont(new java.awt.Font("Cantarell", 0, 14)); // NOI18N
        jLabelTituloDefOpcoes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTituloDefOpcoes.setText("Defini√ß√µes");
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder4 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder4.setCornerSize(6);
        dropShadowBorder4.setShadowSize(3);
        dropShadowBorder4.setShowRightShadow(false);
        jLabelTituloDefOpcoes.setBorder(dropShadowBorder4);

        jLabelMudaTemaQuadros.setFont(new java.awt.Font("Cantarell", 0, 14)); // NOI18N
        jLabelMudaTemaQuadros.setText("Tema de quadros: ");

        jComboBoxMudaTema.setBackground(new java.awt.Color(213, 213, 213));
        jComboBoxMudaTema.setFocusable(false);
        jComboBoxMudaTema.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxMudaTemaItemStateChanged(evt);
            }
        });
        jComboBoxMudaTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMudaTemaActionPerformed(evt);
            }
        });

        jLabelMudaLinguagem.setFont(new java.awt.Font("Cantarell", 0, 14)); // NOI18N
        jLabelMudaLinguagem.setText("Lingua de apresenta√ß√£o:");

        jComboBoxMudaLinguagem.setBackground(new java.awt.Color(213, 213, 213));
        jComboBoxMudaLinguagem.setFocusable(false);
        jComboBoxMudaLinguagem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxMudaLinguagemItemStateChanged(evt);
            }
        });
        jComboBoxMudaLinguagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMudaLinguagemActionPerformed(evt);
            }
        });

        jButtonLinguaMudaConfirma.setBackground(new java.awt.Color(51, 102, 153));
        jButtonLinguaMudaConfirma.setForeground(new java.awt.Color(254, 254, 254));
        jButtonLinguaMudaConfirma.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonLinguaMudaConfirma.setEnabled(false);
        jButtonLinguaMudaConfirma.setMaximumSize(new java.awt.Dimension(90, 40));
        jButtonLinguaMudaConfirma.setMinimumSize(new java.awt.Dimension(90, 40));
        jButtonLinguaMudaConfirma.setPreferredSize(new java.awt.Dimension(90, 40));
        jButtonLinguaMudaConfirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLinguaMudaConfirmaActionPerformed(evt);
            }
        });

        jLabelLinguaMuda.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelLinguaMuda.setText("O reinicio √© necess√°rio para mudar idioma.");

        jSliderTamanhoDivisor.setMaximum(35);
        jSliderTamanhoDivisor.setMinimum(20);
        jSliderTamanhoDivisor.setMinorTickSpacing(5);
        jSliderTamanhoDivisor.setPaintLabels(true);
        jSliderTamanhoDivisor.setValue(25);
        jSliderTamanhoDivisor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderTamanhoDivisorStateChanged(evt);
            }
        });

        jLabelMudaTamanhoDivisor.setFont(new java.awt.Font("Cantarell", 0, 14)); // NOI18N
        jLabelMudaTamanhoDivisor.setText("Tamanho do divisor:");
        jLabelMudaTamanhoDivisor.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 5, 1));

        jPanelMudaCorSlider.setBackground(new java.awt.Color(254, 254, 254));

        javax.swing.GroupLayout jPanelMudaCorSliderLayout = new javax.swing.GroupLayout(jPanelMudaCorSlider);
        jPanelMudaCorSlider.setLayout(jPanelMudaCorSliderLayout);
        jPanelMudaCorSliderLayout.setHorizontalGroup(
            jPanelMudaCorSliderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
        );
        jPanelMudaCorSliderLayout.setVerticalGroup(
            jPanelMudaCorSliderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 172, Short.MAX_VALUE)
        );

        jLabelAuxiliarScroll.setFont(new java.awt.Font("Cantarell", 0, 14)); // NOI18N
        jLabelAuxiliarScroll.setText("Auxiliar de rolagem: ");

        jComboBoxScrollAtivo.setBackground(new java.awt.Color(213, 213, 213));
        jComboBoxScrollAtivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxScrollAtivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDefOpcoesLayout = new javax.swing.GroupLayout(jPanelDefOpcoes);
        jPanelDefOpcoes.setLayout(jPanelDefOpcoesLayout);
        jPanelDefOpcoesLayout.setHorizontalGroup(
            jPanelDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDefOpcoesLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(jPanelDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelTituloDefOpcoes, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                    .addGroup(jPanelDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanelDefOpcoesLayout.createSequentialGroup()
                            .addGap(215, 215, 215)
                            .addComponent(jPanelMudaCorSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE))
                        .addGroup(jPanelDefOpcoesLayout.createSequentialGroup()
                            .addComponent(jLabelLinguaMuda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonLinguaMudaConfirma, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelDefOpcoesLayout.createSequentialGroup()
                            .addGroup(jPanelDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabelMudaLinguagem, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                .addComponent(jLabelMudaTemaQuadros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(34, 34, 34)
                            .addGroup(jPanelDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBoxMudaTema, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBoxMudaLinguagem, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanelDefOpcoesLayout.createSequentialGroup()
                            .addGroup(jPanelDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabelAuxiliarScroll, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelMudaTamanhoDivisor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanelDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jSliderTamanhoDivisor, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                                .addComponent(jComboBoxScrollAtivo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        jPanelDefOpcoesLayout.setVerticalGroup(
            jPanelDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDefOpcoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTituloDefOpcoes, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(jPanelDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxMudaTema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMudaTemaQuadros, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanelDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMudaLinguagem, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxMudaLinguagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanelDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonLinguaMudaConfirma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelLinguaMuda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(jPanelDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelMudaTamanhoDivisor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSliderTamanhoDivisor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(2, 2, 2)
                .addGroup(jPanelDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAuxiliarScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxScrollAtivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jPanelMudaCorSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jLabelTituloDefOpcoes.setText(lingua.translate("Defini√ß√µes"));
        jLabelMudaTemaQuadros.setText(lingua.translate("Tema_de_quadros")+":");
        jComboBoxMudaTema.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { lingua.translate("Tema_claro"),lingua.translate("Tema_escuro") }));
        BasicComboPopup popupMudaTema2 = (BasicComboPopup) jComboBoxMudaTema.getAccessibleContext().getAccessibleChild(0);
        popupMudaTema2.getList().setSelectionBackground(Color.DARK_GRAY);
        popupMudaTema2.getList().setBorder(BorderFactory.createEmptyBorder(1, 2, 1, 2));
        jLabelMudaLinguagem.setText(lingua.translate("Lingua_apresentacao")+": ");
        String [] list2 = new String[lingua.getlist(4).size()];
        java.util.Iterator<String> it2 = lingua.getlist(4).iterator();
        int ki = 0;
        while (it2.hasNext()) {
            list2[ki] = lingua.translate(it2.next().toString());
            ki++;
        }
        jComboBoxMudaLinguagem.setModel(new javax.swing.DefaultComboBoxModel<>(list2));
        BasicComboPopup popupMudaLinguagem2 = (BasicComboPopup) jComboBoxMudaLinguagem.getAccessibleContext().getAccessibleChild(0);
        popupMudaLinguagem2.getList().setSelectionBackground(Color.DARK_GRAY);
        popupMudaLinguagem2.getList().setBorder(BorderFactory.createEmptyBorder(1, 2, 1, 2));
        java.awt.image.BufferedImage imageconfirml2 = null;
        try {
            imageconfirml2 = ImageIO.read(getClass().getResourceAsStream("Images/ok.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (imageconfirml2 != null) {
            javax.swing.ImageIcon iconconfirml2 = new javax.swing.ImageIcon(imageconfirml2);
            jButtonLinguaMudaConfirma.setIcon(iconconfirml2);
        }
        jLabelLinguaMuda.setVisible(false);

        jLabelLinguaMuda.setText(lingua.translate("O_reinicio_necess√°rio_para_mudar_idioma"));
        jLabelMudaTamanhoDivisor.setText(lingua.translate("tamanho_divisor")+": ");
        jLabelAuxiliarScroll.setText(lingua.translate("Auxiliar de rolagem")+":");
        jComboBoxScrollAtivo.setFocusable(false);

        jComboBoxScrollAtivo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{lingua.translate("Sim"),lingua.translate("Nao")}));
        BasicComboPopup popupMudaScroll2 = (BasicComboPopup) jComboBoxScrollAtivo.getAccessibleContext().getAccessibleChild(0);
        popupMudaScroll2.getList().setSelectionBackground(Color.DARK_GRAY);
        popupMudaScroll2.getList().setBorder(BorderFactory.createEmptyBorder(1, 2, 1, 2));

        javax.swing.GroupLayout jDialogDefOpcoesLayout = new javax.swing.GroupLayout(jDialogDefOpcoes.getContentPane());
        jDialogDefOpcoes.getContentPane().setLayout(jDialogDefOpcoesLayout);
        jDialogDefOpcoesLayout.setHorizontalGroup(
            jDialogDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelDefOpcoes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialogDefOpcoesLayout.setVerticalGroup(
            jDialogDefOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelDefOpcoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.border.Border borderDefOpcoes = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(systemColor, 4),javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1));

        jPanelDefOpcoes.setBorder(borderDefOpcoes);

        jDialogListaBotoes.setMinimumSize(new java.awt.Dimension(700, 500));
        jDialogListaBotoes.setResizable(false);
        jDialogListaBotoes.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                jDialogListaBotoesWindowClosing(evt);
            }
        });

        jPanelListaBotoes.setBackground(new java.awt.Color(254, 254, 254));
        jPanelListaBotoes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelListaBotoes.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanelListaBotoes.setPreferredSize(new java.awt.Dimension(680, 528));

        jScrollPaneMaterialBotoes.setBackground(new java.awt.Color(254, 254, 254));
        jScrollPaneMaterialBotoes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0));
        jScrollPaneMaterialBotoes.setAutoscrolls(true);
        jScrollPaneMaterialBotoes.setMinimumSize(new java.awt.Dimension(250, 400));
        jScrollPaneMaterialBotoes.setPreferredSize(new java.awt.Dimension(106, 456));

        jTabbedPaneMaterialBotoes.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTabbedPaneMaterialBotoes.setAutoscrolls(true);
        jTabbedPaneMaterialBotoes.setFocusable(false);
        jTabbedPaneMaterialBotoes.setMaximumSize(new java.awt.Dimension(2000, 32767));
        jTabbedPaneMaterialBotoes.setMinimumSize(new java.awt.Dimension(250, 400));
        jTabbedPaneMaterialBotoes.setOpaque(true);
        jTabbedPaneMaterialBotoes.setPreferredSize(new java.awt.Dimension(0, 0));
        jScrollPaneMaterialBotoes.setViewportView(jTabbedPaneMaterialBotoes);

        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout jPanelListaBotoesLayout = new javax.swing.GroupLayout(jPanelListaBotoes);
        jPanelListaBotoes.setLayout(jPanelListaBotoesLayout);
        jPanelListaBotoesLayout.setHorizontalGroup(
            jPanelListaBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelListaBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelListaBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
                    .addComponent(jScrollPaneMaterialBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelListaBotoesLayout.setVerticalGroup(
            jPanelListaBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelListaBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addComponent(jScrollPaneMaterialBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jDialogListaBotoesLayout = new javax.swing.GroupLayout(jDialogListaBotoes.getContentPane());
        jDialogListaBotoes.getContentPane().setLayout(jDialogListaBotoesLayout);
        jDialogListaBotoesLayout.setHorizontalGroup(
            jDialogListaBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelListaBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialogListaBotoesLayout.setVerticalGroup(
            jDialogListaBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelListaBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.border.Border borderlistabotoes = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(systemColor, 4),javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 1));

        jPanelListaBotoes.setBorder(borderlistabotoes);

        jDialog1.setMinimumSize(new java.awt.Dimension(700, 500));
        jDialog1.setResizable(false);

        jLabel3.setText("jLabel3");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("jLabel4");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, 0, 107, Short.MAX_VALUE)
                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(482, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(342, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gest√£o de Recursos");
        setMinimumSize(new java.awt.Dimension(900, 600));

        jPanelInicial.setBackground(new java.awt.Color(177, 184, 190));
        jPanelInicial.setBorder(null);
        jPanelInicial.setForeground(new java.awt.Color(224, 19, 19));
        jPanelInicial.setToolTipText(null);
        jPanelInicial.setMinimumSize(new java.awt.Dimension(635, 505));
        jPanelInicial.setName(""); // NOI18N
        jPanelInicial.setPreferredSize(new java.awt.Dimension(1024, 600));

        jSplitPaneInicial.setBackground(new java.awt.Color(201, 201, 201));
        jSplitPaneInicial.setDividerLocation(400);
        jSplitPaneInicial.setDividerSize(20);
        jSplitPaneInicial.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPaneInicial.setResizeWeight(0.5);
        jSplitPaneInicial.setAutoscrolls(true);
        jSplitPaneInicial.setMaximumSize(new java.awt.Dimension(21473434, 21473434));
        jSplitPaneInicial.setMinimumSize(new java.awt.Dimension(0, 0));
        jSplitPaneInicial.setName(""); // NOI18N
        jSplitPaneInicial.setOneTouchExpandable(true);
        jSplitPaneInicial.setPreferredSize(new java.awt.Dimension(1000, 600));
        jSplitPaneInicial.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                jSplitPaneInicialComponentMoved(evt);
            }
        });

        jPanelBaixo.setBackground(new java.awt.Color(213, 228, 213));
        jPanelBaixo.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 0, 0, 0, new java.awt.Color(0, 0, 0,25)));
        jPanelBaixo.setMinimumSize(new java.awt.Dimension(1, 1));
        jPanelBaixo.setPreferredSize(new java.awt.Dimension(300, 200));
        jPanelBaixo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelBaixoMouseClicked(evt);
            }
        });

        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder5 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder5.setCornerSize(6);
        dropShadowBorder5.setShadowSize(3);
        dropShadowBorder5.setShowLeftShadow(true);
        dropShadowBorder5.setShowTopShadow(true);
        jScrollPaneDevolucoes.setBorder(javax.swing.BorderFactory.createCompoundBorder(dropShadowBorder5, javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        jScrollPaneDevolucoes.setMinimumSize(new java.awt.Dimension(600, 500));
        jScrollPaneDevolucoes.setPreferredSize(new java.awt.Dimension(700, 633));

        jLabelTituloDevolucoes.setBackground(new java.awt.Color(254, 254, 254));
        jLabelTituloDevolucoes.setForeground(new java.awt.Color(1, 1, 1));
        jLabelTituloDevolucoes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTituloDevolucoes.setLabelFor(jLabelTitulorequisicoes);
        jLabelTituloDevolucoes.setText("Lista de devolu√ß√µes");
        jLabelTituloDevolucoes.setAlignmentX(0.5F);
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder6 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder6.setCornerSize(6);
        dropShadowBorder6.setShadowSize(3);
        dropShadowBorder6.setShowLeftShadow(true);
        dropShadowBorder6.setShowRightShadow(false);
        jLabelTituloDevolucoes.setBorder(javax.swing.BorderFactory.createCompoundBorder(dropShadowBorder6, javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(0, 0, 0))));
        jLabelTituloDevolucoes.setPreferredSize(new java.awt.Dimension(103, 32));
        jLabelTituloDevolucoes.setFont(new Font("Cantarell",Font.PLAIN,16));

        jPanelInformaBaixoBaixo.setBackground(new java.awt.Color(254, 254, 254));
        jPanelInformaBaixoBaixo.setBorder(null);
        jPanelInformaBaixoBaixo.setMaximumSize(new java.awt.Dimension(26227, 32767));
        jPanelInformaBaixoBaixo.setMinimumSize(new java.awt.Dimension(220, 350));
        jPanelInformaBaixoBaixo.setPreferredSize(new java.awt.Dimension(281, 500));

        jScrollPaneInformaBaixo.setBackground(new java.awt.Color(50, 50, 50));
        jScrollPaneInformaBaixo.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        jScrollPaneInformaBaixo.setMaximumSize(new java.awt.Dimension(26997, 32767));
        jScrollPaneInformaBaixo.setMinimumSize(new java.awt.Dimension(150, 150));
        jScrollPaneInformaBaixo.setPreferredSize(new java.awt.Dimension(200, 230));

        jPanelInformaBaixoCima.setBackground(new java.awt.Color(0, 0, 0));
        jPanelInformaBaixoCima.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 0, 5));
        jPanelInformaBaixoCima.setMaximumSize(new java.awt.Dimension(267, 32767));
        jPanelInformaBaixoCima.setMinimumSize(new java.awt.Dimension(100, 300));
        jPanelInformaBaixoCima.setPreferredSize(new java.awt.Dimension(180, 230));

        javax.swing.GroupLayout jPanelInformaBaixoCimaLayout = new javax.swing.GroupLayout(jPanelInformaBaixoCima);
        jPanelInformaBaixoCima.setLayout(jPanelInformaBaixoCimaLayout);
        jPanelInformaBaixoCimaLayout.setHorizontalGroup(
            jPanelInformaBaixoCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 264, Short.MAX_VALUE)
        );
        jPanelInformaBaixoCimaLayout.setVerticalGroup(
            jPanelInformaBaixoCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 353, Short.MAX_VALUE)
        );

        jScrollPaneInformaBaixo.setViewportView(jPanelInformaBaixoCima);

        jButtonConfirmaDevolucao.setBackground(new java.awt.Color(57, 147, 2));
        jButtonConfirmaDevolucao.setBorder(null);
        jButtonConfirmaDevolucao.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonConfirmaDevolucao.setEnabled(false);
        jButtonConfirmaDevolucao.setFocusPainted(false);
        jButtonConfirmaDevolucao.setMaximumSize(new java.awt.Dimension(530, 55));
        jButtonConfirmaDevolucao.setMinimumSize(new java.awt.Dimension(53, 55));
        jButtonConfirmaDevolucao.setPreferredSize(new java.awt.Dimension(60, 55));
        jButtonConfirmaDevolucao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmaDevolucaoActionPerformed(evt);
            }
        });

        jButtonAlteraDevolucao.setBackground(new java.awt.Color(112, 159, 253));
        jButtonAlteraDevolucao.setBorder(null);
        jButtonAlteraDevolucao.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAlteraDevolucao.setEnabled(false);
        jButtonAlteraDevolucao.setFocusPainted(false);
        jButtonAlteraDevolucao.setMaximumSize(new java.awt.Dimension(530, 55));
        jButtonAlteraDevolucao.setMinimumSize(new java.awt.Dimension(20, 55));
        jButtonAlteraDevolucao.setPreferredSize(new java.awt.Dimension(60, 55));

        javax.swing.GroupLayout jPanelInformaBaixoBaixoLayout = new javax.swing.GroupLayout(jPanelInformaBaixoBaixo);
        jPanelInformaBaixoBaixo.setLayout(jPanelInformaBaixoBaixoLayout);
        jPanelInformaBaixoBaixoLayout.setHorizontalGroup(
            jPanelInformaBaixoBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInformaBaixoBaixoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonAlteraDevolucao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonConfirmaDevolucao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPaneInformaBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelInformaBaixoBaixoLayout.setVerticalGroup(
            jPanelInformaBaixoBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInformaBaixoBaixoLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanelInformaBaixoBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAlteraDevolucao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonConfirmaDevolucao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jScrollPaneInformaBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE))
        );

        java.awt.image.BufferedImage imagebtdevok;
        javax.swing.ImageIcon iconbtdevok = new javax.swing.ImageIcon();
        try {
            imagebtdevok = ImageIO.read(getClass().getResourceAsStream("Images/ok.png"));
            if (imagebtdevok != null) {
                iconbtdevok = new javax.swing.ImageIcon(imagebtdevok);
                jButtonConfirmaDevolucao.setIcon(iconbtdevok);
            }
        } catch (IOException ex) {
            jButtonConfirmaDevolucao.setText(lingua.translate("Confirmar"));
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        jButtonConfirmaDevolucao.setToolTipText(lingua.translate("Confirmar_devolucao"));
        java.awt.image.BufferedImage imagebtdevcancelar = null;
        javax.swing.ImageIcon iconbtdevcancelar = new javax.swing.ImageIcon();
        try {
            imagebtdevcancelar = ImageIO.read(getClass().getResourceAsStream("Images/oculos.png"));
            iconbtdevcancelar = new javax.swing.ImageIcon(imagebtdevcancelar);
            jButtonAlteraDevolucao.setIcon(iconbtdevcancelar);
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        jButtonAlteraDevolucao.setToolTipText(lingua.translate("Alterar_devolucao"));

        jButtonProcuraBaixo.setBorder(null);
        jButtonProcuraBaixo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonProcuraBaixo.setFocusPainted(false);
        jButtonProcuraBaixo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProcuraBaixoActionPerformed(evt);
            }
        });

        jTextFieldProcuraBaixo.setForeground(new java.awt.Color(201, 201, 201));
        jTextFieldProcuraBaixo.setBorder(null);
        jTextFieldProcuraBaixo.setOpaque(false);
        jTextFieldProcuraBaixo.setPreferredSize(new java.awt.Dimension(0, 41));
        jTextFieldProcuraBaixo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldProcuraBaixoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldProcuraBaixoFocusLost(evt);
            }
        });
        jTextFieldProcuraBaixo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldProcuraBaixoKeyPressed(evt);
            }
        });

        jPanelLimpaPesquisaBaixo.setOpaque(false);
        jPanelLimpaPesquisaBaixo.setPreferredSize(new java.awt.Dimension(267, 32));

        jLabelLimpaPesquisaBaixo.setBackground(new java.awt.Color(254, 254, 254));
        jLabelLimpaPesquisaBaixo.setFont(new java.awt.Font("Cantarell", 0, 16)); // NOI18N
        jLabelLimpaPesquisaBaixo.setForeground(new java.awt.Color(1, 1, 1));
        jLabelLimpaPesquisaBaixo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder7 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder7.setCornerSize(6);
        dropShadowBorder7.setShadowSize(3);
        dropShadowBorder7.setShowLeftShadow(true);
        jLabelLimpaPesquisaBaixo.setBorder(javax.swing.BorderFactory.createCompoundBorder(dropShadowBorder7, javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));

        jLabelDetalhesBaixo.setBackground(new java.awt.Color(254, 254, 254));
        jLabelDetalhesBaixo.setFont(new java.awt.Font("Cantarell", 0, 16)); // NOI18N
        jLabelDetalhesBaixo.setForeground(new java.awt.Color(1, 1, 1));
        jLabelDetalhesBaixo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDetalhesBaixo.setText("Detalhes");
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder8 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder8.setCornerSize(6);
        dropShadowBorder8.setShadowSize(3);
        jLabelDetalhesBaixo.setBorder(javax.swing.BorderFactory.createCompoundBorder(dropShadowBorder8, javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 1, new java.awt.Color(0, 0, 0))));
        jLabelDetalhesBaixo.setMaximumSize(new java.awt.Dimension(4700, 1400));
        jLabelDetalhesBaixo.setMinimumSize(new java.awt.Dimension(47, 14));
        jLabelDetalhesBaixo.setName(""); // NOI18N
        jLabelDetalhesBaixo.setPreferredSize(new java.awt.Dimension(57, 32));

        javax.swing.GroupLayout jPanelLimpaPesquisaBaixoLayout = new javax.swing.GroupLayout(jPanelLimpaPesquisaBaixo);
        jPanelLimpaPesquisaBaixo.setLayout(jPanelLimpaPesquisaBaixoLayout);
        jPanelLimpaPesquisaBaixoLayout.setHorizontalGroup(
            jPanelLimpaPesquisaBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLimpaPesquisaBaixoLayout.createSequentialGroup()
                .addComponent(jLabelDetalhesBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelLimpaPesquisaBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
        );
        jPanelLimpaPesquisaBaixoLayout.setVerticalGroup(
            jPanelLimpaPesquisaBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelLimpaPesquisaBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabelDetalhesBaixo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabelLimpaPesquisaBaixo.setText(lingua.translate("Limpar pesquisa"));
        jLabelLimpaPesquisaBaixo.setCursor(new Cursor(Cursor.HAND_CURSOR));
        jLabelLimpaPesquisaBaixo.setVisible(false);
        jLabelLimpaPesquisaBaixo.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                lista_dev.destroySearch();
                lista_dev.addTimerColors();
                lista_dev.startTimerColors();
                jLabelLimpaPesquisaBaixo.setVisible(false);
                jLabelTituloDevolucoes.setText(lingua.translate("lista_devolucoes"));
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                jLabelLimpaPesquisaBaixo.setForeground(new Color(201,201,201));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                jLabelLimpaPesquisaBaixo.setForeground(new Color(1,1,1));
            }
        });
        jLabelDetalhesBaixo.setText(lingua.translate("Detalhes"));

        javax.swing.GroupLayout jPanelBaixoLayout = new javax.swing.GroupLayout(jPanelBaixo);
        jPanelBaixo.setLayout(jPanelBaixoLayout);
        jPanelBaixoLayout.setHorizontalGroup(
            jPanelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBaixoLayout.createSequentialGroup()
                .addGroup(jPanelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBaixoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelInformaBaixoBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                            .addGroup(jPanelBaixoLayout.createSequentialGroup()
                                .addComponent(jButtonProcuraBaixo, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldProcuraBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jPanelLimpaPesquisaBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE))
                .addGroup(jPanelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBaixoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTituloDevolucoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelBaixoLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPaneDevolucoes, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                        .addGap(6, 6, 6)))
                .addGap(0, 0, 0))
        );
        jPanelBaixoLayout.setVerticalGroup(
            jPanelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBaixoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelTituloDevolucoes, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelLimpaPesquisaBaixo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneDevolucoes, javax.swing.GroupLayout.PREFERRED_SIZE, 497, Short.MAX_VALUE)
                    .addGroup(jPanelBaixoLayout.createSequentialGroup()
                        .addGroup(jPanelBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldProcuraBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonProcuraBaixo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelInformaBaixoBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLabelTituloDevolucoes.setText(lingua.translate("lista_devolucoes"));
        javax.swing.border.Border bordBaixo = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(1,1,1,75)), new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, false));
        jPanelInformaBaixoBaixo.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 6, 4, 8, jPanelBaixo.getBackground()), bordBaixo));
        java.awt.image.BufferedImage imagebtsearchbaixo = null;
        try {
            imagebtsearchbaixo = ImageIO.read(getClass().getResourceAsStream("Images/search.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (imagebtsearchbaixo != null) {
            javax.swing.ImageIcon iconbtsearchbaixo = new javax.swing.ImageIcon(imagebtsearchbaixo);
            jButtonProcuraBaixo.setIcon(iconbtsearchbaixo);
        }
        jButtonProcuraBaixo.setBackground(new Color(254,254,254));
        jButtonProcuraBaixo.setToolTipText(lingua.translate("Pesquisa por")+" "+spesquisa[1].toLowerCase());
        javax.swing.border.Border borderpesquisabaixo1 = BorderFactory.createMatteBorder(5, 5, 5, 8,jPanelBaixo.getBackground());
        javax.swing.border.Border borderpesquisabaixo3 = BorderFactory.createCompoundBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(1,1,1,75)),javax.swing.BorderFactory.createLineBorder(Color.BLACK,1));
        javax.swing.border.Border borderpesquisabaixo2 = BorderFactory.createCompoundBorder(borderpesquisabaixo1,borderpesquisabaixo3);

        jTextFieldProcuraBaixo.setBorder(javax.swing.BorderFactory.createCompoundBorder(borderpesquisabaixo2, javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 10)));
        jTextFieldProcuraBaixo.setText(lingua.translate(spesquisa[1])+" ... ");
        jTextFieldProcuraBaixo.setFocusAccelerator('x');
        jTextFieldProcuraBaixo.setCaretPosition(0);
        jTextFieldProcuraBaixo.addMouseListener(new java.awt.event.MouseAdapter() {
            Clipboard c = Toolkit.getDefaultToolkit().getSystemClipboard();
            String copiar = "";
            String colar = "";
            @Override
            public void mousePressed(MouseEvent e) {
                String[] titulos = {lingua.translate("Colar"), lingua.translate("Copiar")};
                ActionListener[] act = new ActionListener[titulos.length];
                if ((jTextFieldProcuraBaixo.getSelectedText()) != null) {
                    copiar = jTextFieldProcuraBaixo.getSelectedText();
                } else {
                    copiar = "";
                }
                Transferable t = c.getContents( null );
                if ( t.isDataFlavorSupported(DataFlavor.stringFlavor) ) {
                    try {
                        Object o = t.getTransferData( DataFlavor.stringFlavor );
                        colar = (String)t.getTransferData( DataFlavor.stringFlavor );
                    } catch(Exception eo) {}
                }
                if (e.isPopupTrigger() && e.getComponent() instanceof javax.swing.JTextField) {
                    jTextFieldProcuraBaixo.requestFocus();
                    act[0] = (ActionEvent e1) -> {
                        if (tema.equals("claro")) {
                            jTextFieldProcuraBaixo.setForeground(new Color(1,1,1));
                        } else {
                            jTextFieldProcuraBaixo.setForeground(new Color(254,254,254));
                        }
                        if (jTextFieldProcuraBaixo.getSelectedText() != null) {
                            int start = jTextFieldProcuraBaixo.getSelectionStart();
                            int end = jTextFieldProcuraBaixo.getSelectionEnd();
                            if (!jTextFieldProcuraBaixo.getSelectedText().equals("")) {
                                String texto1 = jTextFieldProcuraBaixo.getText().substring(0, start);
                                String texto2 = jTextFieldProcuraBaixo.getText().substring(end, jTextFieldProcuraBaixo.getText().length());
                                jTextFieldProcuraBaixo.setText(texto1 + colar + texto2);
                                String auxiliar = texto1 + colar;
                                jTextFieldProcuraBaixo.setCaretPosition(auxiliar.length());
                            } else {
                                String texto1 = jTextFieldProcuraBaixo.getText().substring(0,jTextFieldProcuraBaixo.getCaretPosition());
                                String texto2 = jTextFieldProcuraBaixo.getText().substring(jTextFieldProcuraBaixo.getCaretPosition(), jTextFieldProcuraBaixo.getText().length());
                                jTextFieldProcuraBaixo.setText(texto1 + colar + texto2);
                                String auxiliar = texto1 + colar;
                                jTextFieldProcuraBaixo.setCaretPosition(auxiliar.length());
                            }
                        } else {
                            String texto1 = jTextFieldProcuraBaixo.getText().substring(0, jTextFieldProcuraBaixo.getCaretPosition());
                            String texto2 = jTextFieldProcuraBaixo.getText().substring(jTextFieldProcuraBaixo.getCaretPosition(), jTextFieldProcuraBaixo.getText().length());
                            jTextFieldProcuraBaixo.setText(texto1 + colar + texto2);
                            String auxiliar = texto1 + colar;
                            jTextFieldProcuraBaixo.setCaretPosition(auxiliar.length());
                        }
                    };
                    act[1] = (ActionEvent e1) -> {
                        StringSelection texto = new StringSelection(jTextFieldProcuraBaixo.getSelectedText());
                        copiar = texto.toString();
                        jTextFieldProcuraBaixo.setSelectionEnd(-1);
                        c.setContents(texto, texto);
                    };
                    Components.PopUpMenu popup = new Components.PopUpMenu(titulos, act, colar, copiar);
                    popup.create();
                    popup.show(e.getComponent(), e.getX(), e.getY());
                }
            }
        });
        jPanelLimpaPesquisaBaixo.setBackground(jPanelBaixo.getBackground());

        jSplitPaneInicial.setRightComponent(jPanelBaixo);

        jPanelCima.setBackground(new java.awt.Color(228, 228, 228));
        jPanelCima.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 0, 0, 0, new java.awt.Color(0, 0, 0,25)));
        jPanelCima.setAutoscrolls(true);
        jPanelCima.setMinimumSize(new java.awt.Dimension(1, 1));
        jPanelCima.setName(""); // NOI18N
        jPanelCima.setPreferredSize(new java.awt.Dimension(300, 200));
        jPanelCima.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelCimaMouseClicked(evt);
            }
        });

        jScrollPaneRequisicoes.setBackground(new java.awt.Color(1, 1, 1));
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder9 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder9.setCornerSize(6);
        dropShadowBorder9.setShadowSize(3);
        dropShadowBorder9.setShowLeftShadow(true);
        dropShadowBorder9.setShowTopShadow(true);
        jScrollPaneRequisicoes.setBorder(javax.swing.BorderFactory.createCompoundBorder(dropShadowBorder9, javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        jScrollPaneRequisicoes.setInheritsPopupMenu(true);
        jScrollPaneRequisicoes.setMinimumSize(new java.awt.Dimension(600, 500));
        jScrollPaneRequisicoes.setPreferredSize(new java.awt.Dimension(700, 633));

        jLabelTitulorequisicoes.setBackground(new java.awt.Color(254, 254, 254));
        jLabelTitulorequisicoes.setForeground(new java.awt.Color(1, 1, 1));
        jLabelTitulorequisicoes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitulorequisicoes.setLabelFor(jLabelTitulorequisicoes);
        jLabelTitulorequisicoes.setText("Lista de requisi√ß√µes");
        jLabelTitulorequisicoes.setText(lingua.translate("Lista_de_requisi√ß√µes"));
        jLabelTitulorequisicoes.setAlignmentX(0.5F);
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder10 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder10.setCornerSize(6);
        dropShadowBorder10.setShadowSize(3);
        jLabelTitulorequisicoes.setBorder(javax.swing.BorderFactory.createCompoundBorder(dropShadowBorder10, javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 1, new java.awt.Color(0, 0, 0))));
        jLabelTitulorequisicoes.setPreferredSize(new java.awt.Dimension(103, 32));
        jLabelTitulorequisicoes.setFont(new Font("Cantarell",Font.PLAIN,16));

        jPanelInformaCimaBaixo.setBackground(new java.awt.Color(254, 254, 254));
        jPanelInformaCimaBaixo.setBorder(null);
        jPanelInformaCimaBaixo.setForeground(new java.awt.Color(254, 254, 254));
        jPanelInformaCimaBaixo.setMaximumSize(new java.awt.Dimension(12343, 32767));
        jPanelInformaCimaBaixo.setMinimumSize(new java.awt.Dimension(220, 350));
        jPanelInformaCimaBaixo.setPreferredSize(new java.awt.Dimension(281, 500));

        jScrollPaneInformaCima.setBackground(new java.awt.Color(50, 50, 50));
        jScrollPaneInformaCima.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        jScrollPaneInformaCima.setMaximumSize(new java.awt.Dimension(267, 32767));
        jScrollPaneInformaCima.setMinimumSize(new java.awt.Dimension(150, 150));
        jScrollPaneInformaCima.setName(""); // NOI18N
        jScrollPaneInformaCima.setPreferredSize(new java.awt.Dimension(200, 230));

        jPanelInformaCimaCima.setBackground(new java.awt.Color(1, 1, 1));
        jPanelInformaCimaCima.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 0, 5));
        jPanelInformaCimaCima.setMaximumSize(new java.awt.Dimension(267, 32767));
        jPanelInformaCimaCima.setMinimumSize(new java.awt.Dimension(100, 200));
        jPanelInformaCimaCima.setPreferredSize(new java.awt.Dimension(180, 210));
        jPanelInformaCimaCima.setRequestFocusEnabled(false);

        javax.swing.GroupLayout jPanelInformaCimaCimaLayout = new javax.swing.GroupLayout(jPanelInformaCimaCima);
        jPanelInformaCimaCima.setLayout(jPanelInformaCimaCimaLayout);
        jPanelInformaCimaCimaLayout.setHorizontalGroup(
            jPanelInformaCimaCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );
        jPanelInformaCimaCimaLayout.setVerticalGroup(
            jPanelInformaCimaCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 353, Short.MAX_VALUE)
        );

        jScrollPaneInformaCima.setViewportView(jPanelInformaCimaCima);
        jPanelInformaCimaCima.setToolTipText(lingua.translate("Quadro_detalhes"));

        jButtonAtuacaoConfirma.setBackground(new java.awt.Color(57, 147, 2));
        jButtonAtuacaoConfirma.setBorder(null);
        jButtonAtuacaoConfirma.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAtuacaoConfirma.setEnabled(false);
        jButtonAtuacaoConfirma.setFocusPainted(false);
        jButtonAtuacaoConfirma.setMaximumSize(new java.awt.Dimension(610, 55));
        jButtonAtuacaoConfirma.setMinimumSize(new java.awt.Dimension(53, 55));
        jButtonAtuacaoConfirma.setPreferredSize(new java.awt.Dimension(60, 55));
        jButtonAtuacaoConfirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtuacaoConfirmaActionPerformed(evt);
            }
        });

        jButtonAtuacaoAltera.setBackground(new java.awt.Color(51, 102, 153));
        jButtonAtuacaoAltera.setBorder(null);
        jButtonAtuacaoAltera.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAtuacaoAltera.setEnabled(false);
        jButtonAtuacaoAltera.setFocusPainted(false);
        jButtonAtuacaoAltera.setMaximumSize(new java.awt.Dimension(610, 55));
        jButtonAtuacaoAltera.setMinimumSize(new java.awt.Dimension(53, 55));
        jButtonAtuacaoAltera.setPreferredSize(new java.awt.Dimension(60, 55));
        jButtonAtuacaoAltera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtuacaoAlteraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelInformaCimaBaixoLayout = new javax.swing.GroupLayout(jPanelInformaCimaBaixo);
        jPanelInformaCimaBaixo.setLayout(jPanelInformaCimaBaixoLayout);
        jPanelInformaCimaBaixoLayout.setHorizontalGroup(
            jPanelInformaCimaBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInformaCimaBaixoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonAtuacaoConfirma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAtuacaoAltera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPaneInformaCima, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
        );
        jPanelInformaCimaBaixoLayout.setVerticalGroup(
            jPanelInformaCimaBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInformaCimaBaixoLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanelInformaCimaBaixoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAtuacaoConfirma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAtuacaoAltera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneInformaCima, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPaneInformaCima.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        java.awt.image.BufferedImage imagebtok = null;
        try {
            imagebtok = ImageIO.read(getClass().getResourceAsStream("Images/ok.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (imagebtok != null) {
            javax.swing.ImageIcon iconbtok = new javax.swing.ImageIcon(imagebtok);
            jButtonAtuacaoConfirma.setIcon(iconbtok);
        }
        jButtonAtuacaoConfirma.setToolTipText(lingua.translate("Confirmar_emprestimo"));
        java.awt.image.BufferedImage imagebtcancelar = null;
        try {
            imagebtcancelar = ImageIO.read(getClass().getResourceAsStream("Images/substituir.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (imagebtok != null) {
            javax.swing.ImageIcon iconbtcancelar = new javax.swing.ImageIcon(imagebtcancelar);
            jButtonAtuacaoAltera.setIcon(iconbtcancelar);
        }
        jButtonAtuacaoAltera.setToolTipText(lingua.translate("Alterar_requisicao"));

        jTextFieldProcuraCima.setForeground(new java.awt.Color(201, 201, 201));
        jTextFieldProcuraCima.setBorder(null);
        jTextFieldProcuraCima.setPreferredSize(new java.awt.Dimension(0, 41));
        jTextFieldProcuraCima.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldProcuraCimaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldProcuraCimaFocusLost(evt);
            }
        });
        jTextFieldProcuraCima.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldProcuraCimaKeyPressed(evt);
            }
        });

        jButtonProcuraCima.setBorder(null);
        jButtonProcuraCima.setBackground(new Color(254,254,254));
        jButtonProcuraCima.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonProcuraCima.setFocusPainted(false);
        jButtonProcuraCima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProcuraCimaActionPerformed(evt);
            }
        });

        jPanelDetalhesCima.setBorder(null);
        jPanelDetalhesCima.setOpaque(false);
        jPanelDetalhesCima.setPreferredSize(new java.awt.Dimension(267, 32));

        jLabelLimpaPesquisaCima.setBackground(new java.awt.Color(254, 254, 254));
        jLabelLimpaPesquisaCima.setFont(new java.awt.Font("Cantarell", 0, 16)); // NOI18N
        jLabelLimpaPesquisaCima.setForeground(new java.awt.Color(1, 1, 1));
        jLabelLimpaPesquisaCima.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder11 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder11.setCornerSize(6);
        dropShadowBorder11.setShadowSize(3);
        dropShadowBorder11.setShowLeftShadow(true);
        jLabelLimpaPesquisaCima.setBorder(javax.swing.BorderFactory.createCompoundBorder(dropShadowBorder11, javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));

        jLabelDetalhesCima.setBackground(new java.awt.Color(254, 254, 254));
        jLabelDetalhesCima.setForeground(new java.awt.Color(1, 1, 1));
        jLabelDetalhesCima.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDetalhesCima.setFont(new Font("Cantarell",Font.PLAIN,16));
        jLabelDetalhesCima.setText("Detalhes");
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder12 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder12.setCornerSize(6);
        dropShadowBorder12.setShadowSize(3);
        dropShadowBorder12.setShowLeftShadow(true);
        dropShadowBorder12.setShowRightShadow(false);
        jLabelDetalhesCima.setBorder(javax.swing.BorderFactory.createCompoundBorder(dropShadowBorder12, javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(0, 0, 0))));
        jLabelDetalhesCima.setMaximumSize(new java.awt.Dimension(4700, 1400));
        jLabelDetalhesCima.setPreferredSize(new java.awt.Dimension(57, 32));
        jLabelDetalhesCima.setText(lingua.translate("Detalhes"));

        javax.swing.GroupLayout jPanelDetalhesCimaLayout = new javax.swing.GroupLayout(jPanelDetalhesCima);
        jPanelDetalhesCima.setLayout(jPanelDetalhesCimaLayout);
        jPanelDetalhesCimaLayout.setHorizontalGroup(
            jPanelDetalhesCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDetalhesCimaLayout.createSequentialGroup()
                .addComponent(jLabelLimpaPesquisaCima, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelDetalhesCima, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE))
        );
        jPanelDetalhesCimaLayout.setVerticalGroup(
            jPanelDetalhesCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelLimpaPesquisaCima, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabelDetalhesCima, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabelLimpaPesquisaCima.setText(lingua.translate("Limpar pesquisa"));
        jLabelLimpaPesquisaCima.setCursor(new Cursor(Cursor.HAND_CURSOR));
        jLabelLimpaPesquisaCima.setVisible(false);
        jLabelLimpaPesquisaCima.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                lista_req.destroySearch();
                lista_req.addTimerColors();
                lista_req.startTimerColors();
                jLabelLimpaPesquisaCima.setVisible(false);
                jLabelTitulorequisicoes.setText(lingua.translate("Lista_de_requisi√ß√µes"));
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                jLabelLimpaPesquisaCima.setForeground(new Color(201,201,201));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                jLabelLimpaPesquisaCima.setForeground(new Color(1,1,1));
            }

        });

        javax.swing.GroupLayout jPanelCimaLayout = new javax.swing.GroupLayout(jPanelCima);
        jPanelCima.setLayout(jPanelCimaLayout);
        jPanelCimaLayout.setHorizontalGroup(
            jPanelCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCimaLayout.createSequentialGroup()
                .addGroup(jPanelCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTitulorequisicoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelCimaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPaneRequisicoes, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                        .addGap(10, 10, 10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCimaLayout.createSequentialGroup()
                        .addGroup(jPanelCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelInformaCimaBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCimaLayout.createSequentialGroup()
                                .addComponent(jTextFieldProcuraCima, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonProcuraCima, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addComponent(jPanelDetalhesCima, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)))
        );
        jPanelCimaLayout.setVerticalGroup(
            jPanelCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCimaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelDetalhesCima, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelTitulorequisicoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCimaLayout.createSequentialGroup()
                        .addGroup(jPanelCimaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldProcuraCima, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonProcuraCima, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelInformaCimaBaixo, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE))
                    .addComponent(jScrollPaneRequisicoes, javax.swing.GroupLayout.PREFERRED_SIZE, 497, Short.MAX_VALUE))
                .addContainerGap())
        );

        jScrollPaneRequisicoes.setMinimumSize(new java.awt.Dimension(600,jPanelCima.getHeight()));
        javax.swing.border.Border bord = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(1,1,1,75)), new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, false));

        jPanelInformaCimaBaixo.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 8, 4, 6, jPanelCima.getBackground()), bord));
        jTextFieldProcuraCima.setText(lingua.translate(spesquisa[0])+" ... ");
        jTextFieldProcuraCima.setFocusAccelerator('s');
        javax.swing.border.Border borderpesquisacima1 = BorderFactory.createMatteBorder(5, 8, 5, 5,jPanelCima.getBackground());
        javax.swing.border.Border borderpesquisacima3 = BorderFactory.createCompoundBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(1,1,1,75)),javax.swing.BorderFactory.createLineBorder(Color.BLACK,1));
        javax.swing.border.Border borderpesquisacima2 = BorderFactory.createCompoundBorder(borderpesquisacima1,borderpesquisacima3);
        jTextFieldProcuraCima.setBorder(javax.swing.BorderFactory.createCompoundBorder(borderpesquisacima2, javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 10)));
        jTextFieldProcuraCima.setCaretPosition(0);
        jTextFieldProcuraCima.addMouseListener(new java.awt.event.MouseAdapter() {
            Clipboard c = Toolkit.getDefaultToolkit().getSystemClipboard();
            String copiar = "";
            String colar = "";
            @Override
            public void mousePressed(MouseEvent e) {
                String[] titulos = {lingua.translate("Colar"), lingua.translate("Copiar")};
                ActionListener[] act = new ActionListener[titulos.length];
                if ((jTextFieldProcuraCima.getSelectedText()) != null) {
                    copiar = jTextFieldProcuraCima.getSelectedText();
                } else {
                    copiar = "";
                }
                Transferable t = c.getContents( null );
                if ( t.isDataFlavorSupported(DataFlavor.stringFlavor) ) {
                    try {
                        Object o = t.getTransferData( DataFlavor.stringFlavor );
                        colar = (String)t.getTransferData( DataFlavor.stringFlavor );
                    } catch(Exception eo) {}
                }
                if (e.isPopupTrigger() && e.getComponent() instanceof javax.swing.JTextField) {
                    jTextFieldProcuraCima.requestFocus();
                    act[0] = (ActionEvent e1) -> {
                        if (tema.equals("claro")) {
                            jTextFieldProcuraCima.setForeground(new Color(1,1,1));
                        } else {
                            jTextFieldProcuraCima.setForeground(new Color(254,254,254));
                        }
                        if (jTextFieldProcuraCima.getSelectedText() != null) {
                            int start = jTextFieldProcuraCima.getSelectionStart();
                            int end = jTextFieldProcuraCima.getSelectionEnd();
                            if (!jTextFieldProcuraCima.getSelectedText().equals("")) {
                                String texto1 = jTextFieldProcuraCima.getText().substring(0, start);
                                String texto2 = jTextFieldProcuraCima.getText().substring(end, jTextFieldProcuraCima.getText().length());
                                jTextFieldProcuraCima.setText(texto1 + colar + texto2);
                                String auxiliar = texto1 + colar;
                                jTextFieldProcuraCima.setCaretPosition(auxiliar.length());
                            } else {
                                String texto1 = jTextFieldProcuraCima.getText().substring(0,jTextFieldProcuraCima.getCaretPosition());
                                String texto2 = jTextFieldProcuraCima.getText().substring(jTextFieldProcuraCima.getCaretPosition(), jTextFieldProcuraCima.getText().length());
                                jTextFieldProcuraCima.setText(texto1 + colar + texto2);
                                String auxiliar = texto1 + colar;
                                jTextFieldProcuraCima.setCaretPosition(auxiliar.length());
                            }
                        } else {
                            String texto1 = jTextFieldProcuraCima.getText().substring(0, jTextFieldProcuraCima.getCaretPosition());
                            String texto2 = jTextFieldProcuraCima.getText().substring(jTextFieldProcuraCima.getCaretPosition(), jTextFieldProcuraCima.getText().length());
                            jTextFieldProcuraCima.setText(texto1 + colar + texto2);
                            String auxiliar = texto1 + colar;
                            jTextFieldProcuraCima.setCaretPosition(auxiliar.length());
                        }
                    };
                    act[1] = (ActionEvent e1) -> {
                        StringSelection texto = new StringSelection(jTextFieldProcuraCima.getSelectedText());
                        copiar = texto.toString();
                        jTextFieldProcuraCima.setSelectionEnd(-1);
                        c.setContents(texto, texto);
                    };
                    Components.PopUpMenu popup = new Components.PopUpMenu(titulos, act, colar, copiar);
                    popup.create();
                    popup.show(e.getComponent(), e.getX(), e.getY());
                }
            }
        });
        java.awt.image.BufferedImage imagebtsearch = null;
        try {
            imagebtsearch = ImageIO.read(getClass().getResourceAsStream("Images/search.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (imagebtsearch != null) {
            javax.swing.ImageIcon iconbtsearch = new javax.swing.ImageIcon(imagebtsearch);
            jButtonProcuraCima.setIcon(iconbtsearch);
        }
        jButtonProcuraCima.setToolTipText(lingua.translate("Pesquisa por")+" "+spesquisa[0].toLowerCase());
        jPanelDetalhesCima.setBackground(Color.WHITE);

        jSplitPaneInicial.setLeftComponent(jPanelCima);
        jSplitPaneInicial.setBackground(jPanelCima.getBackground());

        javax.swing.GroupLayout jPanelInicialLayout = new javax.swing.GroupLayout(jPanelInicial);
        jPanelInicial.setLayout(jPanelInicialLayout);
        jPanelInicialLayout.setHorizontalGroup(
            jPanelInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPaneInicial, javax.swing.GroupLayout.DEFAULT_SIZE, 1046, Short.MAX_VALUE)
        );
        jPanelInicialLayout.setVerticalGroup(
            jPanelInicialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPaneInicial, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
        );

        jSplitPaneInicial.setResizeWeight(1.0);

        jSplitPaneInicial.setContinuousLayout(true);

        jPanel3.setBackground(new java.awt.Color(250, 250, 250));
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder13 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder13.setCornerSize(6);
        dropShadowBorder13.setShadowSize(3);
        dropShadowBorder13.setShowRightShadow(false);
        jPanel3.setBorder(javax.swing.BorderFactory.createCompoundBorder(dropShadowBorder13, javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(0, 0, 0))));
        jPanel3.setForeground(new java.awt.Color(1, 1, 1));
        jPanel3.setPreferredSize(new java.awt.Dimension(757, 40));

        jToggleButtonBarRequisicoes.setBorder(null);
        jToggleButtonBarRequisicoes.setBorderPainted(false);
        jToggleButtonBarRequisicoes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButtonBarRequisicoes.setFocusPainted(false);
        jToggleButtonBarRequisicoes.setFocusable(false);
        jToggleButtonBarRequisicoes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonBarRequisicoes.setMaximumSize(new java.awt.Dimension(60, 26));
        jToggleButtonBarRequisicoes.setPreferredSize(new java.awt.Dimension(30, 26));
        jToggleButtonBarRequisicoes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonBarRequisicoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonBarRequisicoesActionPerformed(evt);
            }
        });

        jToggleButtonBarEntregas.setBorder(null);
        jToggleButtonBarEntregas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButtonBarEntregas.setFocusPainted(false);
        jToggleButtonBarEntregas.setFocusable(false);
        jToggleButtonBarEntregas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonBarEntregas.setMaximumSize(new java.awt.Dimension(60, 26));
        jToggleButtonBarEntregas.setMinimumSize(new java.awt.Dimension(0, 26));
        jToggleButtonBarEntregas.setPreferredSize(new java.awt.Dimension(30, 26));
        jToggleButtonBarEntregas.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonBarEntregas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonBarEntregasActionPerformed(evt);
            }
        });

        jComboBoxVista.setBackground(new java.awt.Color(213, 213, 213));
        jComboBoxVista.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jComboBoxVista.setFocusable(false);
        jComboBoxVista.setMinimumSize(new java.awt.Dimension(138, 26));
        jComboBoxVista.setPreferredSize(new java.awt.Dimension(138, 26));
        jComboBoxVista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxVistaActionPerformed(evt);
            }
        });
        jComboBoxVista.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { lingua.translate("1_dia"), lingua.translate("2_dias"), lingua.translate("1_semana"), lingua.translate("2_semanas")}));
        ((javax.swing.JLabel)jComboBoxVista.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.CENTER);

        jComboBoxListaBotoes.setBackground(new java.awt.Color(213, 213, 213));
        jComboBoxListaBotoes.setFocusable(false);
        jComboBoxListaBotoes.setMaximumSize(new java.awt.Dimension(32767, 26));
        jComboBoxListaBotoes.setMinimumSize(new java.awt.Dimension(148, 26));
        jComboBoxListaBotoes.setPreferredSize(new java.awt.Dimension(148, 26));
        jComboBoxListaBotoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxListaBotoesActionPerformed(evt);
            }
        });

        jButtonListaBotoes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonListaBotoes.setFocusPainted(false);
        jButtonListaBotoes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonListaBotoes.setMaximumSize(new java.awt.Dimension(60, 26));
        jButtonListaBotoes.setMinimumSize(new java.awt.Dimension(0, 26));
        jButtonListaBotoes.setPreferredSize(new java.awt.Dimension(30, 26));
        jButtonListaBotoes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonListaBotoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListaBotoesActionPerformed(evt);
            }
        });

        jComboBoxPesquisaOpcao.setBackground(new java.awt.Color(213, 213, 213));
        jComboBoxPesquisaOpcao.setForeground(new java.awt.Color(1, 1, 1));
        jComboBoxPesquisaOpcao.setFocusable(false);
        jComboBoxPesquisaOpcao.setMinimumSize(new java.awt.Dimension(64, 26));
        jComboBoxPesquisaOpcao.setPreferredSize(new java.awt.Dimension(124, 26));
        jComboBoxPesquisaOpcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPesquisaOpcaoActionPerformed(evt);
            }
        });

        jToggleButton1.setToolTipText("");
        jToggleButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton1.setFocusPainted(false);
        jToggleButton1.setMaximumSize(new java.awt.Dimension(60, 26));
        jToggleButton1.setMinimumSize(new java.awt.Dimension(0, 26));
        jToggleButton1.setPreferredSize(new java.awt.Dimension(30, 26));
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jToggleButtonBarRequisicoes, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jToggleButtonBarEntregas, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jComboBoxVista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jButtonListaBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxListaBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jComboBoxPesquisaOpcao, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(286, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator1)
                    .addComponent(jToggleButtonBarRequisicoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonListaBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBoxListaBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxPesquisaOpcao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jComboBoxVista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButtonBarEntregas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator3)
                    .addComponent(jSeparator4))
                .addGap(3, 3, 3))
        );

        java.awt.image.BufferedImage imagebtreq = null;
        try {
            imagebtreq = ImageIO.read(getClass().getResourceAsStream("Images/baixo.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (imagebtreq != null) {
            javax.swing.ImageIcon iconbtreq = new javax.swing.ImageIcon(imagebtreq);
            jToggleButtonBarRequisicoes.setIcon(iconbtreq);
        }
        jToggleButtonBarRequisicoes.setToolTipText(lingua.translate("Aba_requisicoes"));
        java.awt.image.BufferedImage imagebtent = null;
        try {
            imagebtent = ImageIO.read(getClass().getResourceAsStream("Images/cima.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (imagebtent != null) {
            javax.swing.ImageIcon iconbtent = new javax.swing.ImageIcon(imagebtent);
            jToggleButtonBarEntregas.setIcon(iconbtent);
        }
        BasicComboPopup popupVista = (BasicComboPopup) jComboBoxVista.getAccessibleContext().getAccessibleChild(0);
        popupVista.getList().setSelectionBackground(Color.DARK_GRAY);
        popupVista.getList().setBorder(BorderFactory.createEmptyBorder(1, 2, 1, 2));
        ((javax.swing.JLabel)jComboBoxListaBotoes.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.CENTER);
        BasicComboPopup popupLista = (BasicComboPopup) jComboBoxListaBotoes.getAccessibleContext().getAccessibleChild(0);
        popupLista.getList().setSelectionBackground(Color.DARK_GRAY);
        popupLista.getList().setBorder(BorderFactory.createEmptyBorder(1, 2, 1, 2));
        jButtonListaBotoes.setMnemonic(lingua.translate("Lista de recursos").charAt(0));
        jButtonListaBotoes.setToolTipText(lingua.translate("Lista de recursos"));
        java.awt.image.BufferedImage imagebtlista = null;
        try {
            imagebtlista = ImageIO.read(getClass().getResourceAsStream("Images/lista.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (imagebtlista != null) {
            javax.swing.ImageIcon iconbtlista = new javax.swing.ImageIcon(imagebtlista);
            jButtonListaBotoes.setIcon(iconbtlista);
        }
        jComboBoxPesquisaOpcao.getComponent(0).setForeground(Color.WHITE);
        ((javax.swing.JLabel)jComboBoxPesquisaOpcao.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.CENTER);
        BasicComboPopup popupPesquisa = (BasicComboPopup) jComboBoxPesquisaOpcao.getAccessibleContext().getAccessibleChild(0);
        popupPesquisa.getList().setSelectionBackground(Color.DARK_GRAY);
        popupPesquisa.getList().setBorder(BorderFactory.createEmptyBorder(1, 2, 1, 2));
        jComboBoxPesquisaOpcao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { lingua.translate("Pesquisa por utilizador"), lingua.translate("Pesquisa por recurso"), lingua.translate("Pesquisa por tempo") }));
        java.awt.image.BufferedImage imagebtscroll = null;
        try {
            imagebtscroll = ImageIO.read(getClass().getResourceAsStream("Images/scroll.png"));
        } catch (IOException ex) {
            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (imagebtscroll != null) {
            javax.swing.ImageIcon iconbtscroll = new javax.swing.ImageIcon(imagebtscroll);
            jToggleButton1.setIcon(iconbtscroll);
        }

        if (scrollAtivo) {
            jToggleButton1.setSelected(true);
        } else {
            jToggleButton1.setSelected(false);
        }
        jToggleButton1.setToolTipText(lingua.translate("Auxiliar autom√°tico de rolagem"));
        jSeparator1.setBackground(systemColor);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelInicial, javax.swing.GroupLayout.DEFAULT_SIZE, 1046, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 1046, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanelInicial, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE))
        );

        jPanelInicial.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 4, 4, 4, systemColor), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0),1)));
        jPanel3.setBackground(systemColor);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jPanelBaixoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelBaixoMouseClicked
        if (evt.getClickCount() == 2) {
            if (auxiliar.isAlive()) {
                Threads.EfectsOnDivisor ev = (Threads.EfectsOnDivisor) auxiliar;
                ev.setCondition(false);
            }
            auxiliar = new Threads.EfectsOnDivisor(jSplitPaneInicial, 0);
            auxiliar.start();
            jToggleButtonBarRequisicoes.setSelected(false);
            jToggleButtonBarEntregas.setSelected(true);
            bitpagina[0] = 0;
            bitpagina[1] = 1;
        }
    }//GEN-LAST:event_jPanelBaixoMouseClicked

    private void jRadioButtonSextaFeiraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSextaFeiraActionPerformed
        if (jRadioButtonSextaFeira.isSelected()) {
            feriados.addGoodFriday();
            FileHolidays hol = new FileHolidays();
            hol.saveHolidays(feriados);
        } else {
            feriados.removeGoodFriday();
            FileHolidays hol = new FileHolidays();
            hol.saveHolidays(feriados);
        }
        this.drawChoosenHolidaysList();
        jButtonDefHolidaysApagar.setEnabled(false);
    }//GEN-LAST:event_jRadioButtonSextaFeiraActionPerformed

    private void jButtonDefHolidaysVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefHolidaysVoltarActionPerformed
        jDialogDefHolidays.setVisible(false);
        jDialogDefHolidays.dispose();
    }//GEN-LAST:event_jButtonDefHolidaysVoltarActionPerformed

    private void jRadioButtonCarnavalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButtonCarnavalStateChanged

    }//GEN-LAST:event_jRadioButtonCarnavalStateChanged

    private void jRadioButtonCarnavalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonCarnavalActionPerformed
        if (jRadioButtonCarnaval.isSelected()) {
            feriados.addCarnival();
            FileHolidays hol = new FileHolidays();
            hol.saveHolidays(feriados);
        } else {
            feriados.removeCarnival();
            FileHolidays hol = new FileHolidays();
            hol.saveHolidays(feriados);
        }
        this.drawChoosenHolidaysList();
        jButtonDefHolidaysApagar.setEnabled(false);
    }//GEN-LAST:event_jRadioButtonCarnavalActionPerformed

    private void jRadioButtonPascoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPascoaActionPerformed
        if (jRadioButtonPascoa.isSelected()) {
            feriados.addEaster();
            FileHolidays hol = new FileHolidays();
            hol.saveHolidays(feriados);
        } else {
            feriados.removeEaster();
            FileHolidays hol = new FileHolidays();
            hol.saveHolidays(feriados);
        }
        this.drawChoosenHolidaysList();
        jButtonDefHolidaysApagar.setEnabled(false);
    }//GEN-LAST:event_jRadioButtonPascoaActionPerformed

    private void jRadioButtonCorpoDeusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonCorpoDeusActionPerformed
        if (jRadioButtonCorpoDeus.isSelected()) {
            feriados.addCorpusChristi();
            FileHolidays hol = new FileHolidays();
            hol.saveHolidays(feriados);
        } else {
            feriados.removeCorpusChristi();
            FileHolidays hol = new FileHolidays();
            hol.saveHolidays(feriados);
        }
        this.drawChoosenHolidaysList();
        jButtonDefHolidaysApagar.setEnabled(false);
    }//GEN-LAST:event_jRadioButtonCorpoDeusActionPerformed

    private void jButtonDefHolidaysDireitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefHolidaysDireitaActionPerformed
        if (!jListFeriadosDefeito.isSelectionEmpty()) {
            DefaultListModel<String> modelo = (DefaultListModel<String>) jListFeriadosEscolhidos.getModel();
            String value = jListFeriadosDefeito.getSelectedValue();
            boolean aux = false;
            for (int i = 0; i < modelo.getSize(); i++) {
                if (modelo.getElementAt(i).equals(value)) {
                    aux = true;
                }
            }
            if (!aux) {
                HolidaysList lista = new FileHolidays().getDefaultHolidaysList();
                TimeDate.Holiday hol = null;
                for (TimeDate.Holiday h : lista.getHolidays()) {
                    h.setLanguage(lingua);
                    if (h.toLongString().equals(value)) {
                        hol = h;
                    }
                }
                if (hol != null) {
                    feriados.addHoliday(hol);
                    FileHolidays holi = new FileHolidays();
                    holi.saveHolidays(feriados);
                    this.drawChoosenHolidaysList();
                }
                jButtonDefHolidaysDireita.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jButtonDefHolidaysDireitaActionPerformed

    private void jButtonDefHolidaysApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefHolidaysApagarActionPerformed
        if (!jListFeriadosEscolhidos.isSelectionEmpty()) {
            String value = jListFeriadosEscolhidos.getSelectedValue();
            int val = -1;
            TimeDate.Holiday h = null;
            for (TimeDate.Holiday hol : feriados.getHolidays()) {
                hol.setLanguage(lingua);
                if (hol.isDinamic()) {
                    if ((lingua.translate("Carnaval").equals(value)) && ((feriados.getCarnival().getDay() == hol.getDay()) && (feriados.getCarnival().getMonth() == hol.getMonth()))) {
                        val = 0;
                    } else if ((lingua.translate("corpo_deus").equals(value)) && ((feriados.getCorpusChristi().getDay() == hol.getDay()) && (feriados.getCorpusChristi().getMonth() == hol.getMonth()))) {
                        val = 1;
                    } else if ((lingua.translate("P√°scoa").equals(value)) && ((feriados.getEaster().getDay() == hol.getDay()) && (feriados.getEaster().getMonth() == hol.getMonth()))) {
                        val = 2;
                    } else if ((lingua.translate("Sexta-feira_santa").equals(value)) && ((feriados.getGoodFriday().getDay() == hol.getDay()) && (feriados.getGoodFriday().getMonth() == hol.getMonth()))) {
                        val = 3;
                    }
                } else if (hol.toLongString().equals(value)) {
                    h = hol;
                    val = 4;
                }
            }
            switch (val) {
                case 0:
                    jRadioButtonCarnaval.setSelected(false);
                    feriados.removeCarnival();
                    break;
                case 1:
                    jRadioButtonCorpoDeus.setSelected(false);
                    feriados.removeCorpusChristi();
                    break;
                case 2:
                    jRadioButtonPascoa.setSelected(false);
                    feriados.removeEaster();
                    break;
                case 3:
                    jRadioButtonSextaFeira.setSelected(false);
                    feriados.removeGoodFriday();
                    break;
                case 4:
                    feriados.removeHoliday(h);
                    break;
                default:
                    break;
            }
            if (val > -1) {
                FileHolidays holi = new FileHolidays();
                holi.saveHolidays(feriados);
                this.drawChoosenHolidaysList();
            }
            jListFeriadosDefeito.clearSelection();
            jButtonDefHolidaysApagar.setEnabled(false);
        }
    }//GEN-LAST:event_jButtonDefHolidaysApagarActionPerformed

    private void jButtonDefHolidaysMaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefHolidaysMaisActionPerformed
        javax.swing.JComboBox<String> dia = new javax.swing.JComboBox<>();
        dia.setBorder(BorderFactory.createEmptyBorder(1, 3, 1, 3));
        javax.swing.JComboBox<String> mes = new javax.swing.JComboBox<>();
        mes.setBorder(BorderFactory.createEmptyBorder(1, 3, 1, 3));
        mes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{lingua.translate("Janeiro"), lingua.translate("Fevereiro"),
            lingua.translate("Mar√ßo"), lingua.translate("Abril"), lingua.translate("Maio"),
            lingua.translate("Junho"), lingua.translate("Julho"), lingua.translate("Agosto"), lingua.translate("Setembro"),
            lingua.translate("Outubro"), lingua.translate("Novembro"), lingua.translate("Dezembro")}));
        mes.setSelectedIndex(0);
        ((javax.swing.JLabel) mes.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.TRAILING);
        ((javax.swing.JLabel) dia.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.TRAILING);
        dia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));
        mes.addActionListener((ActionEvent e) -> {
            int vval = mes.getSelectedIndex();
            int select = dia.getSelectedIndex();
            if ((vval == 3) || (vval == 5) || (vval == 8) || (vval == 10)) {
                dia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30"}));
            } else if (vval == 1) {
                dia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29"}));
            } else {
                dia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));
            }
            if (dia.getModel().getSize() > select) {
                dia.setSelectedIndex(select);
            }
        });
        BasicComboPopup popupmes = (BasicComboPopup) mes.getAccessibleContext().getAccessibleChild(0);
        popupmes.getList().setSelectionBackground(Color.DARK_GRAY);
        popupmes.getList().setBorder(BorderFactory.createEmptyBorder(1, 2, 1, 2));
        BasicComboPopup popupdia = (BasicComboPopup) dia.getAccessibleContext().getAccessibleChild(0);
        popupdia.getList().setSelectionBackground(Color.DARK_GRAY);
        popupdia.getList().setBorder(BorderFactory.createEmptyBorder(1, 2, 1, 2));
        mes.setPreferredSize(new java.awt.Dimension(190, 26));
        mes.setFocusable(false);
        mes.setBackground(new Color(213, 213, 213));
        dia.setPreferredSize(new java.awt.Dimension(190, 26));
        dia.setFocusable(false);
        dia.setBackground(new Color(213, 213, 213));
        javax.swing.JLabel lmes = new javax.swing.JLabel(lingua.translate("M√™s") + ":");
        lmes.setBorder(BorderFactory.createEmptyBorder(0, 0, 8, 0));
        lmes.setHorizontalAlignment(SwingConstants.CENTER);
        lmes.setPreferredSize(new java.awt.Dimension(50, 26));
        javax.swing.JLabel ldia = new javax.swing.JLabel(lingua.translate("Dia") + ": ");
        ldia.setBorder(BorderFactory.createEmptyBorder(0, 0, 8, 0));
        ldia.setHorizontalAlignment(SwingConstants.CENTER);
        ldia.setPreferredSize(new java.awt.Dimension(50, 26));
        javax.swing.JLabel branco = new javax.swing.JLabel("");
        branco.setBorder(BorderFactory.createEmptyBorder(5, 0, 10, 0));

        javax.swing.JPanel pmes = new javax.swing.JPanel();
        javax.swing.GroupLayout pmesLayout = new javax.swing.GroupLayout(pmes);
        pmes.setLayout(pmesLayout);
        pmesLayout.setHorizontalGroup(
                pmesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pmesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pmesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lmes)
                                .addComponent(ldia))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pmesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(mes, javax.swing.GroupLayout.Alignment.TRAILING, 0, 107, Short.MAX_VALUE)
                                .addComponent(dia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
        );
        pmesLayout.setVerticalGroup(
                pmesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pmesLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(pmesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lmes))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pmesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ldia)
                                .addComponent(dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(0, Short.MAX_VALUE))
        );

        String[] botoes = {lingua.translate("Voltar"), lingua.translate("Confirmar")};
        Components.MessagePane mensagem = new Components.MessagePane(jDialogDefHolidays, Components.MessagePane.ACAO, systemColor, lingua.translate("Adicionar feriado"), 400, 200, pmes, "", botoes);
        javax.swing.JOptionPane pane = new javax.swing.JOptionPane();
        if (mensagem.showMessage() == 1) {
            int idia = Integer.valueOf(dia.getSelectedItem().toString().trim());
            int imes = mes.getSelectedIndex() + 1;
            feriados.addHoliday(idia, imes);
            FileHolidays holi = new FileHolidays();
            holi.saveHolidays(feriados);
            this.drawChoosenHolidaysList();
        }
    }//GEN-LAST:event_jButtonDefHolidaysMaisActionPerformed

    private void jListFeriadosDefeitoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListFeriadosDefeitoMouseClicked
        if (!jListFeriadosDefeito.isSelectionEmpty()) {
            String val = jListFeriadosDefeito.getSelectedValue();
            DefaultListModel<String> modelo = (DefaultListModel<String>) jListFeriadosEscolhidos.getModel();
            boolean existe = false;
            for (int i = 0; i < modelo.getSize(); i++) {
                if (modelo.getElementAt(i).equals(val)) {
                    existe = true;
                }
            }
            if (!existe) {
                jButtonDefHolidaysDireita.setEnabled(true);
            } else {
                jButtonDefHolidaysDireita.setEnabled(false);
            }
        } else {
            jButtonDefHolidaysDireita.setEnabled(false);
        }
    }//GEN-LAST:event_jListFeriadosDefeitoMouseClicked

    private void jListFeriadosDefeitoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jListFeriadosDefeitoPropertyChange

    }//GEN-LAST:event_jListFeriadosDefeitoPropertyChange

    private void jListFeriadosDefeitoValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListFeriadosDefeitoValueChanged
        if (!jListFeriadosDefeito.isSelectionEmpty()) {
            String val = jListFeriadosDefeito.getSelectedValue();
            DefaultListModel<String> modelo = (DefaultListModel<String>) jListFeriadosEscolhidos.getModel();
            boolean existe = false;
            for (int i = 0; i < modelo.getSize(); i++) {
                if (modelo.getElementAt(i).equals(val)) {
                    existe = true;
                }
            }
            if (!existe) {
                jButtonDefHolidaysDireita.setEnabled(true);
            } else {
                jButtonDefHolidaysDireita.setEnabled(false);
            }
        } else {
            jButtonDefHolidaysDireita.setEnabled(false);
        }
    }//GEN-LAST:event_jListFeriadosDefeitoValueChanged

    private void jListFeriadosDefeitoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jListFeriadosDefeitoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (jButtonDefHolidaysDireita.isEnabled()) {
                jButtonDefHolidaysDireita.doClick();
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            jListFeriadosDefeito.clearSelection();
            jListFeriadosEscolhidos.clearSelection();
            jButtonDefHolidaysDireita.setEnabled(false);
        }
    }//GEN-LAST:event_jListFeriadosDefeitoKeyPressed

    private void jButtonDefBreaksVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefBreaksVoltarActionPerformed
        jDialogDefBreaks.setVisible(false);
        jDialogDefBreaks.dispose();
    }//GEN-LAST:event_jButtonDefBreaksVoltarActionPerformed

    private void jButtonDefBreakApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefBreakApagarActionPerformed
        if (jListFerias.getSelectedIndex() >= 0) {
            intervalos.getBreakPeriodList().remove(jListFerias.getSelectedIndex());
            this.drawBreaksList();
            jTextFieldDefBreaksNome.setText("");
            jButtonDefBreakApagar.setEnabled(false);
            java.awt.image.BufferedImage image = null;
            try {
                image = ImageIO.read(getClass().getResourceAsStream("Images/plus.png"));
            } catch (IOException ex) {
                Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (image != null) {
                javax.swing.ImageIcon icon = new javax.swing.ImageIcon(image);
                jButtonDefBreaksAdicionar.setIcon(icon);
            }
            jButtonDefBreaksAdicionar.setToolTipText(lingua.translate("Adicionar"));
            jButtonDefBreaksAdicionar.setEnabled(false);
            this.clearComboBoxDefBreaks();
        }
    }//GEN-LAST:event_jButtonDefBreakApagarActionPerformed

    private void jPanelDefHolidaysMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelDefHolidaysMouseClicked
        jListFeriadosEscolhidos.clearSelection();
        jListFeriadosDefeito.clearSelection();
        jButtonDefHolidaysApagar.setEnabled(false);
        jButtonDefHolidaysDireita.setEnabled(false);
    }//GEN-LAST:event_jPanelDefHolidaysMouseClicked

    private void jListFeriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListFeriasMouseClicked
        if (!jListFerias.isSelectionEmpty()) {
            jButtonDefBreakApagar.setEnabled(true);
            if (evt.getClickCount() == 2) {
                this.mostrajListFeriasMensagem();
            }
            String dia = String.valueOf(intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getBeginDate().getDay());
            int mes = intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getBeginDate().getMonth() - 1;
            String ano = String.valueOf(intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getBeginDate().getYear());
            jComboBoxDefBreaksDiaInicio.setSelectedItem(dia);
            jComboBoxDefBreaksMesInicio.setSelectedIndex(mes);
            jComboBoxDefBreaksAnoInicio.setSelectedItem(ano);
            dia = String.valueOf(intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getEndDate().getDay());
            mes = intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getEndDate().getMonth() - 1;
            ano = String.valueOf(intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getEndDate().getYear());
            jComboBoxDefBreaksDiaFim.setSelectedItem(dia);
            jComboBoxDefBreaksMesFim.setSelectedIndex(mes);
            jComboBoxDefBreaksAnoFim.setSelectedItem(ano);
            jTextFieldDefBreaksNome.setText(intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getName());
            java.awt.image.BufferedImage image = null;
            try {
                image = ImageIO.read(getClass().getResourceAsStream("Images/ok.png"));
            } catch (IOException ex) {
                Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (image != null) {
                javax.swing.ImageIcon icon = new javax.swing.ImageIcon(image);
                jButtonDefBreaksAdicionar.setIcon(icon);
            }
            jButtonDefBreaksAdicionar.setToolTipText(lingua.translate("Editar"));

            jButtonDefBreaksAdicionar.setEnabled(true);
        } else {
            jButtonDefBreakApagar.setEnabled(false);
        }

    }//GEN-LAST:event_jListFeriasMouseClicked

    private void jListFeriasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jListFeriasKeyPressed
        if (!jListFerias.isSelectionEmpty()) {
            jButtonDefBreakApagar.setEnabled(true);
            switch (evt.getKeyCode()) {
                case java.awt.event.KeyEvent.VK_ENTER:
                    this.mostrajListFeriasMensagem();
                    break;
                case java.awt.event.KeyEvent.VK_ESCAPE:
                    jButtonDefBreakApagar.setEnabled(false);
                    java.awt.image.BufferedImage image = null;
                    try {
                        image = ImageIO.read(getClass().getResourceAsStream("Images/plus.png"));
                    } catch (IOException ex) {
                        Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (image != null) {
                        javax.swing.ImageIcon icon = new javax.swing.ImageIcon(image);
                        jButtonDefBreaksAdicionar.setIcon(icon);
                    }
                    jButtonDefBreaksAdicionar.setEnabled(false);
                    jTextFieldDefBreaksNome.setText("");
                    jButtonDefBreaksAdicionar.setToolTipText(lingua.translate("Adicionar"));
                    jListFerias.clearSelection();
                    this.clearComboBoxDefBreaks();
                    break;
                case java.awt.event.KeyEvent.VK_DELETE:
                    jButtonDefBreakApagar.doClick();
                    break;
                default:
                    break;
            }
        }
    }//GEN-LAST:event_jListFeriasKeyPressed

    private void jPanelDefBreaksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelDefBreaksMouseClicked
        if (!jListFerias.isSelectionEmpty()) {
            String texto = jTextFieldDefBreaksNome.getText();
            String[] valor = jListFerias.getSelectedValue().split(":");
            java.awt.image.BufferedImage image = null;
            try {
                image = ImageIO.read(getClass().getResourceAsStream("Images/plus.png"));
            } catch (IOException ex) {
                Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (image != null) {
                javax.swing.ImageIcon icon = new javax.swing.ImageIcon(image);
                jButtonDefBreaksAdicionar.setIcon(icon);
            }
            jButtonDefBreaksAdicionar.setToolTipText(lingua.translate("Adicionar"));
            if (texto.equals(valor[0])) {
                jTextFieldDefBreaksNome.setText("");
                jButtonDefBreaksAdicionar.setEnabled(false);
                this.clearComboBoxDefBreaks();
            }
            jListFerias.clearSelection();
            jButtonDefBreakApagar.setEnabled(false);
        }

    }//GEN-LAST:event_jPanelDefBreaksMouseClicked

    private void jTextFieldDefBreaksNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDefBreaksNomeKeyReleased
        this.updatejTextFieldDefBreak();
    }//GEN-LAST:event_jTextFieldDefBreaksNomeKeyReleased

    private void updatejTextFieldDefBreak() {
        String nome = jTextFieldDefBreaksNome.getText().trim();
        int limite = 50;
        if (nome.length() < limite) {
            jTextFieldDefBreaksNome.setToolTipText(lingua.translate("Introduzir_um_nome_para_o_periodo_indicado"));
            Border borderg = BorderFactory.createLineBorder(Color.black, 1);
            Border borderf = BorderFactory.createEmptyBorder(0, 10, 0, 10);
            jTextFieldDefBreaksNome.setBorder(BorderFactory.createCompoundBorder(borderg, borderf));
            if (!jListFerias.isSelectionEmpty()) {
                String[] valor = jListFerias.getSelectedValue().split(":");
                if (valor[0].equals(nome)) {
                    java.awt.image.BufferedImage image = null;
                    try {
                        image = ImageIO.read(getClass().getResourceAsStream("Images/ok.png"));
                    } catch (IOException ex) {
                        Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (image != null) {
                        javax.swing.ImageIcon icon = new javax.swing.ImageIcon(image);
                        jButtonDefBreaksAdicionar.setIcon(icon);
                    }
                    jButtonDefBreaksAdicionar.setToolTipText(lingua.translate("Editar"));
                } else {
                    java.awt.image.BufferedImage image = null;
                    try {
                        image = ImageIO.read(getClass().getResourceAsStream("Images/plus.png"));
                    } catch (IOException ex) {
                        Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (image != null) {
                        javax.swing.ImageIcon icon = new javax.swing.ImageIcon(image);
                        jButtonDefBreaksAdicionar.setIcon(icon);
                    }
                    this.clearComboBoxDefBreaks();
                    jListFerias.clearSelection();
                    jButtonDefBreaksAdicionar.setToolTipText(lingua.translate("Adicionar"));
                    jButtonDefBreakApagar.setEnabled(false);
                }
            } else {
                DefaultListModel<String> modelo = (DefaultListModel<String>) jListFerias.getModel();
                String[] val;
                for (int i = 0; i < modelo.getSize(); i++) {
                    val = modelo.get(i).split(":");
                    if (val[0].equals(nome)) {
                        java.awt.image.BufferedImage image = null;
                        try {
                            image = ImageIO.read(getClass().getResourceAsStream("Images/ok.png"));
                        } catch (IOException ex) {
                            Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        if (image != null) {
                            javax.swing.ImageIcon icon = new javax.swing.ImageIcon(image);
                            jButtonDefBreaksAdicionar.setIcon(icon);
                        }
                        jButtonDefBreaksAdicionar.setToolTipText(lingua.translate("Editar"));
                        jListFerias.setSelectedIndex(i);
                        String dia = String.valueOf(intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getBeginDate().getDay());
                        int mes = intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getBeginDate().getMonth() - 1;
                        String ano = String.valueOf(intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getBeginDate().getYear());
                        jComboBoxDefBreaksDiaInicio.setSelectedItem(dia);
                        jComboBoxDefBreaksMesInicio.setSelectedIndex(mes);
                        jComboBoxDefBreaksAnoInicio.setSelectedItem(ano);
                        dia = String.valueOf(intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getEndDate().getDay());
                        mes = intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getEndDate().getMonth() - 1;
                        ano = String.valueOf(intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getEndDate().getYear());
                        jComboBoxDefBreaksDiaFim.setSelectedItem(dia);
                        jComboBoxDefBreaksMesFim.setSelectedIndex(mes);
                        jComboBoxDefBreaksAnoFim.setSelectedItem(ano);
                        jButtonDefBreakApagar.setEnabled(true);
                    }
                }
            }
            this.verifyValityofDates(nome, limite);
        } else {
            Border borderg = BorderFactory.createLineBorder(Color.red, 2);
            Border borderf = BorderFactory.createEmptyBorder(0, 10, 0, 10);
            jTextFieldDefBreaksNome.setBorder(BorderFactory.createCompoundBorder(borderg, borderf));
            jButtonDefBreaksAdicionar.setEnabled(false);
            jTextFieldDefBreaksNome.setToolTipText(lingua.translate("Texto_demasiado_grande(superior_a") + " " + limite + " " + lingua.translate("caracteres") + ").");
        }
    }
    private void jButtonDefBreaksAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefBreaksAdicionarActionPerformed
        if (jButtonDefBreaksAdicionar.isEnabled()) {
            String nome = jTextFieldDefBreaksNome.getText();
            String nome2 = "";
            if (jListFerias.getSelectedIndex() >= 0) {
                nome2 = intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).getName();
            }
            if ((!nome.equals(nome2)) && (!nome.equals(""))) {
                int dia = Integer.valueOf(jComboBoxDefBreaksDiaInicio.getSelectedItem().toString());
                int mes = jComboBoxDefBreaksMesInicio.getSelectedIndex() + 1;
                int ano = Integer.valueOf(jComboBoxDefBreaksAnoInicio.getSelectedItem().toString());
                TimeDate.Date dat1 = new TimeDate.Date(dia, mes, ano);
                dia = Integer.valueOf(jComboBoxDefBreaksDiaFim.getSelectedItem().toString());
                mes = jComboBoxDefBreaksMesFim.getSelectedIndex() + 1;
                ano = Integer.valueOf(jComboBoxDefBreaksAnoFim.getSelectedItem().toString());
                TimeDate.Date dat2 = new TimeDate.Date(dia, mes, ano);
                TimeDate.BreakPeriod br = new TimeDate.BreakPeriod(dat1, dat2, nome);
                intervalos.addBreakPeriod(br);
                this.drawBreaksList();
                jTextFieldDefBreaksNome.setText("");
                jButtonDefBreaksAdicionar.setEnabled(false);
                jButtonDefBreakApagar.setEnabled(false);
                this.clearComboBoxDefBreaks();
            } else if (nome.equals(nome2)) {
                int dia = Integer.valueOf(jComboBoxDefBreaksDiaInicio.getSelectedItem().toString());
                int mes = jComboBoxDefBreaksMesInicio.getSelectedIndex() + 1;
                int ano = Integer.valueOf(jComboBoxDefBreaksAnoInicio.getSelectedItem().toString());
                TimeDate.Date date1 = new TimeDate.Date(dia, mes, ano);
                dia = Integer.valueOf(jComboBoxDefBreaksDiaFim.getSelectedItem().toString());
                mes = jComboBoxDefBreaksMesFim.getSelectedIndex() + 1;
                ano = Integer.valueOf(jComboBoxDefBreaksAnoFim.getSelectedItem().toString());
                TimeDate.Date date2 = new TimeDate.Date(dia, mes, ano);
                intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).setBeginDate(date1);
                intervalos.getBreakPeriodList().get(jListFerias.getSelectedIndex()).setEndDate(date2);
                this.clearComboBoxDefBreaks();
                java.awt.image.BufferedImage image = null;
                try {
                    image = ImageIO.read(getClass().getResourceAsStream("Images/plus.png"));
                } catch (IOException ex) {
                    Logger.getLogger(ImageAux.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (image != null) {
                    javax.swing.ImageIcon icon = new javax.swing.ImageIcon(image);
                    jButtonDefBreaksAdicionar.setIcon(icon);
                }
                jButtonDefBreaksAdicionar.setToolTipText(lingua.translate("Adicionar"));
                jTextFieldDefBreaksNome.setText("");
                jButtonDefBreakApagar.setEnabled(false);
                this.drawBreaksList();
            }
        }
    }//GEN-LAST:event_jButtonDefBreaksAdicionarActionPerformed

    private void clearComboBoxDefBreaks() {
        jComboBoxDefBreaksDiaInicio.setSelectedItem("1");
        jComboBoxDefBreaksMesInicio.setSelectedIndex(0);
        jComboBoxDefBreaksAnoInicio.setSelectedIndex(50);
        jComboBoxDefBreaksDiaFim.setSelectedItem("1");
        jComboBoxDefBreaksMesFim.setSelectedIndex(0);
        jComboBoxDefBreaksAnoFim.setSelectedIndex(50);
    }
    private void jTextFieldDefBreaksNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDefBreaksNomeFocusGained
        jTextFieldDefBreaksNome.setBackground(new Color(250, 250, 250));
    }//GEN-LAST:event_jTextFieldDefBreaksNomeFocusGained

    private void jTextFieldDefBreaksNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDefBreaksNomeFocusLost
        jTextFieldDefBreaksNome.setBackground(new Color(210, 214, 221));
    }//GEN-LAST:event_jTextFieldDefBreaksNomeFocusLost

    private void jListFeriadosEscolhidosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListFeriadosEscolhidosValueChanged
        if (!jListFeriadosEscolhidos.isSelectionEmpty()) {
            jButtonDefHolidaysApagar.setEnabled(true);
        } else {
            jButtonDefHolidaysApagar.setEnabled(false);
        }
    }//GEN-LAST:event_jListFeriadosEscolhidosValueChanged

    private void jListFeriadosEscolhidosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jListFeriadosEscolhidosKeyPressed
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_DELETE:
                if (jButtonDefHolidaysApagar.isEnabled()) {
                    jButtonDefHolidaysApagar.doClick();
                }
                break;
            case KeyEvent.VK_ENTER:
                this.mostrajListFeriadosMensagem();
                break;
            case KeyEvent.VK_ESCAPE:
                jButtonDefHolidaysApagar.setEnabled(false);
                jListFeriadosEscolhidos.clearSelection();
                jListFeriadosDefeito.clearSelection();
                break;
            default:
                break;
        }
    }//GEN-LAST:event_jListFeriadosEscolhidosKeyPressed

    private void jListFeriadosEscolhidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListFeriadosEscolhidosMouseClicked
        if (!jListFeriadosEscolhidos.isSelectionEmpty()) {
            jButtonDefHolidaysApagar.setEnabled(true);
            if (evt.getClickCount() == 2) {
                this.mostrajListFeriadosMensagem();
            }
        } else {
            jButtonDefHolidaysApagar.setEnabled(false);
        }
    }//GEN-LAST:event_jListFeriadosEscolhidosMouseClicked

    private void jSplitPaneInicialComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jSplitPaneInicialComponentMoved

    }//GEN-LAST:event_jSplitPaneInicialComponentMoved


    private void jButtonAtualizarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtualizarListaActionPerformed
        Keys.TypeOfMaterial mat = tiposmateriais.get(jComboBoxListaBotoes.getSelectedIndex());
        this.calculateList(mat);

    }//GEN-LAST:event_jButtonAtualizarListaActionPerformed

    private void jButtonConfirmaDevolucaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmaDevolucaoActionPerformed
        DataBase.DataBase db = new DataBase.DataBase(urlbd);
        Keys.Request req = lista_dev.getSelectedRequest();
        if (req != null) {
            java.util.Set<Keys.Request> lista = lista_dev.getRequestList().getDifferentUnionRequest(req);
            if (lista.size() > 0) {
                lista.stream().forEach((l) -> {
                    db.changeRequestTerminateState(l);
                });
            } else {
                db.changeRequestTerminateState(req);
            }
            lista_dev.removeSelectedRequest();
            lista_req.getTable().clearSelection();
            jButtonAtuacaoAltera.setEnabled(false);
            jButtonAtuacaoConfirma.setEnabled(false);
        }
        db.close();
    }//GEN-LAST:event_jButtonConfirmaDevolucaoActionPerformed

    private void jTextFieldProcuraBaixoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldProcuraBaixoFocusGained
        jTextFieldProcuraBaixo.setText("");
        if (tema.equals("claro")) {
            jTextFieldProcuraBaixo.setForeground(new Color(1, 1, 1));
        } else {
            jTextFieldProcuraBaixo.setForeground(new Color(254, 254, 254));
        }
    }//GEN-LAST:event_jTextFieldProcuraBaixoFocusGained

    private void jTextFieldProcuraBaixoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldProcuraBaixoFocusLost
        if (jTextFieldProcuraBaixo.getText().equals("")) {
            jTextFieldProcuraBaixo.setForeground(new Color(201, 201, 201));
            jTextFieldProcuraBaixo.setText(lingua.translate(spesquisa[1]) + " ... ");
        }
    }//GEN-LAST:event_jTextFieldProcuraBaixoFocusLost

    private void jTextFieldProcuraBaixoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldProcuraBaixoKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            if (jTextFieldProcuraBaixo.getText().equals("")) {
                this.requestFocusInWindow();
                if (lista_dev.isResultOfASearch()) {
                    lista_dev.destroySearch();
                    lista_dev.addTimerColors();
                    lista_dev.startTimerColors();
                    jLabelTituloDevolucoes.setText(lingua.translate("lista_devolucoes"));
                    if (jLabelLimpaPesquisaBaixo != null) {
                        jLabelLimpaPesquisaBaixo.setVisible(false);
                    }
                }
                jTextFieldProcuraBaixo.setForeground(new Color(201, 201, 201));
                jTextFieldProcuraBaixo.setText(lingua.translate(spesquisa[1]) + " ... ");

            } else if (pesquisa == 2) {
                String aux = jTextFieldProcuraBaixo.getText();
                if (aux.matches("^\\d*\\d[:/]*\\d*\\d[:/]*\\d*\\d*")) {
                    aux = aux.replace("/", ":");
                    String[] auxilia = aux.split(":");
                    int horas;
                    int minutos;
                    int segundos;
                    if (auxilia.length < 2) {
                        if ((auxilia[0].charAt(0) == '0') && (auxilia[0].length() > 1)) {
                            auxilia[0] = auxilia[0].replaceFirst("0", "");
                        }
                        horas = Integer.valueOf(auxilia[0]);
                        minutos = 0;
                        segundos = 0;
                    } else if (auxilia.length < 3) {
                        if ((auxilia[0].charAt(0) == '0') && (auxilia[0].length() > 1)) {
                            auxilia[0] = auxilia[0].replaceFirst("0", "");
                        }
                        if ((auxilia[1].charAt(0) == '0') && (auxilia[1].length() > 1)) {
                            auxilia[1] = auxilia[1].replaceFirst("0", "");
                        }
                        horas = Integer.valueOf(auxilia[0]);
                        minutos = Integer.valueOf(auxilia[1]);
                        segundos = 0;
                    } else if (auxilia.length <= 3) {
                        if ((auxilia[0].charAt(0) == '0') && (auxilia[0].length() > 1)) {
                            auxilia[0] = auxilia[0].replaceFirst("0", "");
                        }
                        if ((auxilia[1].charAt(0) == '0') && (auxilia[1].length() > 1)) {
                            auxilia[1] = auxilia[1].replaceFirst("0", "");
                        }
                        if ((auxilia[2].charAt(0) == '0') && (auxilia[2].length() > 1)) {
                            auxilia[2] = auxilia[2].replaceFirst("0", "");
                        }
                        horas = Integer.valueOf(auxilia[0]);
                        minutos = Integer.valueOf(auxilia[1]);
                        segundos = Integer.valueOf(auxilia[2]);
                    } else {
                        horas = 24;
                        minutos = 60;
                        segundos = 60;
                    }
                    if ((horas < 24) && (minutos < 60) && (segundos < 60)) {
                        this.requestFocusInWindow();
                        if (ligacao) {
                            lista_dev.serchByTime(true, new TimeDate.Time(horas, minutos, segundos));
                            jLabelTituloDevolucoes.setText(lingua.translate("Resultado da pesquisa realizada"));
                            jLabelLimpaPesquisaBaixo.setVisible(true);
                        }
                        jTextFieldProcuraBaixo.setForeground(new Color(201, 201, 201));
                        jTextFieldProcuraBaixo.setText(lingua.translate(spesquisa[1]) + " ... ");
                    }
                } else {
                    this.requestFocusInWindow();
                    jTextFieldProcuraBaixo.setForeground(new Color(201, 201, 201));
                    jTextFieldProcuraBaixo.setText(lingua.translate(spesquisa[1]) + " ... ");
                    jLabelLimpaPesquisaBaixo.setVisible(false);
                    jLabelTituloDevolucoes.setText(lingua.translate("lista_devolucoes"));
                    if (lista_dev.isResultOfASearch()) {
                        lista_dev.destroySearch();
                        lista_dev.addTimerColors();
                        lista_dev.startTimerColors();
                    }
                }
            } else {
                this.requestFocusInWindow();
                if (ligacao) {
                    lista_dev.serchBy(pesquisa, jTextFieldProcuraBaixo.getText());
                    jLabelTituloDevolucoes.setText(lingua.translate("Resultado da pesquisa realizada"));
                    jLabelLimpaPesquisaBaixo.setVisible(true);
                }
                jTextFieldProcuraBaixo.setForeground(new Color(201, 201, 201));
                jTextFieldProcuraBaixo.setText(lingua.translate(spesquisa[1]) + " ... ");
            }
        } else if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ESCAPE) {
            this.requestFocusInWindow();
            if (lista_dev.isResultOfASearch()) {
                lista_dev.destroySearch();
                lista_dev.addTimerColors();
                lista_dev.startTimerColors();
                jLabelTituloDevolucoes.setText(lingua.translate("lista_devolucoes"));
                if (jLabelLimpaPesquisaBaixo != null) {
                    jLabelLimpaPesquisaBaixo.setVisible(false);
                }
            }
            jTextFieldProcuraBaixo.setForeground(new Color(201, 201, 201));
            jTextFieldProcuraBaixo.setText(lingua.translate(spesquisa[1]) + " ... ");

        }
    }//GEN-LAST:event_jTextFieldProcuraBaixoKeyPressed

    private void jButtonProcuraBaixoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProcuraBaixoActionPerformed
        if ((!jTextFieldProcuraBaixo.getText().equals("")) && (!jTextFieldProcuraBaixo.getText().equals(lingua.translate(spesquisa[1]) + " ... "))) {
            if (pesquisa == 2) {
                String aux = jTextFieldProcuraBaixo.getText();
                if (aux.matches("^\\d*\\d[:/]*\\d*\\d[:/]*\\d*\\d*")) {
                    aux = aux.replace("/", ":");
                    String[] auxilia = aux.split(":");
                    int horas;
                    int minutos;
                    int segundos;
                    if (auxilia.length < 2) {
                        if ((auxilia[0].charAt(0) == '0') && (auxilia[0].length() > 1)) {
                            auxilia[0] = auxilia[0].replaceFirst("0", "");
                        }
                        horas = Integer.valueOf(auxilia[0]);
                        minutos = 0;
                        segundos = 0;
                    } else if (auxilia.length < 3) {
                        if ((auxilia[0].charAt(0) == '0') && (auxilia[0].length() > 1)) {
                            auxilia[0] = auxilia[0].replaceFirst("0", "");
                        }
                        if ((auxilia[1].charAt(0) == '0') && (auxilia[1].length() > 1)) {
                            auxilia[1] = auxilia[1].replaceFirst("0", "");
                        }
                        horas = Integer.valueOf(auxilia[0]);
                        minutos = Integer.valueOf(auxilia[1]);
                        segundos = 0;
                    } else if (auxilia.length <= 3) {
                        if ((auxilia[0].charAt(0) == '0') && (auxilia[0].length() > 1)) {
                            auxilia[0] = auxilia[0].replaceFirst("0", "");
                        }
                        if ((auxilia[1].charAt(0) == '0') && (auxilia[1].length() > 1)) {
                            auxilia[1] = auxilia[1].replaceFirst("0", "");
                        }
                        if ((auxilia[2].charAt(0) == '0') && (auxilia[2].length() > 1)) {
                            auxilia[2] = auxilia[2].replaceFirst("0", "");
                        }
                        horas = Integer.valueOf(auxilia[0]);
                        minutos = Integer.valueOf(auxilia[1]);
                        segundos = Integer.valueOf(auxilia[2]);
                    } else {
                        horas = 24;
                        minutos = 60;
                        segundos = 60;
                    }
                    if ((horas < 24) && (minutos < 60) && (segundos < 60)) {
                        this.requestFocusInWindow();
                        if (ligacao) {
                            lista_dev.serchByTime(true, new TimeDate.Time(horas, minutos, segundos));
                            jLabelTituloDevolucoes.setText(lingua.translate("Resultado da pesquisa realizada"));
                            jLabelLimpaPesquisaBaixo.setVisible(true);
                        }
                        jTextFieldProcuraBaixo.setForeground(new Color(201, 201, 201));
                        jTextFieldProcuraBaixo.setText(lingua.translate(spesquisa[1]) + " ... ");
                    }
                } else {
                    this.requestFocusInWindow();
                    jTextFieldProcuraBaixo.setForeground(new Color(201, 201, 201));
                    jTextFieldProcuraBaixo.setText(lingua.translate(spesquisa[1]) + " ... ");
                    jLabelLimpaPesquisaBaixo.setVisible(false);
                    jLabelTituloDevolucoes.setText(lingua.translate("lista_devolucoes"));
                    if (lista_dev.isResultOfASearch()) {
                        lista_dev.destroySearch();
                        lista_dev.addTimerColors();
                        lista_dev.startTimerColors();
                    }
                }
            } else {
                this.requestFocusInWindow();
                if (ligacao) {
                    lista_dev.serchBy(pesquisa, jTextFieldProcuraBaixo.getText());
                    jLabelTituloDevolucoes.setText(lingua.translate("Resultado da pesquisa realizada"));
                    jLabelLimpaPesquisaBaixo.setVisible(true);
                }
                jTextFieldProcuraBaixo.setForeground(new Color(201, 201, 201));
                jTextFieldProcuraBaixo.setText(lingua.translate(spesquisa[1]) + " ... ");
            }
        } else if (jTextFieldProcuraBaixo.getText().equals(spesquisa[1] + " ... ")) {
            this.requestFocusInWindow();
            lista_dev.destroySearch();
            lista_dev.addTimerColors();
            lista_dev.startTimerColors();
            jTextFieldProcuraBaixo.setForeground(new Color(201, 201, 201));
            jTextFieldProcuraBaixo.setText(lingua.translate(spesquisa[1]) + " ... ");
            jLabelTituloDevolucoes.setText(lingua.translate("lista_devolucoes"));
            if (jLabelLimpaPesquisaBaixo != null) {
                jLabelLimpaPesquisaBaixo.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButtonProcuraBaixoActionPerformed

    private void jButtonListaBotoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListaBotoesActionPerformed
        if (requisicoes.isConnected()) {
            jTabbedPaneMaterialBotoes.removeAll();
            btrequests = new ButtonListRequest(urlbd, jDialogListaBotoes, requisicoes, urlbd, lingua, jTabbedPaneMaterialBotoes, 2, systemColor);
            jTabbedPaneMaterialBotoes.add(lingua.translate("Todos"), btrequests.getScrollPane());
            btrequests = new ButtonListRequest(urlbd, jDialogListaBotoes, requisicoes, urlbd, lingua, jTabbedPaneMaterialBotoes, 0, systemColor);
            jTabbedPaneMaterialBotoes.add(lingua.translate("Livres"), btrequests.getScrollPane());
            btrequests = new ButtonListRequest(urlbd, jDialogListaBotoes, requisicoes, urlbd, lingua, jTabbedPaneMaterialBotoes, 1, systemColor);
            jTabbedPaneMaterialBotoes.add(lingua.translate("Ocupados"), btrequests.getScrollPane());

            jDialogListaBotoes.setVisible(true);
            jDialogListaBotoes.setLocationRelativeTo(this);
        }
    }//GEN-LAST:event_jButtonListaBotoesActionPerformed

    private void jComboBoxListaBotoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxListaBotoesActionPerformed
        if (tiposmateriais.size() > 0) {
            tipomaterial = tiposmateriais.get(jComboBoxListaBotoes.getSelectedIndex());
            if (requisicoes != null) {
                if (!requisicoes.getTypeOfMaterial().equals(tipomaterial)) {
                    if (prefs != null) {
                        prefs.save();
                    }
                    this.calculateList(tipomaterial);
                    jLabelLimpaPesquisaCima.setVisible(false);
                    this.requestFocusInWindow();
                    jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
                    jTextFieldProcuraCima.setText(lingua.translate(spesquisa[0]) + " ... ");
                    jLabelLimpaPesquisaBaixo.setVisible(false);
                    jTextFieldProcuraBaixo.setForeground(new Color(201, 201, 201));
                    jTextFieldProcuraBaixo.setText(lingua.translate(spesquisa[1]) + " ... ");
                    jLabelTitulorequisicoes.setText(lingua.translate("Lista_de_requisi√ß√µes"));
                    jLabelTituloDevolucoes.setText(lingua.translate("lista_devolucoes"));
                }
            }
        }
    }//GEN-LAST:event_jComboBoxListaBotoesActionPerformed

    private void jComboBoxVistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxVistaActionPerformed
        int val = jComboBoxVista.getSelectedIndex();
        boolean condicao = false;
        if (val != vista) {
            vista = val;
            condicao = true;
        }
        if ((tiposmateriais.size() > 0) && (condicao)) {
            Keys.TypeOfMaterial mat = tiposmateriais.get(jComboBoxListaBotoes.getSelectedIndex());
            vista = val;
            this.requisicoes.setView(vista);
            this.calculateList(mat);
            jLabelLimpaPesquisaCima.setVisible(false);
            this.requestFocusInWindow();
            jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
            jTextFieldProcuraCima.setText(lingua.translate(spesquisa[0]) + " ... ");
            jLabelLimpaPesquisaBaixo.setVisible(false);
            this.requestFocusInWindow();
            jTextFieldProcuraBaixo.setForeground(new Color(201, 201, 201));
            jTextFieldProcuraBaixo.setText(lingua.translate(spesquisa[1]) + " ... ");
            jLabelTitulorequisicoes.setText(lingua.translate("Lista_de_requisi√ß√µes"));
            jLabelTituloDevolucoes.setText(lingua.translate("lista_devolucoes"));
        }
    }//GEN-LAST:event_jComboBoxVistaActionPerformed

    private void jToggleButtonBarEntregasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonBarEntregasActionPerformed
        if (jToggleButtonBarEntregas.isSelected()) {
            if (auxiliar.isAlive()) {
                Threads.EfectsOnDivisor ev = (Threads.EfectsOnDivisor) auxiliar;
                ev.setCondition(false);
            }
            auxiliar = new Threads.EfectsOnDivisor(jSplitPaneInicial, 0);
            auxiliar.start();
            jToggleButtonBarRequisicoes.setSelected(false);
            bitpagina[0] = 0;
            bitpagina[1] = 1;
        } else {
            bitpagina[0] = 0;
            bitpagina[0] = 0;
            if (auxiliar.isAlive()) {
                Threads.EfectsOnDivisor ev = (Threads.EfectsOnDivisor) auxiliar;
                ev.setCondition(false);
            } else {
                auxiliar = new Threads.EfectsOnDivisor(jSplitPaneInicial, 0.5);
                jToggleButtonBarRequisicoes.setSelected(false);
                jToggleButtonBarEntregas.setSelected(false);
                auxiliar.start();
            }
        }
    }//GEN-LAST:event_jToggleButtonBarEntregasActionPerformed

    private void jToggleButtonBarRequisicoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonBarRequisicoesActionPerformed
        if (jToggleButtonBarRequisicoes.isSelected()) {
            if (auxiliar.isAlive()) {
                Threads.EfectsOnDivisor ev = (Threads.EfectsOnDivisor) auxiliar;
                ev.setCondition(false);
            }
            auxiliar = new Threads.EfectsOnDivisor(jSplitPaneInicial, jSplitPaneInicial.getWidth());
            auxiliar.start();
            jToggleButtonBarEntregas.setSelected(false);
            bitpagina[0] = 1;
            bitpagina[1] = 0;
        } else {
            bitpagina[0] = 0;
            bitpagina[1] = 0;
            if (auxiliar.isAlive()) {
                Threads.EfectsOnDivisor ev = (Threads.EfectsOnDivisor) auxiliar;
                ev.setCondition(false);
            } else {
                auxiliar = new Threads.EfectsOnDivisor(jSplitPaneInicial, 0.5);
                jToggleButtonBarRequisicoes.setSelected(false);
                jToggleButtonBarEntregas.setSelected(false);
                auxiliar.start();
            }
        }
    }//GEN-LAST:event_jToggleButtonBarRequisicoesActionPerformed

    private void jComboBoxPesquisaOpcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPesquisaOpcaoActionPerformed
        if (jComboBoxPesquisaOpcao.getSelectedIndex() != pesquisa) {
            pesquisa = jComboBoxPesquisaOpcao.getSelectedIndex();
            this.requestFocusInWindow();
            this.defineSearchString();
            if ((lista_req.isResultOfASearch()) || (lista_dev.isResultOfASearch())) {
                this.calculateList(requisicoes.getTypeOfMaterial());
            }
            jLabelLimpaPesquisaCima.setVisible(false);
            jLabelLimpaPesquisaBaixo.setVisible(false);
            prefs.save();
            switch (pesquisa) {
                case 1:
                    jTextFieldProcuraCima.setForeground(new java.awt.Color(201, 201, 201));
                    jTextFieldProcuraCima.setText(spesquisa[0] + " ... ");
                    jTextFieldProcuraBaixo.setForeground(new java.awt.Color(201, 201, 201));
                    jTextFieldProcuraBaixo.setText(spesquisa[1] + " ... ");
                    jButtonProcuraCima.setToolTipText(lingua.translate("Pesquisa por") + " " + spesquisa[0].toLowerCase());
                    jButtonProcuraBaixo.setToolTipText(lingua.translate("Pesquisa por") + " " + spesquisa[1].toLowerCase());
                    jTextFieldProcuraCima.setToolTipText(null);
                    break;
                case 2:
                    jTextFieldProcuraCima.setForeground(new java.awt.Color(201, 201, 201));
                    jTextFieldProcuraCima.setText(spesquisa[0] + " ... ");
                    jTextFieldProcuraBaixo.setForeground(new java.awt.Color(201, 201, 201));
                    jTextFieldProcuraBaixo.setText(spesquisa[1] + " ... ");
                    jButtonProcuraCima.setToolTipText(lingua.translate("Pesquisa por") + " " + spesquisa[0].toLowerCase());
                    jButtonProcuraBaixo.setToolTipText(lingua.translate("Pesquisa por") + " " + spesquisa[1].toLowerCase());
                    jTextFieldProcuraCima.setToolTipText(lingua.translate("Formato") + ": hh24:mm:ss");
                    jTextFieldProcuraBaixo.setToolTipText(lingua.translate("Formato") + ": hh24:mm:ss");
                    break;
                default:
                    jTextFieldProcuraCima.setForeground(new java.awt.Color(201, 201, 201));
                    jTextFieldProcuraCima.setText(spesquisa[0] + " ... ");
                    jTextFieldProcuraBaixo.setForeground(new java.awt.Color(201, 201, 201));
                    jTextFieldProcuraBaixo.setText(spesquisa[1] + " ... ");
                    jButtonProcuraCima.setToolTipText(lingua.translate("Pesquisa por") + " " + spesquisa[0].toLowerCase());
                    jButtonProcuraBaixo.setToolTipText(lingua.translate("Pesquisa por") + " " + spesquisa[1].toLowerCase());
                    jTextFieldProcuraCima.setToolTipText(null);
                    break;
            }
            jTextFieldProcuraCima.setCaretPosition(0);
            jTextFieldProcuraBaixo.setCaretPosition(0);

            jLabelTitulorequisicoes.setText(lingua.translate("Lista_de_requisi√ß√µes"));
            jLabelTituloDevolucoes.setText(lingua.translate("lista_devolucoes"));
        }
    }//GEN-LAST:event_jComboBoxPesquisaOpcaoActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        if (jToggleButton1.isSelected()) {
            if (!scrollAtivo) {
                this.startScroll();
                jComboBoxScrollAtivo.setSelectedIndex(0);
            }
        } else {
            this.stopScroll();
            jComboBoxScrollAtivo.setSelectedIndex(1);
        }

    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jDialogListaBotoesWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialogListaBotoesWindowClosing
        Window[] windows = Window.getWindows();

        for (int i = 0; i < windows.length; i++) {
            if (windows[i] instanceof ActionButton) {
                windows[i].setVisible(false);
                windows[i].dispose();
            }
        }

    }//GEN-LAST:event_jDialogListaBotoesWindowClosing

    private void jPanelCimaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelCimaMouseClicked
        if (evt.getClickCount() == 2) {
            if (auxiliar.isAlive()) {
                Threads.EfectsOnDivisor ev = (Threads.EfectsOnDivisor) auxiliar;
                ev.setCondition(false);
            }
            auxiliar = new Threads.EfectsOnDivisor(jSplitPaneInicial, jSplitPaneInicial.getWidth());
            auxiliar.start();
            jToggleButtonBarRequisicoes.setSelected(true);
            jToggleButtonBarEntregas.setSelected(false);
            bitpagina[0] = 1;
            bitpagina[1] = 0;
        }

    }//GEN-LAST:event_jPanelCimaMouseClicked

    private void jButtonProcuraCimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProcuraCimaActionPerformed
        if ((!jTextFieldProcuraCima.getText().equals("")) && (!jTextFieldProcuraCima.getText().equals(lingua.translate(spesquisa[0]) + " ... "))) {
            if (pesquisa == 2) {
                String aux = jTextFieldProcuraCima.getText();
                if (aux.matches("^\\d*\\d[:/]*\\d*\\d[:/]*\\d*\\d*")) {
                    aux = aux.replace("/", ":");
                    String[] auxilia = aux.split(":");
                    int horas;
                    int minutos;
                    int segundos;
                    if (auxilia.length < 2) {
                        if ((auxilia[0].charAt(0) == '0') && (auxilia[0].length() > 1)) {
                            auxilia[0] = auxilia[0].replaceFirst("0", "");
                        }
                        horas = Integer.valueOf(auxilia[0]);
                        minutos = 0;
                        segundos = 0;
                    } else if (auxilia.length < 3) {
                        if ((auxilia[0].charAt(0) == '0') && (auxilia[0].length() > 1)) {
                            auxilia[0] = auxilia[0].replaceFirst("0", "");
                        }
                        if ((auxilia[1].charAt(0) == '0') && (auxilia[1].length() > 1)) {
                            auxilia[1] = auxilia[1].replaceFirst("0", "");
                        }
                        horas = Integer.valueOf(auxilia[0]);
                        minutos = Integer.valueOf(auxilia[1]);
                        segundos = 0;
                    } else if (auxilia.length <= 3) {
                        if ((auxilia[0].charAt(0) == '0') && (auxilia[0].length() > 1)) {
                            auxilia[0] = auxilia[0].replaceFirst("0", "");
                        }
                        if ((auxilia[1].charAt(0) == '0') && (auxilia[1].length() > 1)) {
                            auxilia[1] = auxilia[1].replaceFirst("0", "");
                        }
                        if ((auxilia[2].charAt(0) == '0') && (auxilia[2].length() > 1)) {
                            auxilia[2] = auxilia[2].replaceFirst("0", "");
                        }
                        horas = Integer.valueOf(auxilia[0]);
                        minutos = Integer.valueOf(auxilia[1]);
                        segundos = Integer.valueOf(auxilia[2]);
                    } else {
                        horas = 24;
                        minutos = 60;
                        segundos = 60;
                    }
                    if ((horas < 24) && (minutos < 60) && (segundos < 60)) {
                        this.requestFocusInWindow();
                        if (ligacao) {
                            lista_req.serchByTime(false, new TimeDate.Time(horas, minutos, segundos));
                            jLabelTitulorequisicoes.setText(lingua.translate("Resultado da pesquisa realizada"));
                            jLabelLimpaPesquisaCima.setVisible(true);
                        }
                        jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
                        jTextFieldProcuraCima.setText(lingua.translate(spesquisa[0]) + " ... ");
                    }
                } else {
                    this.requestFocusInWindow();
                    jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
                    jTextFieldProcuraCima.setText(lingua.translate(spesquisa[0]) + " ... ");
                    jLabelLimpaPesquisaCima.setVisible(false);
                    jLabelTitulorequisicoes.setText(lingua.translate("Lista_de_requisi√ß√µes"));
                    if (lista_req.isResultOfASearch()) {
                        lista_req.destroySearch();
                        lista_req.addTimerColors();
                        lista_req.startTimerColors();
                    }
                }
            } else {
                this.requestFocusInWindow();
                if (ligacao) {
                    lista_req.serchBy(pesquisa, jTextFieldProcuraCima.getText());
                    jLabelTitulorequisicoes.setText(lingua.translate("Resultado da pesquisa realizada"));
                    jLabelLimpaPesquisaCima.setVisible(true);
                }
                jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
                jTextFieldProcuraCima.setText(lingua.translate(spesquisa[0]) + " ... ");
            }
        } else if (jTextFieldProcuraCima.getText().equals(lingua.translate(spesquisa[0]) + " ... ")) {
            this.requestFocusInWindow();
            lista_req.destroySearch();
            lista_req.addTimerColors();
            lista_req.startTimerColors();
            jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
            jTextFieldProcuraCima.setText(lingua.translate(spesquisa[0]) + " ... ");
            jLabelTitulorequisicoes.setText(lingua.translate("Lista_de_requisi√ß√µes"));
            if (jLabelLimpaPesquisaCima != null) {
                jLabelLimpaPesquisaCima.setVisible(false);
            }
        }
    }//GEN-LAST:event_jButtonProcuraCimaActionPerformed

    private void jTextFieldProcuraCimaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldProcuraCimaKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            if (jTextFieldProcuraCima.getText().equals("")) {
                this.requestFocusInWindow();
                if (lista_req.isResultOfASearch()) {
                    lista_req.destroySearch();
                    lista_req.addTimerColors();
                    lista_req.startTimerColors();
                    jLabelTitulorequisicoes.setText(lingua.translate("Lista_de_requisi√ß√µes"));
                    if (jLabelLimpaPesquisaCima != null) {
                        jLabelLimpaPesquisaCima.setVisible(false);
                    }
                }
                jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
                jTextFieldProcuraCima.setText(lingua.translate(spesquisa[0]) + " ... ");
            } else {
                String aux = jTextFieldProcuraCima.getText();
                if (pesquisa == 2) {
                    if (aux.matches("^\\d*\\d[:/]*\\d*\\d*[:/]*\\d*\\d*")) {
                        aux = aux.replace("/", ":");
                        String[] auxilia = aux.split(":");
                        int horas;
                        int minutos;
                        int segundos;
                        if (auxilia.length < 2) {
                            if ((auxilia[0].charAt(0) == '0') && (auxilia[0].length() > 1)) {
                                auxilia[0] = auxilia[0].replaceFirst("0", "");
                            }
                            horas = Integer.valueOf(auxilia[0]);
                            minutos = 0;
                            segundos = 0;
                        } else if (auxilia.length < 3) {
                            if ((auxilia[0].charAt(0) == '0') && (auxilia[0].length() > 1)) {
                                auxilia[0] = auxilia[0].replaceFirst("0", "");
                            }
                            if ((auxilia[1].charAt(0) == '0') && (auxilia[1].length() > 1)) {
                                auxilia[1] = auxilia[1].replaceFirst("0", "");
                            }
                            horas = Integer.valueOf(auxilia[0]);
                            minutos = Integer.valueOf(auxilia[1]);
                            segundos = 0;
                        } else if (auxilia.length <= 3) {
                            if ((auxilia[0].charAt(0) == '0') && (auxilia[0].length() > 1)) {
                                auxilia[0] = auxilia[0].replaceFirst("0", "");
                            }
                            if ((auxilia[1].charAt(0) == '0') && (auxilia[1].length() > 1)) {
                                auxilia[1] = auxilia[1].replaceFirst("0", "");
                            }
                            if ((auxilia[2].charAt(0) == '0') && (auxilia[2].length() > 1)) {
                                auxilia[2] = auxilia[2].replaceFirst("0", "");
                            }
                            horas = Integer.valueOf(auxilia[0]);
                            minutos = Integer.valueOf(auxilia[1]);
                            segundos = Integer.valueOf(auxilia[2]);
                        } else {
                            horas = 24;
                            minutos = 60;
                            segundos = 60;
                        }
                        if ((horas < 24) && (minutos < 60) && (segundos < 60)) {
                            this.requestFocusInWindow();
                            if (ligacao) {
                                lista_req.serchByTime(false, new TimeDate.Time(horas, minutos, segundos));
                                jLabelTitulorequisicoes.setText(lingua.translate("Resultado da pesquisa realizada"));
                                jLabelLimpaPesquisaCima.setVisible(true);
                            }
                            jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
                            jTextFieldProcuraCima.setText(lingua.translate(spesquisa[0]) + " ... ");
                        }
                    } else {
                        this.requestFocusInWindow();
                        jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
                        jTextFieldProcuraCima.setText(lingua.translate(spesquisa[0]) + " ... ");
                        jLabelLimpaPesquisaCima.setVisible(false);
                        jLabelTitulorequisicoes.setText(lingua.translate("Lista_de_requisi√ß√µes"));
                        if (lista_req.isResultOfASearch()) {
                            lista_req.destroySearch();
                            lista_req.addTimerColors();
                            lista_req.startTimerColors();
                        }

                    }
                } else {
                    this.requestFocusInWindow();
                    if (ligacao) {
                        lista_req.serchBy(pesquisa, aux);
                        jLabelTitulorequisicoes.setText(lingua.translate("Resultado da pesquisa realizada"));
                        jLabelLimpaPesquisaCima.setVisible(true);
                    }
                    jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
                    jTextFieldProcuraCima.setText(lingua.translate(spesquisa[0]) + " ... ");
                }
            }
        } else if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ESCAPE) {
            this.requestFocusInWindow();
            if (lista_req.isResultOfASearch()) {
                lista_req.destroySearch();
                lista_req.addTimerColors();
                lista_req.startTimerColors();
                if (jLabelLimpaPesquisaCima != null) {
                    jLabelLimpaPesquisaCima.setVisible(false);
                }
                jLabelTitulorequisicoes.setText(lingua.translate("Lista_de_requisi√ß√µes"));
            }
            jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
            jTextFieldProcuraCima.setText(lingua.translate(spesquisa[0]) + " ... ");

        }
    }//GEN-LAST:event_jTextFieldProcuraCimaKeyPressed

    private void jTextFieldProcuraCimaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldProcuraCimaFocusLost
        if (jTextFieldProcuraCima.getText().equals("")) {
            jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
            jTextFieldProcuraCima.setText(lingua.translate(spesquisa[0]) + " ... ");
        }
    }//GEN-LAST:event_jTextFieldProcuraCimaFocusLost

    private void jTextFieldProcuraCimaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldProcuraCimaFocusGained
        if (jTextFieldProcuraCima.getText().equals(lingua.translate(spesquisa[0]) + " ... ")) {
            jTextFieldProcuraCima.setText("");
            if (tema.equals("claro")) {
                jTextFieldProcuraCima.setForeground(new Color(1, 1, 1));
            } else {
                jTextFieldProcuraCima.setForeground(new Color(254, 254, 254));
            }
        }
    }//GEN-LAST:event_jTextFieldProcuraCimaFocusGained

    private void jButtonAtuacaoAlteraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtuacaoAlteraActionPerformed
        lista_req.setPanelColor(Color.GRAY, Color.BLACK);
        this.tdivisor = 20;
        prefs.save();
        this.jSplitPaneInicial.setDividerSize(tdivisor);
    }//GEN-LAST:event_jButtonAtuacaoAlteraActionPerformed

    private void jButtonAtuacaoConfirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtuacaoConfirmaActionPerformed
        DataBase.DataBase db = new DataBase.DataBase(urlbd);
        Keys.Request req = lista_req.getSelectedRequest();
        if (req != null) {
            java.util.Set<Keys.Request> lista = lista_req.getRequestList().getDifferentUnionRequest(req);
            if (lista.size() > 0) {
                lista.stream().forEach((l) -> {
                    db.changeRequestActiveState(l);
                });
            } else {
                db.changeRequestActiveState(req);
            }
            lista_req.removeSelectedRequest();
            if (tema.equals("escuro")) {
                this.temaEscuro();
            } else {
                this.temaClaro();
            }
        }
        db.close();
        this.calculateList(lista_dev.getRequestList().getTypeOfMaterial());
    }//GEN-LAST:event_jButtonAtuacaoConfirmaActionPerformed

    private void jComboBoxMudaTemaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxMudaTemaItemStateChanged
        if (jComboBoxMudaTema.getSelectedIndex() == 0) {
            tema = "claro";
            prefs.save();
            this.temaClaro();
        } else {
            tema = "escuro";
            prefs.save();
            this.temaEscuro();
        }
    }//GEN-LAST:event_jComboBoxMudaTemaItemStateChanged

    private void jComboBoxMudaTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMudaTemaActionPerformed

    }//GEN-LAST:event_jComboBoxMudaTemaActionPerformed

    private void jComboBoxMudaLinguagemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxMudaLinguagemItemStateChanged
        Object[] lista = lingua.linguas.toArray();
        String lingu = lista[jComboBoxMudaLinguagem.getSelectedIndex()].toString();
        jLabelLinguaMuda.setVisible(false);
        if (!lingu.equals(lingua.getLocale())) {
            jButtonLinguaMudaConfirma.setEnabled(true);
        } else {
            jButtonLinguaMudaConfirma.setEnabled(false);
            if (mudoutema) {
                jLabelLinguaMuda.setVisible(true);
            }
        }
    }//GEN-LAST:event_jComboBoxMudaLinguagemItemStateChanged

    private void jComboBoxMudaLinguagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMudaLinguagemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxMudaLinguagemActionPerformed

    private void jButtonLinguaMudaConfirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLinguaMudaConfirmaActionPerformed
        String lingu = "";
        Object[] lista = lingua.linguas.toArray();
        String aux = lista[jComboBoxMudaLinguagem.getSelectedIndex()].toString();
        if (!lingua.getLocale().equals(aux)) {
            lingua.setLocale(aux);
            prefs.save();
            lingu = lingua.getlist(4).get(jComboBoxMudaLinguagem.getSelectedIndex());
        }
        jButtonLinguaMudaConfirma.setEnabled(false);
        if (!lingu.equals("")) {
            String[] botoes = {lingua.translate("Reiniciar"), lingua.translate("Voltar")};
            String texto = "<html><div style='font-size:11px;text-align:center'>" + lingua.translate("A_linguagem_do_programa_foi_alterada_para_") + lingua.translate(lingu).toLowerCase() + ". <br/>" + lingua.translate("√â necess√°rio reinicar") + ". </div></html>";
            Components.MessagePane mensagem = new Components.MessagePane(jDialogDefOpcoes, Components.MessagePane.ACAO, systemColor, lingua.translate("Rein√≠cio necess√°rio"), 400, 200, texto, botoes);
            int resposta = mensagem.showMessage();
            if (resposta == 1) {
                prefs.save();
                this.dispose();
                Window[] janelas = Window.getOwnerlessWindows();
                for (Window janela : janelas) {
                    janela.setVisible(false);
                    janela.dispose();
                }
                this.setVisible(false);
                prefs = new PersonalPrefs();
                prefs.setVisible(true);
            } else {
                jLabelLinguaMuda.setVisible(true);
            }
        }
    }//GEN-LAST:event_jButtonLinguaMudaConfirmaActionPerformed

    private void jSliderTamanhoDivisorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderTamanhoDivisorStateChanged
        tdivisor = jSliderTamanhoDivisor.getValue();
        this.jSplitPaneInicial.setDividerSize(tdivisor);
    }//GEN-LAST:event_jSliderTamanhoDivisorStateChanged

    private void jComboBoxScrollAtivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxScrollAtivoActionPerformed
        if (jComboBoxScrollAtivo.getSelectedIndex() == 0) {
            if (!scrollAtivo) {
                this.startScroll();
                jToggleButton1.setSelected(true);
            }
        } else {
            this.stopScroll();
            jToggleButton1.setSelected(false);
        }
    }//GEN-LAST:event_jComboBoxScrollAtivoActionPerformed

    private void verifyValityofDates(String nome, int limite) {
        if (nome.length() <= limite) {
            int ano = Integer.valueOf(jComboBoxDefBreaksAnoInicio.getSelectedItem().toString());
            int mes = jComboBoxDefBreaksMesInicio.getSelectedIndex() + 1;
            int dia = Integer.valueOf(jComboBoxDefBreaksDiaInicio.getSelectedItem().toString());
            TimeDate.Date inicio = new TimeDate.Date(dia, mes, ano);
            ano = Integer.valueOf(jComboBoxDefBreaksAnoFim.getSelectedItem().toString());
            mes = jComboBoxDefBreaksMesFim.getSelectedIndex() + 1;
            dia = Integer.valueOf(jComboBoxDefBreaksDiaFim.getSelectedItem().toString());
            TimeDate.Date fim = new TimeDate.Date(dia, mes, ano);
            if ((TimeDate.Date.numberOfDaysBetweenDates(inicio, fim) >= 0) && (!nome.equals(""))) {
                jButtonDefBreaksAdicionar.setEnabled(true);
            } else {
                jButtonDefBreaksAdicionar.setEnabled(false);
            }
        }
    }

    private void mostrajListFeriadosMensagem() {
        TimeDate.Holiday hol = feriados.getHoliday(jListFeriadosEscolhidos.getSelectedIndex());
        hol.setLanguage(lingua);
        int ano = new TimeDate.Date().getYear();
        javax.swing.JLabel l = new javax.swing.JLabel();
        l.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        String palavra = "";
        if (hol.isDinamic()) {
            if (feriados.getCarnival().toString().equals(hol.toString())) {
                palavra = " (" + lingua.translate("Carnaval") + ")";
            } else if (feriados.getEaster().toString().equals(hol.toString())) {
                palavra = " (" + lingua.translate("P√°scoa") + ")";
            } else if (feriados.getGoodFriday().toString().equals(hol.toString())) {
                palavra = " (" + lingua.translate("Sexta-feira_santa") + ")";
            } else if (feriados.getCorpusChristi().toString().equals(hol.toString())) {
                palavra = " (" + lingua.translate("corpo_deus") + ")";
            }
        }
        l.setText(hol.toLongString() + " " + lingua.translate("de") + " " + ano + palavra + "\n");
        javax.swing.JLabel m = new javax.swing.JLabel();
        m.setText(lingua.translate("Dia_da_semana") + ": " + hol.getWeekDay(ano) + ".");
        m.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        //l.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));
        //m.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));
        javax.swing.JLabel[] lm = {l, m};
        String[] botoes = {lingua.translate("Voltar")};
        Components.MessagePane mensagem = new Components.MessagePane(jDialogDefHolidays, Components.MessagePane.INFORMACAO, systemColor, lingua.translate("Informacao"), 400, 200, lm, "", botoes);
        int resposta = mensagem.showMessage();
    }

    private void mostrajListFeriasMensagem() {
        int v = jListFerias.getSelectedIndex();
        TimeDate.BreakPeriod br = new java.util.ArrayList<TimeDate.BreakPeriod>(intervalos.getBreakPeriodList()).get(v);
        int ano = new TimeDate.Date().getYear();
        javax.swing.JLabel l = new javax.swing.JLabel();
        l.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        l.setText(lingua.translate(br.getName()) + ": " + br.toStringSimple());
        javax.swing.JLabel m = new javax.swing.JLabel();
        javax.swing.JLabel n = new javax.swing.JLabel();
        try {
            TimeDate.WeekDay inicio = new TimeDate.WeekDay(br.getBeginDate());
            inicio.setLanguage(lingua);
            TimeDate.WeekDay fim = new TimeDate.WeekDay(br.getEndDate());
            fim.setLanguage(lingua);
            m.setText(lingua.translate("In√≠cio") + ": " + inicio);
            n.setText(lingua.translate("T√©rmino") + ": " + fim);
        } catch (ParseException ex) {
            Logger.getLogger(KeyQuest.class.getName()).log(Level.SEVERE, null, ex);
        }

        m.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        n.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        javax.swing.JLabel[] lm = {l, m, n};
        String[] botoes = {lingua.translate("Voltar")};
        Components.MessagePane mensagem = new Components.MessagePane(jDialogDefBreaks, Components.MessagePane.INFORMACAO, systemColor, lingua.translate("Informacao"), 400, 200, lm, "", botoes);
        mensagem.showMessage();
    }

    public void drawChoosenHolidaysList() {
        DefaultListModel<String> modelo2 = new DefaultListModel<>();
        feriados.getHolidays().stream().map((ho) -> {
            ho.setLanguage(lingua);
            return ho;
        }).forEach((ho) -> {
            String palavra = ho.toLongString();
            if (ho.isDinamic()) {
                if (feriados.getCarnival().toString().equals(ho.toString())) {
                    palavra = lingua.translate("Carnaval");
                } else if (feriados.getEaster().toString().equals(ho.toString())) {
                    palavra = lingua.translate("P√°scoa");
                } else if (feriados.getGoodFriday().toString().equals(ho.toString())) {
                    palavra = lingua.translate("Sexta-feira_santa");
                } else if (feriados.getCorpusChristi().toString().equals(ho.toString())) {
                    palavra = lingua.translate("corpo_deus");
                }
            }
            modelo2.addElement(palavra);
        });
        jListFeriadosEscolhidos.setModel(modelo2);
        jListFeriadosEscolhidos.setBorder(BorderFactory.createEmptyBorder(20, 40, 0, 40));
        jListFeriadosEscolhidos.setCellRenderer(new DefaultListCellRenderer() {
            private static final long serialVersionUID = 1L;

            @Override
            public Component getListCellRendererComponent(javax.swing.JList<?> list, Object value, int index,
                    boolean isSelected,
                    boolean cellHasFocus) {
                javax.swing.JLabel label = (javax.swing.JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                label.setBorder(BorderFactory.createEmptyBorder(4, 0, 4, 0));
                label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                if (isSelected) {
                    label.setBackground(Color.GRAY);
                    label.setForeground(Color.WHITE);
                    label.setBorder(BorderFactory.createLineBorder(Color.black, 1));
                }
                return label;
            }
        });
    }

    public void drawBreaksList() {
        DefaultListModel<String> modelo2 = new DefaultListModel<>();
        intervalos.getBreakPeriodList().stream().map((ho) -> {
            return ho;
        }).forEach((ho) -> {
            modelo2.addElement(lingua.translate(ho.toString()));
        });
        jListFerias.setModel(modelo2);
        jListFerias.setBorder(BorderFactory.createEmptyBorder(50, 10, 50, 10));
        jListFerias.setCellRenderer(new DefaultListCellRenderer() {
            private static final long serialVersionUID = 2L;

            @Override
            public Component getListCellRendererComponent(javax.swing.JList<?> list, Object value, int index,
                    boolean isSelected,
                    boolean cellHasFocus) {
                javax.swing.JLabel label = (javax.swing.JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                label.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));
                label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                if (isSelected) {
                    label.setBackground(Color.GRAY);
                    label.setForeground(Color.WHITE);
                    label.setBorder(BorderFactory.createLineBorder(Color.black, 1));
                }
                return label;
            }
        });
        FileBreakPeriods pf = new FileBreakPeriods();
        pf.saveHolidays(intervalos);
    }

    public void drawDefaultHolidaysList() {
        DefaultListModel<String> modelo = new DefaultListModel<>();
        HolidaysList hol = new FileHolidays().getDefaultHolidaysList();
        hol.getHolidays().stream().map((ho) -> {
            ho.setLanguage(lingua);
            return ho;
        }).forEach((ho) -> {
            modelo.addElement(ho.toLongString());
        });
        jListFeriadosDefeito.setBorder(BorderFactory.createEmptyBorder(10, 40, 0, 40));
        jListFeriadosDefeito.setModel(modelo);
        jListFeriadosDefeito.setCellRenderer(new DefaultListCellRenderer() {
            private static final long serialVersionUID = 1L;

            @Override
            public Component getListCellRendererComponent(javax.swing.JList<?> list, Object value, int index,
                    boolean isSelected,
                    boolean cellHasFocus) {
                javax.swing.JLabel label = (javax.swing.JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                label.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 0));
                label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                if (isSelected) {
                    label.setBackground(Color.GRAY);
                    label.setForeground(Color.WHITE);
                    label.setBorder(BorderFactory.createLineBorder(Color.black, 1));
                }
                return label;
            }
        });
    }

    public final void caracteristicsJFrame() {
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.addWindowStateListener(new WindowStateListener() {
            // conseguir tamanho do monitor... multi-monitor 
            GraphicsDevice gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();
            int width = gd.getDisplayMode().getWidth();
            int height = gd.getDisplayMode().getHeight();

            // conseguir tamanho do monitor... simples
            /*
             Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
             double width = screenSize.getWidth();
             double height = screenSize.getHeight();
             */
            @Override
            public void windowStateChanged(WindowEvent e) {
                if (e.getOldState() == 6) {
                    int x = ((width / 2) - 500);
                    int y = ((height / 2) - 350);
                    setBounds(x, y, 1024, 700);
                }
            }
        });

        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                prefs.save();
            }
        });
        this.createAspect();
        this.drawDivisor();

        // Comportamento do duplo clique no separador  
    }

    private void drawDivisor() {
        jSplitPaneInicial.setOneTouchExpandable(false);
        jSplitPaneInicial.setUI(new BasicSplitPaneUI() {
            @Override
            public BasicSplitPaneDivider createDefaultDivider() {
                return new BasicSplitPaneDivider(this) {
                    private static final long serialVersionUID = 1L;

                    @Override
                    public void paint(java.awt.Graphics g) {
                        java.awt.Graphics2D g2 = (java.awt.Graphics2D) g;

                        java.awt.GradientPaint redtowhite = new java.awt.GradientPaint(0, this.getHeight() / 2, new Color(1, 1, 1), this.getWidth() / 2, this.getHeight() / 2, new Color(104, 104, 104), true);
                        g2.setPaint(redtowhite);
                        g2.fillRect(0, 0, getSize().width, getSize().height);
                        g2.setColor(new Color(254, 254, 254));
                        g2.drawLine(0, 1, getSize().width, 1);
                        g2.drawLine(0, getSize().height - 2, getSize().width, getSize().height - 2);
                        g2.setColor(new Color(1, 1, 1));
                        g2.drawLine(0, 0, getSize().width, 0);
                        g2.drawLine(0, getSize().height - 1, getSize().width, getSize().height - 1);
                    }
                };
            }
        });
        BasicSplitPaneUI ui = (BasicSplitPaneUI) jSplitPaneInicial.getUI();
        BasicSplitPaneDivider divisor = ui.getDivider();
        divisor.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                if (evt.getClickCount() == 2) {
                    if (auxiliar.isAlive()) {
                        Threads.EfectsOnDivisor ev = (Threads.EfectsOnDivisor) auxiliar;
                        ev.setCondition(false);
                    }
                    auxiliar = new Threads.EfectsOnDivisor(jSplitPaneInicial, 0.5);
                    jToggleButtonBarRequisicoes.setSelected(false);
                    jToggleButtonBarEntregas.setSelected(false);
                    bitpagina[0] = 0;
                    bitpagina[1] = 0;
                    auxiliar.start();
                }
            }
        });
        divisor.addMouseMotionListener(new MouseMotionListener() {
            @Override
            public void mouseDragged(MouseEvent e) {
                if (jSplitPaneInicial.getDividerLocation() > jSplitPaneInicial.getHeight() - 100) {
                    jToggleButtonBarRequisicoes.setSelected(true);
                    bitpagina[0] = 1;
                    bitpagina[1] = 0;
                } else if (jSplitPaneInicial.getDividerLocation() < 100) {
                    jToggleButtonBarEntregas.setSelected(true);
                    bitpagina[0] = 0;
                    bitpagina[1] = 1;
                } else {
                    jToggleButtonBarRequisicoes.setSelected(false);
                    jToggleButtonBarEntregas.setSelected(false);
                    bitpagina[0] = 0;
                    bitpagina[1] = 0;
                }
            }

            @Override
            public void mouseMoved(MouseEvent e) {

            }
        });

    }

    protected final void init() {
        HolidaysList.updateDynamicHolidays();
        this.intervalos = new FileBreakPeriods().getBreakPeriods();
        this.feriados = new FileHolidays().getHolidays();
        urlcsv = DEFAULT_URlCSV;
        urlbd = DEFAULT_URlBD;
        this.defineSearchString();
        initComponents();

        int aux = -1;
        ligacao = DataBase.DataBase.testConnection(urlbd);

        if (ligacao) {
            DataBase.DataBase db = new DataBase.DataBase(urlbd);
            this.tiposmateriais = db.getTypesOfMaterial();
            db.close();
            String[] lista = new String[tiposmateriais.size()];
            int i = 0;
            for (Keys.TypeOfMaterial mat : tiposmateriais) {
                lista[i] = lingua.translate(mat.getTypeOfMaterialName());
                if (mat.getMaterialTypeID() == tipomaterial.getMaterialTypeID()) {
                    aux = i;
                }
                i++;
            }
            jComboBoxListaBotoes.setModel(new javax.swing.DefaultComboBoxModel<>(lista));
        } else {
            tiposmateriais = new java.util.ArrayList<>();
            jComboBoxListaBotoes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{lingua.translate("Nenhum")}));
            aux = 0;
        }
        
        createMenu();
        Clavis.UpdateCSVonDB cbd = new Clavis.UpdateCSVonDB(new TimeDate.Date(), new TimeDate.Date(12, 1, 2017), intervalos, feriados, DEFAULT_URlBD, DEFAULT_URlCSV);
        //cbd.update();
        if (aux >= 0) {
            jComboBoxListaBotoes.setSelectedIndex(aux);
        }
        if ((bitpagina[0] == 1) && (bitpagina[1]) == 0) {
            jSplitPaneInicial.setDividerLocation((int) jPanelInicial.getSize().getHeight());
            jToggleButtonBarRequisicoes.setSelected(true);
        } else if ((bitpagina[1] == 1) && (bitpagina[0] == 0)) {
            jSplitPaneInicial.setDividerLocation(0.0);
            jToggleButtonBarEntregas.setSelected(true);
        } else {
            jSplitPaneInicial.setDividerLocation(0.5);
        }
        jComboBoxPesquisaOpcao.setSelectedIndex(pesquisa);
        pack();
        setLocationRelativeTo(null);
        if (pesquisa == 2) {
            jTextFieldProcuraCima.setToolTipText(lingua.translate("Formato") + ": hh24:mm:ss");
            jTextFieldProcuraBaixo.setToolTipText(lingua.translate("Formato") + ": hh24:mm:ss");
        }

        this.addDayChangeTimer();
        this.addTestConnection();
        this.controlScroll();

    }

    private void defineSearchString() {
        switch (pesquisa) {
            case 1:
                spesquisa[0] = lingua.translate("Recurso requisitado");
                spesquisa[1] = lingua.translate("Recurso emprestado");
                break;
            case 2:
                spesquisa[0] = lingua.translate("Hora de levantamento");
                spesquisa[1] = lingua.translate("Hora de entrega");
                break;
            default:
                spesquisa[0] = lingua.translate("Nome de utilizador");
                spesquisa[1] = lingua.translate("Nome de utilizador");
                break;
        }
    }

    private void createMenu() {

        Menu menu = new Menu();
        menu.setPreferredSize(new java.awt.Dimension(menu.getWidth(), 22));
        menu.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createMatteBorder(0, 0, 0, 0, Color.BLACK), BorderFactory.createEmptyBorder(0, 5, 0, 0)));
        JMenu jMenuFicheiro = new JMenu();
        JMenu jMenuDefinicoes = new JMenu();

        jMenuFicheiro.setText(lingua.translate("Ficheiro"));
        jMenuFicheiro.setMnemonic(lingua.translate("Ficheiro").charAt(0));
        JMenuItem itemSair = new JMenuItem();

        itemSair.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, Event.ALT_MASK));
        itemSair.setText(lingua.translate("Sair"));
        itemSair.setCursor(new Cursor(Cursor.HAND_CURSOR));
        itemSair.addActionListener((ActionEvent e) -> {
            exit(e);
        });

        JMenuItem itemReiniciar = new JMenuItem();
        itemReiniciar.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_R, Event.ALT_MASK));
        itemReiniciar.setText(lingua.translate("Reiniciar"));
        itemReiniciar.setCursor(new Cursor(Cursor.HAND_CURSOR));
        itemReiniciar.addActionListener((ActionEvent e) -> {
            prefs.save();
            Window[] janelas = Window.getOwnerlessWindows();
            for (int i = 0; i < janelas.length; i++) {
                janelas[i].setVisible(false);
                janelas[i].dispose();
            }
            jDialogDefOpcoes.setVisible(false);
            jDialogDefOpcoes.dispose();
            this.setVisible(false);
            prefs = new PersonalPrefs();
            prefs.setVisible(true);
        });
        jMenuFicheiro.add(itemReiniciar);
        jMenuFicheiro.add(itemSair);

        menu.add(jMenuFicheiro);
        jMenuDefinicoes.setText(lingua.translate("Defini√ß√µes"));
        jMenuDefinicoes.setMnemonic(lingua.translate("Defini√ß√µes").charAt(0));
        JMenuItem itemFeriados = new JMenuItem();
        itemFeriados.setText(lingua.translate("Editar_feriados"));
        itemFeriados.setCursor(new Cursor(Cursor.HAND_CURSOR));
        itemFeriados.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_H, Event.ALT_MASK));
        itemFeriados.addActionListener((java.awt.event.ActionEvent evt) -> {
            itemFeriadosActionPerformed(evt);
        });

        jMenuDefinicoes.add(itemFeriados);
        JMenuItem itemFerias = new JMenuItem();
        itemFerias.setText(lingua.translate("Editar_Periodos_Interrupcao"));
        itemFerias.setCursor(new Cursor(Cursor.HAND_CURSOR));
        itemFerias.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_B, Event.ALT_MASK));
        itemFerias.addActionListener((java.awt.event.ActionEvent evt) -> {
            itemFeriasActionPerformed(evt);
        });

        jMenuDefinicoes.add(itemFerias);
        JMenuItem itemDefinicoes = new JMenuItem();
        itemDefinicoes.setText(lingua.translate("Definicoes_visualizacao"));
        itemDefinicoes.setCursor(new Cursor(Cursor.HAND_CURSOR));
        itemDefinicoes.setAccelerator(KeyStroke.getKeyStroke(itemDefinicoes.getText().charAt(0), Event.ALT_MASK));
        itemDefinicoes.addActionListener((java.awt.event.ActionEvent evt) -> {
            itemDefinicoesActionPerformed(evt);
        });

        jMenuDefinicoes.add(itemDefinicoes);
        menu.add(jMenuDefinicoes);
        this.setJMenuBar(menu);
    }

    private void addDayChangeTimer() {
        Calendar today = Calendar.getInstance();
        today.set(Calendar.HOUR_OF_DAY, 0);
        today.set(Calendar.MINUTE, 0);
        today.set(Calendar.SECOND, 0);
        java.util.Timer timer = new java.util.Timer();
        timer.scheduleAtFixedRate(new java.util.TimerTask() {
            @Override
            public void run() {
                calculateList(tipomaterial);
            }
        }, today.getTime(), 86400000);
    }

    private void itemFeriadosActionPerformed(java.awt.event.ActionEvent evt) {
        jButtonDefHolidaysDireita.setEnabled(false);
        jButtonDefHolidaysApagar.setEnabled(false);
        this.drawDefaultHolidaysList();
        this.drawChoosenHolidaysList();
        jDialogDefHolidays.setVisible(true);
        jDialogDefHolidays.setLocationRelativeTo(KeyQuest.this);
        if (feriados.hasEaster()) {
            jRadioButtonPascoa.setSelected(true);
        }
        if (feriados.hasCarnival()) {
            jRadioButtonCarnaval.setSelected(true);
        }
        if (feriados.hasCorpusChristi()) {
            jRadioButtonCorpoDeus.setSelected(true);
        }
        if (feriados.hasGoodFriday()) {
            jRadioButtonSextaFeira.setSelected(true);
        }

    }

    private void itemFeriasActionPerformed(java.awt.event.ActionEvent evt) {
        jDialogDefBreaks.setVisible(true);
        jDialogDefBreaks.setLocationRelativeTo(KeyQuest.this);
        jTextFieldDefBreaksNome.setText("");
        this.drawBreaksList();
        this.drawTimeComboBoxes();
    }

    private void itemDefinicoesActionPerformed(java.awt.event.ActionEvent evt) {
        jDialogDefOpcoes.setVisible(true);
        jDialogDefOpcoes.setLocationRelativeTo(KeyQuest.this);
        if (tema.equals("claro")) {
            jComboBoxMudaTema.setSelectedIndex(0);
        } else {
            jComboBoxMudaTema.setSelectedIndex(1);
        }

        int lingu = 0;
        Object[] lista = lingua.linguas.toArray();
        int i = 0;
        while (i < lista.length) {
            if (lingua.getLocale().equals(lista[i].toString())) {
                lingu = i;
            }
            i++;
        }
        jComboBoxMudaLinguagem.setSelectedIndex(lingu);
        jSliderTamanhoDivisor.setValue(tdivisor);
        if (scrollAtivo) {
            jComboBoxScrollAtivo.setSelectedIndex(0);
        } else {
            jComboBoxScrollAtivo.setSelectedIndex(1);
        }
    }

    private void drawTimeComboBoxes() {
        int ano = new TimeDate.Date().getYear();
        int limite = 50;
        String[] anos = new String[101];
        ano = ano - 50;
        for (int i = 0; i < 101; i++) {
            anos[i] = String.valueOf(ano + i);
        }
        jComboBoxDefBreaksAnoInicio.setModel(new javax.swing.DefaultComboBoxModel<>(anos));
        jComboBoxDefBreaksAnoInicio.setSelectedIndex(50);
        jComboBoxDefBreaksMesInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{lingua.translate("Janeiro"), lingua.translate("Fevereiro"),
            lingua.translate("Mar√ßo"), lingua.translate("Abril"), lingua.translate("Maio"),
            lingua.translate("Junho"), lingua.translate("Julho"), lingua.translate("Agosto"), lingua.translate("Setembro"),
            lingua.translate("Outubro"), lingua.translate("Novembro"), lingua.translate("Dezembro")}));
        jComboBoxDefBreaksMesInicio.setSelectedIndex(0);
        ((javax.swing.JLabel) jComboBoxDefBreaksMesInicio.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        ((javax.swing.JLabel) jComboBoxDefBreaksAnoInicio.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        ((javax.swing.JLabel) jComboBoxDefBreaksDiaInicio.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        ((javax.swing.JLabel) jComboBoxDefBreaksDiaInicio.getRenderer()).setSize(200, 20);
        ((javax.swing.JLabel) jComboBoxDefBreaksDiaInicio.getRenderer()).setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 10));
        ((javax.swing.JLabel) jComboBoxDefBreaksMesInicio.getRenderer()).setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 10));
        ((javax.swing.JLabel) jComboBoxDefBreaksAnoInicio.getRenderer()).setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 10));
        jComboBoxDefBreaksDiaInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));
        jComboBoxDefBreaksMesInicio.addActionListener((ActionEvent e) -> {
            int vval = jComboBoxDefBreaksMesInicio.getSelectedIndex();
            int select = jComboBoxDefBreaksDiaInicio.getSelectedIndex();
            if ((vval == 3) || (vval == 5) || (vval == 8) || (vval == 10)) {
                jComboBoxDefBreaksDiaInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30"}));
                if (select == 30) {
                    select = 29;
                }
            } else if (vval == 1) {
                if (TimeDate.Date.verifyJump(Integer.valueOf(jComboBoxDefBreaksAnoInicio.getSelectedItem().toString()))) {
                    jComboBoxDefBreaksDiaInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29"}));
                } else {
                    if ((vval == 1) && (select == 28)) {
                        jComboBoxDefBreaksDiaInicio.setSelectedIndex(27);
                    }
                    jComboBoxDefBreaksDiaInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28"}));
                }
            } else {
                jComboBoxDefBreaksDiaInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));
            }
            if (jComboBoxDefBreaksDiaInicio.getModel().getSize() > select) {
                jComboBoxDefBreaksDiaInicio.setSelectedIndex(select);
            }
            this.verifyValityofDates(jTextFieldDefBreaksNome.getText(), limite);
        });
        jComboBoxDefBreaksAnoInicio.addActionListener((ActionEvent e) -> {
            int select = jComboBoxDefBreaksDiaInicio.getSelectedIndex();
            int select2 = jComboBoxDefBreaksMesInicio.getSelectedIndex();
            if (select2 == 1) {
                if (!TimeDate.Date.verifyJump(Integer.valueOf(jComboBoxDefBreaksAnoInicio.getSelectedItem().toString()))) {
                    jComboBoxDefBreaksDiaInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28"}));
                    if ((select == 28) && (select2 == 1)) {
                        jComboBoxDefBreaksDiaInicio.setSelectedIndex(27);
                    } else {
                        jComboBoxDefBreaksDiaInicio.setSelectedIndex(select);
                    }

                } else {
                    jComboBoxDefBreaksDiaInicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29"}));
                    jComboBoxDefBreaksDiaInicio.setSelectedIndex(select);
                }
            }
            this.verifyValityofDates(jTextFieldDefBreaksNome.getText(), limite);
        });
        jComboBoxDefBreaksAnoFim.setModel(new javax.swing.DefaultComboBoxModel<>(anos));
        jComboBoxDefBreaksAnoFim.setSelectedIndex(50);
        jComboBoxDefBreaksMesFim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{lingua.translate("Janeiro"), lingua.translate("Fevereiro"),
            lingua.translate("Mar√ßo"), lingua.translate("Abril"), lingua.translate("Maio"),
            lingua.translate("Junho"), lingua.translate("Julho"), lingua.translate("Agosto"), lingua.translate("Setembro"),
            lingua.translate("Outubro"), lingua.translate("Novembro"), lingua.translate("Dezembro")}));
        jComboBoxDefBreaksMesFim.setSelectedIndex(0);
        ((javax.swing.JLabel) jComboBoxDefBreaksMesFim.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        ((javax.swing.JLabel) jComboBoxDefBreaksAnoFim.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        ((javax.swing.JLabel) jComboBoxDefBreaksDiaFim.getRenderer()).setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        ((javax.swing.JLabel) jComboBoxDefBreaksDiaFim.getRenderer()).setSize(200, 20);
        ((javax.swing.JLabel) jComboBoxDefBreaksDiaFim.getRenderer()).setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 10));
        ((javax.swing.JLabel) jComboBoxDefBreaksMesFim.getRenderer()).setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 10));
        ((javax.swing.JLabel) jComboBoxDefBreaksAnoFim.getRenderer()).setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 10));
        jComboBoxDefBreaksDiaFim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));
        jComboBoxDefBreaksMesFim.addActionListener((ActionEvent e) -> {
            int vval = jComboBoxDefBreaksMesFim.getSelectedIndex();
            int select = jComboBoxDefBreaksDiaFim.getSelectedIndex();
            if ((vval == 3) || (vval == 5) || (vval == 8) || (vval == 10)) {
                jComboBoxDefBreaksDiaFim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30"}));
                if (select == 30) {
                    select = 29;
                }
            } else if (vval == 1) {
                if (TimeDate.Date.verifyJump(Integer.valueOf(jComboBoxDefBreaksAnoFim.getSelectedItem().toString()))) {
                    jComboBoxDefBreaksDiaFim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29"}));
                } else {
                    if ((vval == 1) && (select == 28)) {
                        jComboBoxDefBreaksDiaFim.setSelectedIndex(27);
                    }
                    jComboBoxDefBreaksDiaFim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28"}));
                }
            } else {
                jComboBoxDefBreaksDiaFim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"}));
            }
            if (jComboBoxDefBreaksDiaFim.getModel().getSize() > select) {
                jComboBoxDefBreaksDiaFim.setSelectedIndex(select);
            }
            this.verifyValityofDates(jTextFieldDefBreaksNome.getText(), limite);
        });
        jComboBoxDefBreaksAnoFim.addActionListener((ActionEvent e) -> {
            int select = jComboBoxDefBreaksDiaFim.getSelectedIndex();
            int select2 = jComboBoxDefBreaksMesFim.getSelectedIndex();
            if (select2 == 1) {
                if (!TimeDate.Date.verifyJump(Integer.valueOf(jComboBoxDefBreaksAnoFim.getSelectedItem().toString()))) {
                    jComboBoxDefBreaksDiaFim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28"}));
                    if ((select == 28) && (select2 == 1)) {
                        jComboBoxDefBreaksDiaFim.setSelectedIndex(27);
                    } else {
                        jComboBoxDefBreaksDiaFim.setSelectedIndex(select);
                    }

                } else {
                    jComboBoxDefBreaksDiaFim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29"}));
                    jComboBoxDefBreaksDiaFim.setSelectedIndex(select);
                }
            }
            this.verifyValityofDates(jTextFieldDefBreaksNome.getText(), limite);
        });
        jComboBoxDefBreaksDiaInicio.addActionListener((ActionEvent e) -> {
            this.verifyValityofDates(jTextFieldDefBreaksNome.getText(), limite);
        });
        jComboBoxDefBreaksDiaFim.addActionListener((ActionEvent e) -> {
            this.verifyValityofDates(jTextFieldDefBreaksNome.getText(), limite);
        });

    }

    private synchronized void calculateList(Keys.TypeOfMaterial material) {
        if (!ligacao) {
            material = new Keys.TypeOfMaterial(-1, "Nenhum", -1, -1, "sem");
        }
        requisicoes = new RequestList(urlbd, material, vista, feriados, false, false);
        if (ligacao) {
            requisicoes.make();
        }
        if (lista_req != null) {
            lista_req.getTable().clearSelection();
        }
        lista_req = new TableRequest(requisicoes, jPanelInformaCimaCima, lingua, false, jButtonAtuacaoConfirma, jButtonAtuacaoAltera, systemColor, this.urlbd);
        lista_req.create();
        lista_req.addListenenerSelectionRequisitions(jButtonAtuacaoConfirma, jButtonAtuacaoAltera);
        jScrollPaneRequisicoes.setViewportView(lista_req.getTable());

        javax.swing.JLabel l = new javax.swing.JLabel();
        if (tema.equals("claro")) {
            l.setBackground(new Color(165, 165, 165));
            l.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(1, 1, 1)));
        } else {
            l.setBackground(new Color(245, 245, 245));
            l.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(254, 254, 254)));
        }
        l.setOpaque(true);
        jScrollPaneRequisicoes.setCorner(javax.swing.JScrollPane.UPPER_TRAILING_CORNER, l);
        AdjustmentListener list = new AdjustmentListener() {
            int val = 0;

            @Override
            public void adjustmentValueChanged(AdjustmentEvent e) {
                if ((scroll != null) && (scroll.isRunning())) {
                    if (val != jScrollPaneRequisicoes.getVerticalScrollBar().getValue()) {
                        scroll.stop();
                        scroll.setInitialDelay(10000);
                        scroll.start();
                    }
                }
                val = jScrollPaneRequisicoes.getVerticalScrollBar().getValue();
            }
        };
        jScrollPaneRequisicoes.getVerticalScrollBar().removeAdjustmentListener(list);
        jScrollPaneRequisicoes.getVerticalScrollBar().addAdjustmentListener(list);

        devolucoes = new RequestList(urlbd, material, vista, feriados, true, false);
        if (ligacao) {
            devolucoes.make();
        }
        if (devolucoes.getRequests().size() > 0) {
            devolucoes.sortbyEndDate();
        }
        if (lista_dev != null) {
            lista_dev.getTable().clearSelection();
        }
        lista_dev = new TableRequest(devolucoes, jPanelInformaBaixoCima, lingua, true, jButtonConfirmaDevolucao, jButtonAlteraDevolucao, systemColor, this.urlbd);
        lista_dev.create();
        lista_dev.addListenenerSelectionRequisitions(jButtonConfirmaDevolucao, jButtonAlteraDevolucao);
        jScrollPaneDevolucoes.setViewportView(lista_dev.getTable());
        javax.swing.JLabel lo = new javax.swing.JLabel();
        if (tema.equals("claro")) {
            lo.setBackground(new Color(165, 165, 165));
            lo.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(1, 1, 1)));
        } else {
            lo.setBackground(new Color(245, 245, 245));
            lo.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(254, 254, 254)));
        }
        lo.setOpaque(true);
        jScrollPaneDevolucoes.setCorner(javax.swing.JScrollPane.UPPER_TRAILING_CORNER, lo);

        jSplitPaneInicial.setDividerSize(tdivisor);

        jComboBoxVista.setSelectedIndex(vista);
        lista_req.addTimerColors();
        lista_dev.addTimerColors();
        lista_req.startTimerColors();
        lista_dev.startTimerColors();
        if (tema.equals("escuro")) {
            this.temaEscuro();
        }
    }

    public void exit(ActionEvent e) {
        systemColor = new Color(177, 184, 190);
        //systemColor = new Color(142,142,142);
        prefs.save();
        this.dispose();
        System.exit(0);
    }

    private void controlScroll() {
        if (scrollAtivo) {
            scroll = new Timer(1000, (ActionEvent e) -> {
                TimeDate.Time tempo = new TimeDate.Time();
                TimeDate.Date dat = new TimeDate.Date();
                int i = 0;
                if (lista_req.getRequestList().getRequests().size() > 0) {
                    if (jScrollPaneRequisicoes.getVerticalScrollBar().isVisible()) {
                        for (Keys.Request req : lista_req.getRequestList().getRequests()) {
                            int val = tempo.compareTime(req.getTimeBegin());
                            if ((req.getBeginDate().getDay() == dat.getDay()) && (req.getBeginDate().getMonth() == dat.getMonth()) && (req.getBeginDate().getYear() == dat.getYear())) {
                                int valfinal;
                                if (new TimeDate.Date().getDayYear() < req.getEndDate().getDayYear()) {
                                    valfinal = tempo.compareTime(req.getTimeEnd()) + ((req.getEndDate().getDayYear() - new TimeDate.Date().getDayYear()) * 86400);
                                } else {
                                    valfinal = tempo.compareTime(req.getTimeEnd());
                                }
                                if ((val < lista_req.getBeforeHour()) && (valfinal >= lista_req.getAfterHour())) {
                                    int max = jScrollPaneRequisicoes.getVerticalScrollBar().getMaximum();
                                    int nlinhas = lista_req.getRequestList().getRequests().size();
                                    max = max / nlinhas;
                                    if (i > 0) {
                                        i = i - 1;
                                    }
                                    int mudanca = max * i;
                                    if (!isRowVisible(lista_req.getTable(), i)) {
                                        jScrollPaneRequisicoes.getVerticalScrollBar().setValue(mudanca);
                                    }
                                    break;
                                } else {
                                    i++;
                                }
                            }
                        }
                    }
                }
                if (lista_dev.getRequestList().getRequests().size() > 0) {
                    if (jScrollPaneDevolucoes.getVerticalScrollBar().isVisible()) {
                        for (Keys.Request req : lista_dev.getRequestList().getRequests()) {
                            if ((req.getBeginDate().getDay() == dat.getDay()) && (req.getBeginDate().getMonth() == dat.getMonth()) && (req.getBeginDate().getYear() == dat.getYear())) {
                                int valfinal = tempo.compareTime(req.getTimeEnd());
                                if (valfinal >= lista_dev.getAfterHour() + lista_dev.getPermittedDelay()) {
                                    int max = jScrollPaneDevolucoes.getVerticalScrollBar().getMaximum();
                                    int nlinhas = lista_dev.getRequestList().getRequests().size();
                                    max = max / nlinhas;
                                    if (i > 0) {
                                        i = i - 1;
                                    }
                                    int mudanca = max * i;
                                    if (!isRowVisible(lista_dev.getTable(), i)) {
                                        jScrollPaneDevolucoes.getVerticalScrollBar().setValue(mudanca);
                                    }
                                    break;
                                } else {
                                    i++;
                                }
                            }
                        }
                    }
                }
            });
            scroll.start();
        }
    }

    private void startScroll() {
        scrollAtivo = true;
        this.controlScroll();
    }

    private void stopScroll() {
        if ((scroll != null) && (scroll.isRunning())) {
            scroll.stop();
        }
        scrollAtivo = false;
    }

    private void temaEscuro() {
        lista_req.setBackGroundColor(new Color(45, 45, 45));
        lista_req.setForegroundcolor(Color.WHITE);
        lista_req.setSelectColor(new Color(223, 223, 223));
        lista_req.setForegroundSelectColor(Color.BLACK);
        lista_dev.setBackGroundColor(Color.black);
        lista_dev.setForegroundcolor(Color.white);
        lista_dev.setSelectColor(new Color(223, 223, 223));
        lista_dev.setForegroundSelectColor(Color.BLACK);
        lista_req.setPanelColor(new Color(255, 255, 255), Color.BLACK);
        lista_dev.setPanelColor(new Color(255, 255, 255), Color.BLACK);
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder2 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder2.setCornerSize(6);
        dropShadowBorder2.setShadowColor(Color.WHITE);
        dropShadowBorder2.setShadowSize(3);
        dropShadowBorder2.setShowLeftShadow(true);
        jScrollPaneRequisicoes.setBorder(javax.swing.BorderFactory.createCompoundBorder(dropShadowBorder2, javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 254, 254))));
        jScrollPaneDevolucoes.setBorder(javax.swing.BorderFactory.createCompoundBorder(dropShadowBorder2, javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 254, 254))));

        jPanelInformaCimaBaixo.setBackground(new Color(45, 45, 45));
        javax.swing.border.Border bord = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(254, 254, 254, 185)), new javax.swing.border.LineBorder(new java.awt.Color(254, 254, 254), 1, false));
        jPanelInformaCimaBaixo.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 8, 4, 6, jPanelCima.getBackground()), bord));
        javax.swing.border.Border bordBaixo = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(254, 254, 254, 185)), new javax.swing.border.LineBorder(new java.awt.Color(254, 254, 254), 1, false));
        jPanelInformaBaixoBaixo.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 6, 4, 8, jPanelBaixo.getBackground()), bordBaixo));

        jPanelInformaBaixoBaixo.setBackground(new Color(45, 45, 45));
        jScrollPaneInformaCima.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 254, 254))));
        jScrollPaneInformaBaixo.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 254, 254))));
        jTextFieldProcuraCima.setBackground(new Color(45, 45, 45));
        jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
        javax.swing.border.Border borderpesquisacima1 = BorderFactory.createMatteBorder(5, 8, 5, 5, jPanelCima.getBackground());
        javax.swing.border.Border borderpesquisacima3 = BorderFactory.createCompoundBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(254, 254, 254, 185)), javax.swing.BorderFactory.createLineBorder(Color.WHITE, 1));
        javax.swing.border.Border borderpesquisacima2 = BorderFactory.createCompoundBorder(borderpesquisacima1, borderpesquisacima3);
        jTextFieldProcuraCima.setBorder(javax.swing.BorderFactory.createCompoundBorder(borderpesquisacima2, javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 10)));

        jTextFieldProcuraBaixo.setBackground(new Color(45, 45, 45));
        jTextFieldProcuraBaixo.setForeground(new Color(201, 201, 201));
        javax.swing.border.Border borderpesquisabaixo1 = BorderFactory.createMatteBorder(5, 5, 5, 8, jPanelBaixo.getBackground());
        javax.swing.border.Border borderpesquisabaixo3 = BorderFactory.createCompoundBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(254, 254, 254, 185)), javax.swing.BorderFactory.createLineBorder(Color.WHITE, 1));
        javax.swing.border.Border borderpesquisabaixo2 = BorderFactory.createCompoundBorder(borderpesquisabaixo1, borderpesquisabaixo3);
        jTextFieldProcuraBaixo.setBorder(javax.swing.BorderFactory.createCompoundBorder(borderpesquisabaixo2, javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 10)));

        javax.swing.JLabel l = (javax.swing.JLabel) jScrollPaneRequisicoes.getCorner(javax.swing.JScrollPane.UPPER_TRAILING_CORNER);
        l.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(254, 254, 254)));
        l.setBackground(new Color(245, 245, 245));
        l = (javax.swing.JLabel) jScrollPaneDevolucoes.getCorner(javax.swing.JScrollPane.UPPER_TRAILING_CORNER);
        l.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(254, 254, 254)));
        l.setBackground(new Color(245, 245, 245));

        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer() {
            private static final long serialVersionUID = 1L;

            @Override
            public Component getTableCellRendererComponent(JTable table,
                    Object value, boolean isSelected, boolean hasFocus,
                    int row, int column) {
                super.getTableCellRendererComponent(table, value, isSelected, hasFocus,
                        row, column);
                setFont(new Font("Cantarell", Font.PLAIN, 14));
                this.setBorder(BorderFactory.createMatteBorder(0, 1, 1, 0, new Color(254, 254, 254)));
                return this;
            }

        };
        headerRenderer.setBackground(new Color(245, 245, 245));
        headerRenderer.setForeground(new Color(1, 1, 1));
        headerRenderer.setHorizontalAlignment(javax.swing.JLabel.CENTER);

        DefaultTableCellRenderer headerRenderer2 = new DefaultTableCellRenderer() {
            private static final long serialVersionUID = 1L;

            @Override
            public Component getTableCellRendererComponent(JTable table,
                    Object value, boolean isSelected, boolean hasFocus,
                    int row, int column) {
                super.getTableCellRendererComponent(table, value, isSelected, hasFocus,
                        row, column);
                setFont(new Font("Cantarell", Font.PLAIN, 14));
                this.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(254, 254, 254)));
                return this;
            }

        };
        headerRenderer2.setBackground(new Color(245, 245, 245));
        headerRenderer2.setForeground(new Color(1, 1, 1));
        headerRenderer2.setHorizontalAlignment(javax.swing.JLabel.CENTER);

        for (int i = 0; i < lista_req.getTable().getModel().getColumnCount(); i++) {
            if (i == 0) {
                lista_req.getTable().getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer2);
            } else {
                lista_req.getTable().getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
            }
        }
        for (int i = 0; i < lista_dev.getTable().getModel().getColumnCount(); i++) {
            if (i == 0) {
                lista_dev.getTable().getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer2);
            } else {
                lista_dev.getTable().getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
            }
        }
    }

    private void temaClaro() {
        lista_req.setBackGroundColor(UIManager.getColor("Table.background"));
        lista_req.setForegroundcolor(new Color(1, 1, 1));
        lista_req.setSelectColor(Color.DARK_GRAY);
        lista_req.setForegroundSelectColor(new Color(254, 254, 254));
        lista_dev.setBackGroundColor(UIManager.getColor("Table.background"));
        lista_dev.setForegroundcolor(new Color(1, 1, 1));
        lista_dev.setSelectColor(Color.DARK_GRAY);
        lista_dev.setForegroundSelectColor(new Color(254, 254, 254));
        lista_req.setPanelColor(new Color(245, 245, 220), new Color(1, 1, 1));
        lista_dev.setPanelColor(new Color(245, 245, 220), new Color(1, 1, 1));
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder2 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder2.setCornerSize(6);
        dropShadowBorder2.setShadowSize(3);
        dropShadowBorder2.setShowLeftShadow(true);
        jScrollPaneRequisicoes.setBorder(javax.swing.BorderFactory.createCompoundBorder(dropShadowBorder2, javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        jScrollPaneDevolucoes.setBorder(javax.swing.BorderFactory.createCompoundBorder(dropShadowBorder2, javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));

        jPanelInformaCimaBaixo.setBackground(new Color(254, 254, 254));
        javax.swing.border.Border bord = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(1, 1, 1, 75)), new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, false));
        jPanelInformaCimaBaixo.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 8, 4, 6, jPanelCima.getBackground()), bord));
        jPanelInformaBaixoBaixo.setBackground(new Color(254, 254, 254));
        javax.swing.border.Border bordBaixo = javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(1, 1, 1, 75)), new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, false));
        jPanelInformaBaixoBaixo.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 6, 4, 8, jPanelBaixo.getBackground()), bordBaixo));
        jScrollPaneInformaCima.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(1, 1, 1))));
        jScrollPaneInformaBaixo.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(1, 1, 1))));
        jTextFieldProcuraCima.setBackground(new Color(254, 254, 254));
        jTextFieldProcuraCima.setForeground(new Color(201, 201, 201));
        javax.swing.border.Border borderpesquisacima1 = BorderFactory.createMatteBorder(5, 8, 5, 5, jPanelCima.getBackground());
        javax.swing.border.Border borderpesquisacima3 = BorderFactory.createCompoundBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(1, 1, 1, 75)), javax.swing.BorderFactory.createLineBorder(Color.BLACK, 1));
        javax.swing.border.Border borderpesquisacima2 = BorderFactory.createCompoundBorder(borderpesquisacima1, borderpesquisacima3);
        jTextFieldProcuraCima.setBorder(javax.swing.BorderFactory.createCompoundBorder(borderpesquisacima2, javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 10)));

        jTextFieldProcuraBaixo.setBackground(new Color(254, 254, 254));
        jTextFieldProcuraBaixo.setForeground(new Color(201, 201, 201));
        javax.swing.border.Border borderpesquisabaixo1 = BorderFactory.createMatteBorder(5, 5, 5, 8, jPanelBaixo.getBackground());
        javax.swing.border.Border borderpesquisabaixo3 = BorderFactory.createCompoundBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(1, 1, 1, 75)), javax.swing.BorderFactory.createLineBorder(Color.BLACK, 1));
        javax.swing.border.Border borderpesquisabaixo2 = BorderFactory.createCompoundBorder(borderpesquisabaixo1, borderpesquisabaixo3);
        jTextFieldProcuraBaixo.setBorder(javax.swing.BorderFactory.createCompoundBorder(borderpesquisabaixo2, javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 10)));

        jScrollPaneRequisicoes.getCorner(javax.swing.JScrollPane.UPPER_TRAILING_CORNER).setBackground(new Color(145, 145, 145));
        javax.swing.JLabel l = (javax.swing.JLabel) jScrollPaneRequisicoes.getCorner(javax.swing.JScrollPane.UPPER_TRAILING_CORNER);
        l.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(1, 1, 1)));
        l.setBackground(new Color(165, 165, 165));
        l = (javax.swing.JLabel) jScrollPaneDevolucoes.getCorner(javax.swing.JScrollPane.UPPER_TRAILING_CORNER);
        l.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(1, 1, 1)));
        l.setBackground(new Color(165, 165, 165));

        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer() {
            private static final long serialVersionUID = 1L;

            @Override
            public Component getTableCellRendererComponent(JTable table,
                    Object value, boolean isSelected, boolean hasFocus,
                    int row, int column) {
                super.getTableCellRendererComponent(table, value, isSelected, hasFocus,
                        row, column);
                setFont(new Font("Cantarell", Font.PLAIN, 14));
                this.setBorder(BorderFactory.createMatteBorder(0, 1, 1, 0, new Color(0, 0, 0)));

                return this;
            }

        };
        headerRenderer.setBackground(new Color(165, 165, 165));
        headerRenderer.setForeground(Color.WHITE);
        headerRenderer.setHorizontalAlignment(javax.swing.JLabel.CENTER);

        DefaultTableCellRenderer headerRenderer2 = new DefaultTableCellRenderer() {
            private static final long serialVersionUID = 1L;

            @Override
            public Component getTableCellRendererComponent(JTable table,
                    Object value, boolean isSelected, boolean hasFocus,
                    int row, int column) {
                super.getTableCellRendererComponent(table, value, isSelected, hasFocus,
                        row, column);
                setFont(new Font("Cantarell", Font.PLAIN, 14));
                this.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(0, 0, 0)));
                return this;
            }

        };
        headerRenderer2.setBackground(new Color(165, 165, 165));
        headerRenderer2.setForeground(Color.WHITE);
        headerRenderer2.setHorizontalAlignment(javax.swing.JLabel.CENTER);

        for (int i = 0; i < lista_req.getTable().getModel().getColumnCount(); i++) {
            if (i == 0) {
                lista_req.getTable().getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer2);
            } else {
                lista_req.getTable().getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
            }
        }
        for (int i = 0; i < lista_dev.getTable().getModel().getColumnCount(); i++) {
            if (i == 0) {
                lista_dev.getTable().getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer2);
            } else {
                lista_dev.getTable().getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
            }
        }
    }

    public boolean isRowVisible(javax.swing.JTable table, int rowIndex) {
        if (!(table.getParent() instanceof javax.swing.JViewport)) {
            return true;
        }
        javax.swing.JViewport viewport = (javax.swing.JViewport) table.getParent();
        java.awt.Rectangle rect = table.getCellRect(rowIndex, 1, true);
        java.awt.Point pt = viewport.getViewPosition();
        rect.setLocation(rect.x - pt.x, rect.y - pt.y);
        return new java.awt.Rectangle(viewport.getExtentSize()).contains(rect);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KeyQuest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            prefs = new PersonalPrefs();
            prefs.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            prefs.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton jButtonAlteraDevolucao;
    javax.swing.JButton jButtonAtuacaoAltera;
    javax.swing.JButton jButtonAtuacaoConfirma;
    javax.swing.JButton jButtonConfirmaDevolucao;
    javax.swing.JButton jButtonDefBreakApagar;
    javax.swing.JButton jButtonDefBreaksAdicionar;
    javax.swing.JButton jButtonDefBreaksVoltar;
    javax.swing.JButton jButtonDefHolidaysApagar;
    javax.swing.JButton jButtonDefHolidaysDireita;
    javax.swing.JButton jButtonDefHolidaysMais;
    javax.swing.JButton jButtonDefHolidaysVoltar;
    javax.swing.JButton jButtonLinguaMudaConfirma;
    /*
    javax.swing.JButton jButtonListaBotoes;
    */

    Components.PersonalButton jButtonListaBotoes;
    javax.swing.JButton jButtonProcuraBaixo;
    javax.swing.JButton jButtonProcuraCima;
    javax.swing.JComboBox<String> jComboBox1;
    javax.swing.JComboBox<String> jComboBox2;
    javax.swing.JComboBox<String> jComboBoxDefBreaksAnoFim;
    javax.swing.JComboBox<String> jComboBoxDefBreaksAnoInicio;
    javax.swing.JComboBox<String> jComboBoxDefBreaksDiaFim;
    javax.swing.JComboBox<String> jComboBoxDefBreaksDiaInicio;
    javax.swing.JComboBox<String> jComboBoxDefBreaksMesFim;
    javax.swing.JComboBox<String> jComboBoxDefBreaksMesInicio;
    javax.swing.JComboBox<String> jComboBoxListaBotoes;
    javax.swing.JComboBox<String> jComboBoxMudaLinguagem;
    javax.swing.JComboBox<String> jComboBoxMudaTema;
    javax.swing.JComboBox<String> jComboBoxPesquisaOpcao;
    javax.swing.JComboBox<String> jComboBoxScrollAtivo;
    javax.swing.JComboBox<String> jComboBoxVista;
    javax.swing.JDialog jDialog1;
    javax.swing.JDialog jDialogDefBreaks;
    javax.swing.JDialog jDialogDefHolidays;
    javax.swing.JDialog jDialogDefOpcoes;
    javax.swing.JDialog jDialogListaBotoes;
    javax.swing.JLabel jLabel1;
    javax.swing.JLabel jLabel2;
    javax.swing.JLabel jLabel3;
    javax.swing.JLabel jLabel4;
    javax.swing.JLabel jLabelAuxiliarScroll;
    javax.swing.JLabel jLabelDefBreaksAnoFim;
    javax.swing.JLabel jLabelDefBreaksAnoInicio;
    javax.swing.JLabel jLabelDefBreaksDiaFim;
    javax.swing.JLabel jLabelDefBreaksDiaInicio;
    javax.swing.JLabel jLabelDefBreaksInicio;
    javax.swing.JLabel jLabelDefBreaksMesFim;
    javax.swing.JLabel jLabelDefBreaksMesInicio;
    javax.swing.JLabel jLabelDefBreaksNome;
    javax.swing.JLabel jLabelDefBreaksTermino;
    javax.swing.JLabel jLabelDetalhesBaixo;
    javax.swing.JLabel jLabelDetalhesCima;
    javax.swing.JLabel jLabelLimpaPesquisaBaixo;
    javax.swing.JLabel jLabelLimpaPesquisaCima;
    javax.swing.JLabel jLabelLinguaMuda;
    javax.swing.JLabel jLabelListaFeriadosDefeito;
    javax.swing.JLabel jLabelListaFeriadosEscolhidos;
    javax.swing.JLabel jLabelMudaLinguagem;
    javax.swing.JLabel jLabelMudaTamanhoDivisor;
    javax.swing.JLabel jLabelMudaTemaQuadros;
    javax.swing.JLabel jLabelTituloDefOpcoes;
    javax.swing.JLabel jLabelTituloDevolucoes;
    javax.swing.JLabel jLabelTitulorequisicoes;
    javax.swing.JList<String> jListFeriadosDefeito;
    javax.swing.JList<String> jListFeriadosEscolhidos;
    javax.swing.JList<String> jListFerias;
    javax.swing.JPanel jPanel2;
    javax.swing.JPanel jPanel3;
    javax.swing.JPanel jPanel4;
    javax.swing.JPanel jPanelBaixo;
    javax.swing.JPanel jPanelCima;
    javax.swing.JPanel jPanelDefBreaks;
    javax.swing.JPanel jPanelDefHolidays;
    javax.swing.JPanel jPanelDefOpcoes;
    javax.swing.JPanel jPanelDetalhesCima;
    javax.swing.JPanel jPanelInformaBaixoBaixo;
    javax.swing.JPanel jPanelInformaBaixoCima;
    javax.swing.JPanel jPanelInformaCimaBaixo;
    javax.swing.JPanel jPanelInformaCimaCima;
    javax.swing.JPanel jPanelInicial;
    javax.swing.JPanel jPanelLimpaPesquisaBaixo;
    javax.swing.JPanel jPanelListaBotoes;
    javax.swing.JPanel jPanelListaFeriadosDefeito;
    javax.swing.JPanel jPanelListaFeriadosEscolhidos;
    javax.swing.JPanel jPanelMudaCorSlider;
    javax.swing.JRadioButton jRadioButtonCarnaval;
    javax.swing.JRadioButton jRadioButtonCorpoDeus;
    javax.swing.JRadioButton jRadioButtonPascoa;
    javax.swing.JRadioButton jRadioButtonSextaFeira;
    javax.swing.JScrollPane jScrollPane2;
    javax.swing.JScrollPane jScrollPaneDevolucoes;
    javax.swing.JScrollPane jScrollPaneFeriadosDefeito;
    javax.swing.JScrollPane jScrollPaneFeriadosEscolhidos;
    javax.swing.JScrollPane jScrollPaneInformaBaixo;
    javax.swing.JScrollPane jScrollPaneInformaCima;
    javax.swing.JScrollPane jScrollPaneMaterialBotoes;
    javax.swing.JScrollPane jScrollPaneRequisicoes;
    javax.swing.JSeparator jSeparator1;
    javax.swing.JSeparator jSeparator2;
    javax.swing.JSeparator jSeparator3;
    javax.swing.JSeparator jSeparator4;
    javax.swing.JSlider jSliderTamanhoDivisor;
    javax.swing.JSplitPane jSplitPaneInicial;
    javax.swing.JTabbedPane jTabbedPaneMaterialBotoes;
    javax.swing.JTextField jTextFieldDefBreaksNome;
    javax.swing.JTextField jTextFieldProcuraBaixo;
    javax.swing.JTextField jTextFieldProcuraCima;
    /*
    javax.swing.JToggleButton jToggleButton1;
    */
    Components.PersonalToggleButton jToggleButton1;
    /*
    javax.swing.JToggleButton jToggleButtonBarEntregas;
    */
    Components.PersonalToggleButton jToggleButtonBarEntregas;
    /*
    javax.swing.JToggleButton jToggleButtonBarRequisicoes;
    */
    Components.PersonalToggleButton jToggleButtonBarRequisicoes;
    // End of variables declaration//GEN-END:variables
    protected boolean booleanBoxLanguage;
    private RequestList requisicoes;
    private RequestList devolucoes;
    private java.util.List<Keys.TypeOfMaterial> tiposmateriais;
    private String urlbd;
    private String urlcsv;
    private static PersonalPrefs prefs;
    protected Langs.Locale lingua;
    private ButtonListRequest btrequests;
    private TableRequest lista_req;
    private TableRequest lista_dev;
    protected int tdivisor = 40;
    private boolean mudoutema;
    protected Color cordivisor;
    protected HolidaysList feriados;
    protected TimeDate.BreakPeriodList intervalos;
    protected int vista = 0;
    protected String tema = "claro";
    private Timer scroll;
    protected Keys.TypeOfMaterial tipomaterial;
    private final String[] spesquisa = new String[2];
    protected int pesquisa;
    private String copiar;
    private String colar;
    public Color systemColor;
    protected boolean scrollAtivo;
    private Thread auxiliar = new Thread();
    protected byte[] bitpagina = new byte[2];
    public final Color COR_DIVISOR = Color.DARK_GRAY;
    private final String DEFAULT_URlCSV = "http://localhost:8080/horario_disciplinas.csv";
    private final String DEFAULT_URlBD = "jdbc:mysql://localhost:3306/clavis?autoReconnect=false&useSSL=false&user=root&password=sobral";
    private boolean ligacao = false;
    private boolean estado = false;

    public void addTestConnection() {
        estado = ligacao;
        Timer t = new Timer(1000 * 10, (ActionEvent e) -> {
            ligacao = DataBase.DataBase.testConnection(urlbd);
            if (estado != ligacao) {
                Keys.TypeOfMaterial material = new Keys.TypeOfMaterial(-1, "Nenhum", -1, -1, "sem");;
                if (ligacao) {
                    int aux = 0;
                    DataBase.DataBase db = new DataBase.DataBase(urlbd);
                    tiposmateriais = db.getTypesOfMaterial();
                    db.close();
                    String[] lista = new String[tiposmateriais.size()];
                    int i = 0;
                    for (Keys.TypeOfMaterial mat : tiposmateriais) {
                        lista[i] = lingua.translate(mat.getTypeOfMaterialName());
                        if (mat.getMaterialTypeID() == tipomaterial.getMaterialTypeID()) {
                            aux = i;
                        }
                        i++;
                    }
                    jComboBoxListaBotoes.setModel(new javax.swing.DefaultComboBoxModel<>(lista));
                    if (aux >= 0) {
                        jComboBoxListaBotoes.setSelectedIndex(aux);
                    }
                    material = tipomaterial;
                } else {
                    tiposmateriais = new java.util.ArrayList<>();
                    jComboBoxListaBotoes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{lingua.translate("Nenhum")}));
                }
                this.calculateList(material);
                estado = ligacao;
            }
        }
        );
        t.start();
    }

    public void setURLcsv(String csv) {
        this.urlcsv = csv;
    }

    public String getURLcsv() {
        return this.urlcsv;
    }

    public void setURLbd(String bd) {
        this.urlbd = bd;
    }

    public String getURLbd() {
        return this.urlbd;
    }

    private void createAspect() {
        NimbusLookAndFeel laf = new NimbusLookAndFeel();
        try {
            UIManager.setLookAndFeel(laf);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(KeyQuest.class.getName()).log(Level.SEVERE, null, ex);
        }
        laf.getDefaults().put("nimbusSelection", Color.DARK_GRAY);
        Painter<Component> p = (Graphics2D g, Component object, int width1, int height1) -> {
            g.setColor(Color.DARK_GRAY);
            g.fill3DRect(1, 1, width1 - 2, height1 - 2, false);
        };
        laf.getDefaults().put("MenuBar:Menu[Selected].backgroundPainter", p);
        laf.getDefaults().put("PopupMenu.contentMargins", new java.awt.Insets(10, 4, 10, 4));
        Painter<Component> mo = (Graphics2D g, Component object, int width1, int height1) -> {
            g.setColor(new Color(254, 254, 254));
            g.setBackground(Color.BLUE);
            g.fill3DRect(0, 0, width1, height1, true);
            g.setColor(Color.BLACK);
            g.draw3DRect(0, 0, width1 - 1, height1 - 1, true);
        };
        laf.getDefaults().put("ScrollBar:ScrollBarTrack[Disabled].backgroundPainter", mo);
        Painter<Component> m = (Graphics2D g, Component object, int width1, int height1) -> {
            g.setColor(new Color(254, 254, 254));
            g.setBackground(Color.BLUE);
            g.fill3DRect(0, 0, width1, height1, true);
            g.setColor(Color.BLACK);
            g.draw3DRect(0, 0, width1 - 1, height1 - 1, true);
        };

        Painter<Component> textback = (Graphics2D g, Component object, int width1, int height1) -> {
            g.setColor(new Color(254, 254, 254));
            g.fill(new RoundRectangle2D.Double(2, 2, width1, height1-5, 8, 8));
            g.setColor(Color.DARK_GRAY);
            g.draw(new RoundRectangle2D.Double(2, 2, width1, height1 - 5, 8, 8));
            g.setColor(new Color(145, 145, 145));
            g.drawLine(7, height1 - 2, width1, height1 - 2);

        };
        
        Painter<Component> iconnormal = (Graphics2D g, Component object, int width1, int height1) -> {
            g.setColor(new Color(254, 254, 254));
            g.fill(new RoundRectangle2D.Double(-3, 2, width1, height1 - 5, 8, 4));
            g.setColor(Color.DARK_GRAY);
            g.drawLine(0, 2, 0, height1 - 3);
            
            g.draw(new RoundRectangle2D.Double(-3, 2, width1, height1 - 5, 8, 4));
            g.setColor(new Color(145, 145, 145));
            g.drawLine(0, height1 - 2, width1 - 7, height1 - 2);

        };
        Painter<Component> iconpressed = (Graphics2D g, Component object, int width1, int height1) -> {
            java.awt.GradientPaint paint = new java.awt.GradientPaint(0, 0, Color.WHITE, 0, height1 / 2, new Color(185, 185, 185), true);
            g.setPaint(paint);
            g.fill(new RoundRectangle2D.Double(-3, 2, width1, height1 - 5, 8, 4));
            g.setColor(Color.DARK_GRAY);
            g.drawLine(0, 2, 0, height1 - 4);
            g.draw(new RoundRectangle2D.Double(-3, 2, width1, height1 - 5, 8, 4));
            g.setColor(new Color(145, 145, 145));
            g.drawLine(0, height1 - 2, width1 - 7, height1 - 2);

        };
        Painter<Component> textfocus = (Graphics2D g, Component object, int width1, int height1) -> {
            g.setColor(new Color(54, 54, 54));
            g.fill(new RoundRectangle2D.Double(2, 2, width1-5, height1-5, 8, 8));
            //g.fill(new RoundRectangle2D.Double(0, 2, width1 - 3, height1, 6, 6));

        };
        Painter<Component> iconnormalspinnercima = (Graphics2D g, Component object, int width1, int height1) -> {
            g.setColor(new Color(104, 154, 154));
            g.fill(new RoundRectangle2D.Double(0, 2, width1 - 3, height1, 6, 6));
            g.setColor(Color.DARK_GRAY);
            g.drawLine(0, 2, 0, height1);
            g.drawLine(0, height1 - 1, width1 - 3, height1 - 1);
            g.draw(new RoundRectangle2D.Double(-2, 2, width1 - 1, height1, 6, 6));
        };
        
        Painter<Component> iconnormalspinnerbaixo = (Graphics2D g, Component object, int width1, int height1) -> {
            g.setColor(new Color(104, 154, 154));
            g.fill(new RoundRectangle2D.Double(-2, -1, width1 - 1, height1-2, 6, 6));
            g.setColor(Color.DARK_GRAY);
            g.drawLine(0, 0, 0, height1-2);
            g.draw(new RoundRectangle2D.Double(-2, -3, width1 - 1, height1, 6, 6));
            g.setColor(new Color(145, 145, 145));
            g.drawLine(0, height1 - 2, width1 - 7, height1 - 2);
        };

        Painter<Component> iconhoverspinnercima = (Graphics2D g, Component object, int width1, int height1) -> {
            java.awt.GradientPaint paint = new java.awt.GradientPaint(0, 0, Color.WHITE, 0, height1 / 2, new Color(185, 185, 185), true);
            g.setPaint(paint);
            g.fill(new RoundRectangle2D.Double(0, 2, width1 - 3, height1, 6, 6));
            g.setColor(Color.DARK_GRAY);
            g.drawLine(0, 2, 0, height1);
            g.drawLine(0, height1 - 1, width1 - 3, height1 - 1);
            g.draw(new RoundRectangle2D.Double(-2, 2, width1 - 1, height1, 6, 6));
            
        };
        
        Painter<Component> iconhoverspinnerbaixo = (Graphics2D g, Component object, int width1, int height1) -> {
            java.awt.GradientPaint paint = new java.awt.GradientPaint(0, 0, Color.WHITE, 0, height1 / 2, new Color(185, 185, 185), true);
            g.setPaint(paint);
            g.fill(new RoundRectangle2D.Double(-2, -1, width1 - 1, height1-3, 6, 6));
            g.setColor(Color.DARK_GRAY);
            g.drawLine(0, 0, 0, height1-2);
            g.draw(new RoundRectangle2D.Double(-2, -3, width1 - 1, height1, 6, 6));
            g.setColor(new Color(145, 145, 145));
            g.drawLine(0, height1 - 2, width1 - 7, height1 - 2);
        };

        Painter<Component> iconpressedspinnercima = (Graphics2D g, Component object, int width1, int height1) -> {
            java.awt.GradientPaint paint = new java.awt.GradientPaint(0, 0, Color.WHITE, 0, height1 / 2, new Color(85, 85, 85), true);
            g.setPaint(paint);
            g.fill(new RoundRectangle2D.Double(0, 2, width1 - 3, height1, 6, 6));
            g.setColor(Color.DARK_GRAY);
            g.drawLine(0, 2, 0, height1);
            g.drawLine(0, height1 - 1, width1 - 3, height1 - 1);
            g.draw(new RoundRectangle2D.Double(-2, 2, width1 - 1, height1, 6, 6));
        };
        
         Painter<Component> iconpressedspinnerbaixo = (Graphics2D g, Component object, int width1, int height1) -> {
            java.awt.GradientPaint paint = new java.awt.GradientPaint(0, 0, Color.WHITE, 0, height1 / 2, new Color(85, 85, 85), true);
            g.setPaint(paint);
            g.fill(new RoundRectangle2D.Double(-2, -1, width1 - 1, height1-3, 6, 6));
            g.setColor(Color.DARK_GRAY);
            g.drawLine(0, 0, 0, height1-2);
            g.draw(new RoundRectangle2D.Double(-2, -3, width1 - 1, height1, 6, 6));
            g.setColor(new Color(145, 145, 145));
            g.drawLine(0, height1 - 2, width1 - 7, height1 - 2);
        };


        laf.getDefaults().put("ComboBox:\"ComboBox.arrowButton\"[Editable+Enabled].backgroundPainter", iconnormal);
        laf.getDefaults().put("ComboBox:\"ComboBox.arrowButton\"[Editable+MouseOver].backgroundPainter", iconnormal);
        laf.getDefaults().put("ComboBox:\"ComboBox.textField\"[Enabled].backgroundPainter", textback);
        laf.getDefaults().put("ComboBox:\"ComboBox.arrowButton\"[Editable+Pressed].backgroundPainter", iconpressed);
        laf.getDefaults().put("ComboBox[Editable+Focused].backgroundPainter", textfocus);
        laf.getDefaults().put("Spinner:Panel:\"Spinner.formattedTextField\"[Focused].backgroundPainter", textback);
        laf.getDefaults().put("Spinner:Panel:\"Spinner.formattedTextField\"[Selected].backgroundPainter", textback);
        laf.getDefaults().put("Spinner:Panel:\"Spinner.formattedTextField\"[Enabled].backgroundPainter", textback);
        laf.getDefaults().put("Spinner:\"Spinner.nextButton\"[Enabled].backgroundPainter", iconnormalspinnercima);
        laf.getDefaults().put("Spinner:\"Spinner.nextButton\"[MouseOver].backgroundPainter", iconhoverspinnercima);
        laf.getDefaults().put("Spinner:\"Spinner.nextButton\"[Pressed].backgroundPainter", iconpressedspinnercima);
        laf.getDefaults().put("Spinner:\"Spinner.previousButton\"[Enabled].backgroundPainter", iconnormalspinnerbaixo);
        laf.getDefaults().put("Spinner:\"Spinner.previousButton\"[MouseOver].backgroundPainter", iconhoverspinnerbaixo);
        laf.getDefaults().put("Spinner:\"Spinner.previousButton\"[Pressed].backgroundPainter", iconpressedspinnerbaixo);

        laf.getDefaults().put("PopupMenu[Enabled].backgroundPainter", m);
        laf.getDefaults().put("OptionPane.background", Color.WHITE);
        laf.getDefaults().put("Panel.background", Color.WHITE);
        laf.getDefaults().put("FileChooser.background", systemColor);
        Painter<JFileChooser> painter = (Graphics2D g, JFileChooser object, int width1, int height1) -> {
            g.setColor(Color.BLACK);
            g.draw3DRect(0, 0, width1 - 1, height1 - 1, true);
            g.setColor(Color.WHITE);
            g.fill3DRect(4, 4, width1 - 9, height1 - 8, true);
            g.setColor(Color.BLACK);
            g.draw3DRect(4, 4, width1 - 10, height1 - 9, true);
        };
        laf.getDefaults().put("FileChooser[Enabled].backgroundPainter", painter);

    }
}
